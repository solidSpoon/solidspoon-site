"use strict";(self.webpackChunksolidspoon_site=self.webpackChunksolidspoon_site||[]).push([[549],{2520:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var r=t(5893),i=t(1151);const a={slug:"summary-of-thread-collaboration-methods-in-java",title:"Java \u7ebf\u7a0b\u95f4\u534f\u4f5c\u65b9\u6cd5\u603b\u7ed3",authors:["solidSpoon"],tags:[]},l=void 0,o={permalink:"/blog/summary-of-thread-collaboration-methods-in-java",editUrl:"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021/03-07-summary-of-thread-collaboration-methods-in-java/index.md",source:"@site/blog/2021/03-07-summary-of-thread-collaboration-methods-in-java/index.md",title:"Java \u7ebf\u7a0b\u95f4\u534f\u4f5c\u65b9\u6cd5\u603b\u7ed3",description:"\u672c\u6587\u603b\u7ed3\u4e00\u4e0b\u6211\u77e5\u9053\u7684 Java \u7ebf\u7a0b\u95f4\u534f\u4f5c\u7684\u65b9\u5f0f\uff0c\u4ee5\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e3a\u4f8b\uff0c\u65b0\u7ebf\u7a0b\u8d1f\u8d23\u8ba1\u7b97\uff0c\u4e3b\u7ebf\u7a0b\u53d6\u5f97\u7ed3\u679c\u3002",date:"2021-03-07T00:00:00.000Z",formattedDate:"2021\u5e743\u67087\u65e5",tags:[],readingTime:9.505,hasTruncateMarker:!1,authors:[{name:"solidSpoon",title:"Maintainer of Hide",url:"https://github.com/solidSpoon",imageURL:"https://github.com/solidSpoon.png",key:"solidSpoon"}],frontMatter:{slug:"summary-of-thread-collaboration-methods-in-java",title:"Java \u7ebf\u7a0b\u95f4\u534f\u4f5c\u65b9\u6cd5\u603b\u7ed3",authors:["solidSpoon"],tags:[]},unlisted:!1,prevItem:{title:"Java \u51fd\u6570\u5f0f\u7f16\u7a0b\u8be6\u89e3",permalink:"/blog/java-functional-programming-explained"},nextItem:{title:"\u81ea\u5b9a\u4e49 ClassLoader \u52a0\u8f7d\u4e00\u4e2a\u52a0\u5bc6 class \u6587\u4ef6",permalink:"/blog/custom-class-loader-loads-encrypted-class-file"}},s={authorsImageUrls:[void 0]},u=[{value:"\u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\u5e76\u53d1\u5de5\u5177",id:"\u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\u5e76\u53d1\u5de5\u5177",level:2},{value:"\u4f7f\u7528\u5faa\u73af\u5224\u65ad",id:"\u4f7f\u7528\u5faa\u73af\u5224\u65ad",level:3},{value:"\u4f7f\u7528 thread.join()",id:"\u4f7f\u7528-threadjoin",level:3},{value:"\u4f7f\u7528\u591a\u7ebf\u7a0b\u5e76\u53d1\u5de5\u5177",id:"\u4f7f\u7528\u591a\u7ebf\u7a0b\u5e76\u53d1\u5de5\u5177",level:2},{value:"\u4e0d\u4f7f\u7528 Future\uff08\u4f7f\u7528\u7c7b\u4f3c\u7b49\u5f85-\u901a\u77e5\u673a\u5236\uff09",id:"\u4e0d\u4f7f\u7528-future\u4f7f\u7528\u7c7b\u4f3c\u7b49\u5f85-\u901a\u77e5\u673a\u5236",level:3},{value:"Synchronized-wait-notify",id:"synchronized-wait-notify",level:4},{value:"Semaphore",id:"semaphore",level:4},{value:"Lock-Condition",id:"lock-condition",level:4},{value:"CyclicBarrier",id:"cyclicbarrier",level:4},{value:"CountDownLatch",id:"countdownlatch",level:4},{value:"\u4f7f\u7528 Future\uff08\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684 submit\uff09",id:"\u4f7f\u7528-future\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684-submit",level:3},{value:"Future",id:"future",level:4},{value:"FutureTask",id:"futuretask",level:4},{value:"CompletableFuture",id:"completablefuture",level:4}];function c(n){const e={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:"\u672c\u6587\u603b\u7ed3\u4e00\u4e0b\u6211\u77e5\u9053\u7684 Java \u7ebf\u7a0b\u95f4\u534f\u4f5c\u7684\u65b9\u5f0f\uff0c\u4ee5\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e3a\u4f8b\uff0c\u65b0\u7ebf\u7a0b\u8d1f\u8d23\u8ba1\u7b97\uff0c\u4e3b\u7ebf\u7a0b\u53d6\u5f97\u7ed3\u679c\u3002"}),"\n",(0,r.jsx)(e.h2,{id:"\u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\u5e76\u53d1\u5de5\u5177",children:"\u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\u5e76\u53d1\u5de5\u5177"}),"\n",(0,r.jsx)(e.h3,{id:"\u4f7f\u7528\u5faa\u73af\u5224\u65ad",children:"\u4f7f\u7528\u5faa\u73af\u5224\u65ad"}),"\n",(0,r.jsx)(e.p,{children:"\u6307\u5b9a\u4e00\u4e2a\u53d8\u91cf\u4f5c\u4e3a\u4fe1\u53f7\uff0c\u7528\u5faa\u73af\u7684\u65b9\u5f0f\u76d1\u63a7\u8fd9\u4e2a\u53d8\u91cf"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'/**\n * \u4f7f\u7528\u5faa\u73af\u4e0d\u65ad\u5224\u65ad\n */\npublic class NoLockMethod {\n    private volatile Integer valve = null;\n\n    public void sum (int num) {\n        valve = fibo(num);\n    }\n\n    private int fibo(int a) {\n        if (a < 2) {\n            return 1;\n        }\n        return fibo(a - 1) + fibo(a - 2);\n    }\n\n    public int getValue() {\n        while (valve == null) {}\n        return valve;\n    }\n\n    public static void main(String[] args) {\n        long start = System.currentTimeMillis();\n        // \u518d\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6216\u7ebf\u57ce\u6c60\n        // \u5f02\u6b65\u6267\u884c \u4e0b\u9762\u65b9\u6cd5\n\n        final NoLockMethod method = new NoLockMethod();\n        Thread thread = new Thread(() -> {\n            method.sum(45);\n        });\n        thread.start();\n        int result = method.getValue(); // \u8fd9\u662f\u5f97\u5230\u7684\u8fd4\u56de\u503c\n\n        // \u786e\u4fdd\u62ff\u5230 resut \u5e76\u8f93\u51fa\n        System.out.println("\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c\u4e3a\uff1a" + result);\n        System.out.println("\u4f7f\u7528\u65f6\u95f4\uff1a" + (System.currentTimeMillis() - start) + " ms");\n\n        // \u7136\u540e\u9000\u51fa main \u7ebf\u7a0b\n    }\n}\n/*\n\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c\u4e3a\uff1a1836311903\n\u4f7f\u7528\u65f6\u95f4\uff1a6438 ms\n */\n'})}),"\n",(0,r.jsx)(e.h3,{id:"\u4f7f\u7528-threadjoin",children:"\u4f7f\u7528 thread.join()"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'/**\n * \u4f7f\u7528 Thread Join\n */\npublic class ThreadJoinMethod {\n    public static void main(String[] args) throws InterruptedException {\n        long start = System.currentTimeMillis();\n        // \u5728\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6216\u7ebf\u7a0b\u6c60\n        // \u5f02\u6b65\u6267\u884c\u4e0b\u9762\u65b9\u6cd5\n        AtomicInteger value = new AtomicInteger();\n        Thread thread = new Thread(() ->{\n            value.set(sum());\n        });\n        thread.start();\n        thread.join();\n\n        int result = value.get(); // \u8fd9\u662f\u62ff\u5230\u7684\u8fd4\u56de\u503c\n\n        // \u786e\u4fdd \u62ff\u5230 result \u5e76\u8f93\u51fa\n        System.out.println("\u5f02\u6b65\u8ba1\u7b97\u7ed3\u679c\u4e3a\uff1a" + result);\n        System.out.println("\u4f7f\u7528\u65f6\u95f4\uff1a" + (System.currentTimeMillis() - start) + " ms");\n        // \u7136\u540e\u9000\u51fa main \u7ebf\u7a0b\n\n    }\n\n    public static int sum () {\n        return fibo(45);\n    }\n\n    private static int fibo(int a) {\n        if (a < 2) {\n            return 1;\n        }\n        return fibo(a - 1) + fibo(a - 2);\n    }\n}\n\n/*\n\u5f02\u6b65\u8ba1\u7b97\u7ed3\u679c\u4e3a\uff1a1836311903\n\u4f7f\u7528\u65f6\u95f4\uff1a5413 ms\n */\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\u4f7f\u7528\u591a\u7ebf\u7a0b\u5e76\u53d1\u5de5\u5177",children:"\u4f7f\u7528\u591a\u7ebf\u7a0b\u5e76\u53d1\u5de5\u5177"}),"\n",(0,r.jsx)(e.h3,{id:"\u4e0d\u4f7f\u7528-future\u4f7f\u7528\u7c7b\u4f3c\u7b49\u5f85-\u901a\u77e5\u673a\u5236",children:"\u4e0d\u4f7f\u7528 Future\uff08\u4f7f\u7528\u7c7b\u4f3c\u7b49\u5f85-\u901a\u77e5\u673a\u5236\uff09"}),"\n",(0,r.jsx)(e.h4,{id:"synchronized-wait-notify",children:"Synchronized-wait-notify"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'/**\n * \u901a\u8fc7\u7684\u7ba1\u7a0b\u7b49\u5f85-\u901a\u77e5\u673a\u5236\uff0c\u6765\u83b7\u53d6\u503c\n * wait() notify()\n */\npublic class SynchronizedMethod {\n    private volatile Integer value = null;\n\n    synchronized public void sum (int num) {\n        value = fibo(num);\n        notifyAll();\n    }\n\n    private int fibo(int a) {\n        if ( a < 2) {\n            return 1;\n        }\n        return fibo(a-1) + fibo(a-2);\n    }\n\n    synchronized public int getValue() throws InterruptedException {\n        while (value == null) {\n            wait();\n        }\n        return value;\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        long start = System.currentTimeMillis();\n        // \u5728\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6216\u7ebf\u7a0b\u6c60\n        // \u5f02\u6b65\u6267\u884c\u4e0b\u9762\u65b9\u6cd5\n        final SynchronizedMethod method = new SynchronizedMethod();\n        Thread thread = new Thread(() -> {\n            method.sum(45);\n        });\n        thread.start();\n\n        int result = method.getValue();// \u8fd9\u662f\u5f97\u5230\u7684\u8fd4\u56de\u503c\n\n        // \u786e\u4fdd\u62ff\u5230 result \u5e76\u8f93\u51fa\n        System.out.println("\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c\u4e3a\uff1a" + result);\n        System.out.println("\u4f7f\u7528\u65f6\u95f4\uff1a" + (System.currentTimeMillis() - start) + " ms");\n    }\n}\n/*\n\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c\u4e3a\uff1a1836311903\n\u4f7f\u7528\u65f6\u95f4\uff1a5198 ms\n */\n\n'})}),"\n",(0,r.jsx)(e.h4,{id:"semaphore",children:"Semaphore"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'/**\n * Semaphore \u65b9\u5f0f\n */\npublic class SemaphoreMethod {\n    private volatile Integer value = null;\n    final Semaphore semaphore = new Semaphore(1);\n\n    public void sum(int num) throws InterruptedException {\n        this.value = fibo(num);\n        semaphore.release();\n    }\n\n    private int fibo(int a) {\n        if (a < 2) {\n            return 1;\n        }\n        return fibo(a - 1) + fibo(a - 2);\n    }\n\n    public int getValue() throws InterruptedException {\n        int result;\n        semaphore.acquire();\n        result = this.value;\n        semaphore.release();\n        return result;\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        long start = System.currentTimeMillis();\n        // \u5728\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6216\u7ebf\u7a0b\u6c60\n        // \u5f02\u6b65\u6267\u884c\u4e0b\u9762\u65b9\u6cd5\n\n        final SemaphoreMethod method = new SemaphoreMethod();\n        method.semaphore.acquire();\n        Thread thread = new Thread(() -> {\n            try {\n                method.sum(45);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        thread.start();\n        int result = method.getValue();\n        System.out.println("\u5f02\u6b65\u8ba1\u7b97\u7ed3\u679c\u4e3a" + result);\n        System.out.println("\u4f7f\u7528\u65f6\u95f4\uff1a" + (System.currentTimeMillis() - start) + " ms");\n        // \u7136\u540e\u9000\u51fa main \u7ebf\u7a0b\n    }\n}\n'})}),"\n",(0,r.jsx)(e.h4,{id:"lock-condition",children:"Lock-Condition"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'public class LockConditionMethod {\n    private volatile Integer value = null;\n    private Lock lock = new ReentrantLock();\n    private Condition calComplete = lock.newCondition();\n\n    public void sum(int num) {\n        lock.lock();\n        value = fibo(num);\n        calComplete.signal();\n        lock.unlock();\n    }\n\n    private int fibo(int a) {\n        if (a < 2) {\n            return 1;\n        }\n        return fibo(a - 1) + fibo(a - 2);\n    }\n\n    public int getValue() {\n        lock.lock();\n        while (value == null) {\n            try {\n                calComplete.await();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            } finally {\n                lock.unlock();\n            }\n        }\n        return value;\n    }\n\n    public static void main(String[] args) {\n        long start = System.currentTimeMillis();\n        // \u5728\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6216\u7ebf\u7a0b\u6c60\n        // \u5f02\u6b65\u6267\u884c\u4e0b\u9762\u65b9\u6cd5\n        final LockConditionMethod method = new LockConditionMethod();\n        Thread thread = new Thread(() -> {\n            method.sum(45);\n        });\n        thread.start();\n        int result = method.getValue(); // \u8fd9\u662f\u5f97\u5230\u7684\u8fd4\u56de\u503c\n\n        // \u786e\u4fdd\u62ff\u5230 result \u5e76\u8f93\u51fa\n        System.out.println("\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c\u4e3a\uff1a" + result);\n        System.out.println("\u4f7f\u7528\u65f6\u95f4\uff1a" + (System.currentTimeMillis() - start) + " ms");\n    }\n}\n/*\n\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c\u4e3a\uff1a1836311903\n\u4f7f\u7528\u65f6\u95f4\uff1a5402 ms\n */\n'})}),"\n",(0,r.jsx)(e.h4,{id:"cyclicbarrier",children:"CyclicBarrier"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'/**\n * CyclicBarrierMethod \u65b9\u5f0f\n */\npublic class CyclicBarrierMethod {\n    private  volatile Integer value = null;\n    CyclicBarrier barrier;\n\n    public void setBarrier(CyclicBarrier barrier) {\n        this.barrier = barrier;\n    }\n\n    public void sum(int num) throws BrokenBarrierException, InterruptedException {\n        value = fibo(num);\n        System.out.println(barrier.await());\n    }\n\n    private int fibo(int a) {\n        if(a < 2) {\n            return 1;\n        }\n        return fibo(a-1) + fibo(a-2);\n    }\n\n    public int getValue(){\n        return value;\n    }\n\n    public static void main(String[] args) {\n        long start = System.currentTimeMillis();\n        final CyclicBarrierMethod method = new CyclicBarrierMethod();\n        CyclicBarrier barrier = new CyclicBarrier(1, () -> {\n            int result = 0; // \u8fd9\u662f\u5f97\u5230\u7684\u53cd\u56de\u503c\n            result = method.getValue();\n\n            // \u786e\u4fdd\u62ff\u5230 result \u5e76\u8f93\u51fa\n            System.out.println("\u5f02\u6b65\u8ba1\u7b97\u7ed3\u679c\u4e3a\uff1a" + result);\n            System.out.println("\u4f7f\u7528\u65f6\u95f4\u4e3a\uff1a" + (System.currentTimeMillis() - start) + " ms");\n        });\n        method.setBarrier(barrier);\n\n        Thread thread = new Thread(() -> {\n            try {\n                method.sum(45);\n            } catch (BrokenBarrierException e) {\n                e.printStackTrace();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        thread.start();\n\n        // \u7136\u540e\u9000\u51fa main \u7ebf\u7a0b\n    }\n}\n'})}),"\n",(0,r.jsx)(e.h4,{id:"countdownlatch",children:"CountDownLatch"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'public class CountDownLatchMethod {\n    private volatile Integer value = null;\n    private CountDownLatch latch;\n\n    public void sum(int num) {\n        value = fibo(num);\n        latch.countDown();\n    }\n\n    private int fibo(int a) {\n        if (a < 2) {\n            return 1;\n        }\n        return fibo(a - 1)  + fibo(a - 2);\n    }\n\n    private int getValue() throws InterruptedException {\n        latch.await();\n        return value;\n    }\n\n    /**\n     * latch \u6ca1\u6709\u91cd\u7f6e\u529f\u80fd\uff0c\u8fd9\u4e2a\u51fd\u6570\u7528\u6765\u4f20\u5165\u65b0\u7684\n     * @param latch\n     */\n    public void setLatch(CountDownLatch latch) {\n        this.latch = latch;\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        long start = System.currentTimeMillis();\n        // \u5728\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6216\u7ebf\u7a0b\u6c60\n        // \u5f02\u6b65\u6267\u884c\u4e0b\u9762\u65b9\u6cd5\n        CountDownLatch latch = new CountDownLatch(1);\n        final CountDownLatchMethod method = new CountDownLatchMethod();\n        method.setLatch(latch);\n        Thread thread = new Thread(() ->{\n            method.sum(45);\n        });\n        thread.start();\n        int result = method.getValue(); // \u8fd9\u662f\u5f97\u5230\u7684\u8fd4\u56de\u503c\n\n        // \u786e\u4fdd \u62ff\u5230 result \u5e76\u8f93\u51fa\n        System.out.println("\u5f02\u6b65\u8ba1\u7b97\u7ed3\u679c\u4e3a\uff1a" + result);\n        System.out.println("\u4f7f\u7528\u65f6\u95f4\uff1a" + (System.currentTimeMillis() - start) + " ms");\n        // \u7136\u540e\u9000\u51fa main \u7ebf\u7a0b\n    }\n}\n/*\n\u5f02\u6b65\u8ba1\u7b97\u7ed3\u679c\u4e3a\uff1a1836311903\n\u4f7f\u7528\u65f6\u95f4\uff1a5318 ms\n */\n'})}),"\n",(0,r.jsx)(e.h3,{id:"\u4f7f\u7528-future\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684-submit",children:"\u4f7f\u7528 Future\uff08\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684 submit\uff09"}),"\n",(0,r.jsx)(e.h4,{id:"future",children:"Future"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'/**\n * Future\n */\npublic class FutureMethod implements Callable {\n\n    private long sum(int num) {\n        return fibo(num);\n    }\n\n    private int fibo(int a) {\n        if (a < 2) {\n            return 1;\n        }\n        return fibo(a - 1) + fibo(a - 2);\n    }\n\n    @Override\n    public Object call() throws Exception {\n        return sum(45);\n    }\n\n    public static void main(String[] args) throws ExecutionException, InterruptedException {\n        long start = System.currentTimeMillis();\n        // \u5728\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6216\u7ebf\u7a0b\u6c60\n        // \u5f02\u6b65\u6267\u884c \u4e0b\u9762\u65b9\u6cd5\n        ExecutorService executorService = Executors.newFixedThreadPool(1);\n        Future<Long> future = executorService.submit(new FutureMethod());\n        long result = future.get(); // \u8fd9\u662f\u5f97\u5230\u7684\u8fd4\u56de\u503ci\n        // \u786e\u4fdd \u62ff\u5230 result \u5e76\u8f93\u51fa\n        System.out.println("\u5f02\u6b65\u8ba1\u7b97\u7ed3\u679c\u4e3a\uff1a" + result);\n        System.out.println("\u4f7f\u7528\u65f6\u95f4\uff1a" + (System.currentTimeMillis() - start) + "ms");\n        // \u7136\u540e\u9000\u51fa main \u7ebf\u7a0b\n        executorService.shutdown();\n    }\n}\n/*\n\u5f02\u6b65\u8ba1\u7b97\u7ed3\u679c\u4e3a\uff1a1836311903\n\u4f7f\u7528\u65f6\u95f4\uff1a5277ms\n */\n'})}),"\n",(0,r.jsx)(e.h4,{id:"futuretask",children:"FutureTask"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'/**\n * FutureTask\n */\npublic class FutureTaskMethod {\n\n    /**\n     * \u53d6\u7ed3\u679c\n     */\n    static class Get implements Callable<Integer> {\n        FutureTask<Integer> sum;\n\n        public Get(FutureTask<Integer> sum) {\n            this.sum = sum;\n        }\n\n        @Override\n        public Integer call() throws Exception {\n            return sum.get();\n        }\n    }\n\n    /**\n     * \u6c42\u7ed3\u679c\n     */\n    static class Sum implements Callable<Integer> {\n        @Override\n        public Integer call() throws Exception {\n            return fibo(45);\n        }\n\n        private int fibo(int a) {\n            if (a < 2) {\n                return 1;\n            }\n            return fibo(a - 1) + fibo(a - 2);\n        }\n    }\n\n    public static void main(String[] args) throws ExecutionException, InterruptedException {\n        long start = System.currentTimeMillis();\n        // \u5728\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6216\u7ebf\u7a0b\u6c60\n        // \u5f02\u6b65\u6267\u884c\u4e0b\u9762\u65b9\u6cd5\n        FutureTask<Integer> sum = new FutureTask<>(new Sum());\n        FutureTask<Integer> get = new FutureTask<>(new Get(sum));\n\n        Thread sumT = new Thread(sum);\n        sumT.start();\n        Thread getT = new Thread(get);\n        getT.start();\n\n        int result = get.get(); // \u8fd9\u662f\u5f97\u5230\u7684\u8fd4\u56de\u503c\n\n        // \u786e\u4fdd\u62ff\u5230 result \u5e76\u8f93\u51fa\n        System.out.println("\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c\u4e3a\uff1a" + result);\n        System.out.println("\u4f7f\u7528\u65f6\u95f4\uff1a" + (System.currentTimeMillis() - start) + " ms");\n\n        // \u7136\u540e\u9000\u51fa main \u7ebf\u7a0b\n    }\n}\n'})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"call()"})," \u6ca1\u6709\u8f93\u5165\u53c2\u6570\uff0c\u6240\u4ee5\u7528\u4e24\u4e2a ",(0,r.jsx)(e.code,{children:"call()"})," \uff0c\u4e00\u4e2a\u7528\u6765\u6307\u5b9a\u56fa\u5b9a\u7684\u8f93\u5165\u53c2\u6570\uff0c\u4ee4\u4e00\u4e2a\u7528\u6765\u83b7\u53d6\u7ed3\u679c\u3002"]}),"\n",(0,r.jsx)(e.h4,{id:"completablefuture",children:"CompletableFuture"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'/**\n * CompletableFuture \u65b9\u5f0f\n */\npublic class CompleteableMethod {\n    public static void main(String[] args) {\n        long start = System.currentTimeMillis();\n        // \u5728\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6216\u7ebf\u7a0b\u6c60\n        // \u5f02\u6b65\u6267\u884c\u4e0b\u9762\u65b9\u6cd5\n\n        int result = CompletableFuture.supplyAsync(() -> sum()).join();\n\n        // \u786e\u4fdd \u62ff\u5230 result \u5e76\u8f93\u51fa\n        System.out.println("\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c\u4e3a\uff1a" + result);\n        System.out.println("\u4f7f\u7528\u65f6\u95f4\uff1a" + (System.currentTimeMillis() - start) + " ms");\n    }\n\n    private static int sum() {\n        return fibo(45);\n    }\n    private static int fibo(int a){\n        if (a < 2) {\n            return 1;\n        }\n        return fibo(a - 1) + fibo(a - 2);\n    }\n}\n'})})]})}function d(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(c,{...n})}):c(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>o,a:()=>l});var r=t(7294);const i={},a=r.createContext(i);function l(n){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),r.createElement(a.Provider,{value:e},n.children)}}}]);