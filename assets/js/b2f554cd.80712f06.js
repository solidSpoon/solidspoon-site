"use strict";(self.webpackChunksolidspoon_site=self.webpackChunksolidspoon_site||[]).push([[1477],{10:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"inventory-lock-master","metadata":{"permalink":"/blog/inventory-lock-master","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2022-06-16-inventory-lock-master/index.md","source":"@site/blog/2022-06-16-inventory-lock-master/index.md","title":"\u9501\u5e93\u5927\u5e08","description":"\u80cc\u666f","date":"2022-06-16T00:00:00.000Z","formattedDate":"2022\u5e746\u670816\u65e5","tags":[],"readingTime":10.88,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"inventory-lock-master","title":"\u9501\u5e93\u5927\u5e08","authors":["solidSpoon"],"tags":[]},"unlisted":false,"nextItem":{"title":"Spring \u4e8b\u52a1\u4f20\u64ad\u7279\u6027","permalink":"/blog/spring-transaction-propagation-characteristics"}},"content":"## \u80cc\u666f\\n\u5e0c\u671b\u5728\u987e\u5ba2\u4e0b\u5355\u65f6\u5bf9\u5e93\u5b58\u660e\u7ec6\u8868\u4e2d\u7684\u5546\u54c1\u8fdb\u884c\u5e93\u5b58\u9501\u5b9a\uff0c\u5e93\u5b58\u660e\u7ec6\u8868\u7b80\u5316\u540e\u5982\u4e0b\u6240\u793a\uff1a\\n\\n![\u80cc\u666f](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/202206130943348.png)\\n\\n\u53ef\u89c1\u4e00\u6761\u4ea7\u54c1\u7f16\u7801\u6709\u53ef\u80fd\u5b58\u5728\u591a\u6761\u5e93\u5b58\u660e\u7ec6\uff0c\u5ba2\u6237\u7684\u8ba2\u5355\u5927\u81f4\u4f1a\u9501\u5b9a\u51e0\u5341\u884c\u7684\u5e93\u5b58\uff0c\u8981\u6c42\u5982\u4e0b\uff1a\\n\\n- \u5c3d\u53ef\u80fd\u5feb\uff0c\u5e76\u53d1\u4e5f\u9ad8\uff0c\u652f\u6301\u591a\u8282\u70b9\\n- \u4e3a\u4e86\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u6700\u597d\u4e0d\u7528 redis \u6263\u51cf\u7684\u65b9\u6848\\n- \u9501\u5e93\u540c\u65f6\u5728\u9501\u5e93\u6d41\u6c34\u8868\u4e2d\u63d2\u5165\u9501\u5e93\u8bb0\u5f55\\n\\n## \u4f18\u5316\u65b9\u6848\\n### \u5206\u6790\\n\\n\u901a\u8fc7\u5206\u6790\u7cfb\u7edf\u73b0\u6709\u7684\u65b9\u6848\uff0c\u53d1\u73b0\u9501\u5e93\u64cd\u4f5c\u65f6\u95f4\u4e3b\u8981\u6d6a\u8d39\u5728\u66f4\u65b0\u5e93\u5b58\u660e\u7ec6\u7684\u9501\u5e93\u6570\u91cf\u4e0a\uff0c\u4e3a\u4e86\u9632\u6b62\u8d85\u5356\uff0c\u6bcf\u4e00\u6761\u66f4\u65b0\u5fc5\u987b\u52a0\u4e0a\u5e93\u5b58\u6821\u9a8c\uff08\u5982\u4e0b\u6240\u793a\uff09\uff0c\u4e00\u65e6\u5931\u8d25\u5c31\u8981\u56de\u6eda\uff0c\u5728\u52a0\u4e4b MySQL \u5e76\u6ca1\u6709\u63d0\u4f9b\u539f\u751f\u6279\u91cf\u66f4\u65b0\u65b9\u6cd5\uff0c\u53ea\u80fd\u6bcf\u884c\u5e93\u5b58\u6267\u884c\u4e00\u6761 SQL\uff0c\u5bfc\u81f4\u9501\u5e93\u65f6\u95f4\u8f83\u957f\u3002\\n\\n```SQL\\nWHERE (stock_quantity - locking_quantity) > 0\\n```\\n\\n### \u63d0\u9ad8\u9501\u5e93\u901f\u5ea6\\n\u4f18\u5316\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u60f3\u8981\u63d0\u9ad8\u6279\u91cf\u9501\u5e93\u7684\u901f\u5ea6\uff0c\u6709\u6ca1\u6709\u65b9\u6cd5\u80fd\u591f\u5728 MySQL \u4e2d\u6a21\u62df\u6279\u91cf\u66f4\u65b0\u5462\uff1f\\n#### WHEN \u8bed\u53e5\\n\u7b54\u6848\u5c31\u662f\u4f7f\u7528 SQL \u7684 `when` \u8bed\u53e5\uff0c\u5728\u7a0b\u5e8f\u4e2d\u62fc\u63a5\u51fa\u5982\u4e0b\u7684 SQL\\n\\n```SQL\\nUPDATE p_stock_instance a  \\nSET a.locking_quantity = CASE a.id  \\n                             WHEN \'027dbba9c04a4ef0baab3983c64bc0b31123\' THEN 3  \\n                             WHEN \'025d4574cd934b69993703e7e99e8ca43\' THEN 6  \\n                             WHEN \'027dbba9c04a4ef0baab3983c64bc0b313\' THEN 2 END,  \\n    a.update_date      = now()  \\nWHERE CASE a.id  \\n          WHEN \'027dbba9c04a4ef0baab3983c64bc0b31123\' THEN (a.stock_quantity - a.locking_quantity) >= 3\\n          WHEN \'025d4574cd934b69993703e7e99e8ca43\' THEN (a.stock_quantity - a.locking_quantity) >= 6\\n          WHEN \'027dbba9c04a4ef0baab3983c64bc0b313\' THEN (a.stock_quantity - a.locking_quantity) >= 2\\n          ELSE 0 END;\\n```\\n\\nSQL \u6267\u884c\u5b8c\u6bd5\u540e\u4f1a\u8fd4\u56de\u66f4\u65b0\u884c\u6570\uff0c\u5728\u7a0b\u5e8f\u4e2d\u5224\u65ad\u66f4\u65b0\u884c\u6570\u662f\u5426\u4e0e\u9884\u671f\u76f8\u7b26\u5373\u53ef\u5224\u65ad\u662f\u5426\u66f4\u65b0\u6210\u529f\uff0c\u7a0b\u5e8f\u793a\u610f\u5982\u4e0b\uff1a\\n\\n```java\\nInteger num = pStockInstanceDao.operationStockSmallData(operationMapping);  \\nif (num != operationMapping.size()) {  \\n    throw new RuntimeException(\\"\u64cd\u4f5c\u5931\u8d25\\");  \\n}\\n```\\n\\n\u8fd9\u79cd\u65b9\u6cd5\u7684\u66f4\u65b0\u901f\u5ea6\u5f88\u5feb\uff0c\u5728\u6211\u7684\u6d4b\u8bd5\u4e2d\uff0c\u66f4\u65b0\u4e24\u4e07\u884c\u5e93\u5b58\u8bb0\u5f55\u7684\u8017\u65f6\u5927\u7ea6 17 \u79d2\u3002\u4f46\u5176\u5b9e\u8fd8\u6709\u66f4\u5feb\u7684\u65b9\u6cd5\u3002\\n\\n#### \u4e34\u65f6\u8868\\n\u4f7f\u7528**\u4e34\u65f6\u8868\u66f4\u65b0\u5e93\u5b58**\u7684\u65b9\u6cd5\u5728\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\u4e0b\u6bd4 WHEN \u8bed\u53e5\u7684\u6027\u80fd\u597d\u5f88\u591a\uff0c\u6d4b\u8bd5\u6761\u4ef6\u4e0b\u66f4\u65b0\u4e24\u4e07\u884c\u5e93\u5b58\u8bb0\u5f55\u8017\u65f6\u5927\u7ea6 1 \u79d2\\n\\n\u4e34\u65f6\u8868\u662f MySQL \u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u8868\uff0c\u4ed6\u6709\u5982\u4e0b\u51e0\u4e2a\u7279\u5f81\uff1a\\n- \u4e34\u65f6\u8868\u662f\u7ebf\u7a0b\u5185\u53ef\u89c1\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u770b\u4e0d\u5230\u5176\u4ed6\u7ebf\u7a0b\u521b\u5efa\u7684\u4e34\u65f6\u8868\\n- \u7ebf\u7a0b\u63a8\u51fa\u540e\u4e34\u65f6\u8868\u5c31\u88ab\u9500\u6bc1\\n- \u4e34\u65f6\u8868\u4e0e\u666e\u901a\u8868\u91cd\u540d\u65f6 MySQL \u4f18\u5148\u9009\u62e9\u4e34\u65f6\u8868\u64cd\u4f5c\\n\\n\u672c\u6848\u4f8b\u4e2d\u521b\u5efa\u4e34\u65f6\u8868\u7684\u8bed\u53e5\u5982\u4e0b\uff1a\\n```SQL\\ncreate temporary table temp_stock_operation  \\n(  \\n    stock_instance_id varchar(64) unique   not null comment \'\u5e93\u5b58\u5b9e\u4f8bID\',  \\n    op_num            int                  not null comment \'\u64cd\u4f5c\u6570\u91cf\',  \\n    success           tinyint(1) default 0 not null comment \'\u662f\u5426\u6210\u529f\'  \\n);\\n```\\n\\n`stock_instance_id` \u5c31\u662f\u5e93\u5b58\u660e\u7ec6\u8868\u4e2d\u7684 `id`\\n\\n**\u66f4\u65b0\u5e93\u5b58\u65f6**\uff1a\\n1. \u521b\u5efa\u4e34\u65f6\u8868\\n2. \u5148\u5c06\u6bcf\u4e00\u884c\u5e93\u5b58\u660e\u7ec6\u8981\u9501\u5b9a\u7684\u5e93\u5b58\u6570\u91cf\u63d2\u5165\u5230\u4e34\u65f6\u8868\u4e2d\\n3. \u7136\u540e\u901a\u8fc7 UPDATE JOIN \u8bed\u53e5\u6279\u91cf\u66f4\u65b0\u5e93\u5b58\uff0c\u540c\u65f6\u5c06\u662f\u5426\u66f4\u65b0\u6210\u529f\u7684\u4fe1\u606f\u4fdd\u5b58\u5728\u4e34\u65f6\u8868\u7684 `success` \u5b57\u6bb5\u4e2d\\n4. \u7edf\u8ba1 `success` \u5b57\u6bb5\uff0c\u5224\u65ad\u662f\u5426\u56de\u6eda\\n5. \u5220\u9664\u4e34\u65f6\u8868\\n\\n\u4f7f\u7528\u7684 UPDATE \u8bed\u53e5\u5982\u4e0b\uff1a\\n\\n```SQL\\nupdate temp_stock_operation o inner join p_stock_instance s  \\n    on o.stock_instance_id = s.id  \\nset o.success          = 1,  \\n    s.locking_quantity = s.locking_quantity + o.op_num  \\nwhere s.stock_quantity - s.locking_quantity >= o.op_num  \\n  and o.success = 0;\\n```\\n\\n\u68c0\u67e5\u662f\u5426\u6210\u529f\uff0c\u8be5\u8bed\u53e5\u8fd4\u56de\u503c\u4e3a 0 \u6216 1 \u3002\\n\\n```SQL\\nselect count(*) = 0 as success  \\nfrom temp_stock_operation  \\nwhere success = 0;\\n```\\n\\n\u6700\u540e\u5220\u9664\u4e34\u65f6\u8868\uff1a\\n\\n```SQL\\ndrop temporary table temp_stock_operation;\\n```\\n\\n#### \u5c06\u4e8c\u8005\u7ed3\u5408\\n\u867d\u7136\u4f7f\u7528\u4e34\u65f6\u8868\u7684\u65b9\u6848\u66f4\u65b0\u5927\u91cf\u6570\u636e\u65f6\u5f88\u5feb\uff0c\u4f46\u662f\u5982\u679c\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u66f4\u65b0\u51e0\u5341\u6761\u5e93\u5b58\u65f6\u5c31\u4f1a\u53d1\u73b0\u901f\u5ea6\u53c8\u53d8\u6162\u4e86\uff0c\u5728\u6211\u7684\u6d4b\u8bd5\u4e2d\uff0c\u66f4\u65b0\u4e09\u56db\u5341\u6761\u7684\u8017\u65f6\u51e0\u4e4e\u4e0e\u66f4\u65b0\u4e24\u4e07\u6761\u76f8\u7b49\u3002\\n\\n\u5c31\u662f\u8bf4\u8fd9\u6761\u66f4\u65b0\u8bed\u53e5\u5728\u6570\u91cf\u5c11\u7684\u65f6\u5019\u6027\u80fd\u4f1a\u4e0b\u964d\\n\\n```SQL\\nupdate temp_stock_operation o inner join p_stock_instance s  \\n    on o.stock_instance_id = s.id  \\nset o.success          = 1,  \\n    s.locking_quantity = s.locking_quantity + o.op_num  \\nwhere s.stock_quantity - s.locking_quantity >= o.op_num  \\n  and o.success = 0;\\n```\\n\\n\u5206\u6790\u5b83\u7684\u6267\u884c\u8ba1\u5212\uff0c\u53d1\u73b0\u5f53\u66f4\u65b0\u884c\u6570\u5c0f\u4e8e 45 \u65f6\uff0cJOIN \u64cd\u4f5c\u4fbf\u4e0d\u4f1a\u8d70\u7d22\u5f15\uff0c\u800c\u662f\u5168\u8868\u626b\u63cf\uff0c\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u3002\u8fd9\u65f6\u5019\u5373\u4f7f\u4f7f\u7528\u4e0b\u9762\u7684 SQL \u8bed\u53e5\u5f3a\u5236\u7d22\u5f15\u4e5f\u662f**\u6ca1\u7528\u7684**\u3002\\n\\n```SQL\\nupdate temp_stock_operation o force index for join (stock_instance_id)\\n    inner join p_stock_instance s  \\n    on o.stock_instance_id = s.id  \\nset o.success          = 1,  \\n    s.locking_quantity = s.locking_quantity + o.op_num  \\nwhere s.stock_quantity - s.locking_quantity >= o.op_num  \\n  and o.success = 0;\\n```\\n\\n\u6240\u4ee5\u6211\u4eec\u8981\u5c06\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7ed3\u5408\uff0c\u6765\u83b7\u5f97\u6700\u4f73\u7684\u6027\u80fd\\n\\n```java\\nif (operationMapping.size() < 45) {  \\n    // WHEN \u8bed\u53e5\u65b9\u6848\\n    Integer num = pStockInstanceDao.operationStockSmallData(operationMapping);  \\n    if (num != operationMapping.size()) {  \\n        throw new RuntimeException(\\"\u64cd\u4f5c\u5931\u8d25\\");  \\n    }  \\n} else {  \\n    // \u4e34\u65f6\u8868\u65b9\u6848\\n    Boolean success = pStockInstanceDao.operationStockBigData(operationMapping);  \\n    if (!success) {  \\n        throw new RuntimeException(\\"\u64cd\u4f5c\u5931\u8d25\\");  \\n    }  \\n}\\n```\\n\\n### \u63d0\u9ad8\u5e76\u53d1\u91cf\\n\u7531\u4e8e\u5e76\u53d1\u65f6\u591a\u4e2a\u7ebf\u7a0b\u95f4\u5b58\u5728\u7ade\u6001\u6761\u4ef6\uff0c\u53ef\u80fd\u5bfc\u81f4\u5e93\u5b58\u6263\u51cf\u5931\u8d25\uff0c\u800c\u524d\u9762\u8bf4\u5230\u5e93\u5b58\u660e\u7ec6\u8868\u4e2d\u4e00\u4ef6\u5546\u54c1\u53ef\u80fd\u5bf9\u5e94\u591a\u6761\u5e93\u5b58\u660e\u7ec6\uff0c\u5c31\u662f\u8bf4\u5982\u679c\u5e76\u53d1\u5bfc\u81f4\u6709\u4e00\u6761\u5e93\u5b58\u660e\u7ec6\u6263\u51cf\u5931\u8d25\u7684\u8bdd\u5f88\u53ef\u80fd\u8fd9\u4e2a\u5546\u54c1\u5728\u5176\u4ed6\u7684\u5e93\u5b58\u660e\u7ec6\u4e2d\u8fd8\u6709\u5e93\u5b58\u3002\u800c\u4e14\u7531\u4e8e\u65e0\u8bba\u66f4\u6ca1\u66f4\u65b0\u6210\u529f\uff0c\u7ebf\u7a0b\u90fd\u4f1a\u5360\u6709\u6570\u636e\u5e93\u884c\u7684\u5199\u9501\uff0c\u8fd9\u5c31\u8981\u6c42\u6211\u4eec\u66f4\u65b0\u5931\u8d25\u65f6\u6700\u597d\u80fd\u591f\u5feb\u901f\u91ca\u653e\u9501\uff0c\u8fd9\u53c8\u4f1a\u5bfc\u81f4\u63a5\u53e3\u4f1a\u8bef\u62a5\u5e93\u5b58\u4e0d\u8db3\u3002\\n\\n#### \u5546\u54c1\u7f16\u7801\u9501\\n\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\u5982\u4e0b\\n1. \u7ebf\u7a0b\u5728\u6267\u884c\u5e93\u5b58\u6570\u91cf\u67e5\u8be2\u524d\u4e3a\u8ba2\u5355\u4e2d\u7684\u6bcf\u4e2a\u5546\u54c1\u7f16\u7801\u83b7\u53d6\u4e00\u4e2a\u5206\u5e03\u5f0f\u9501\uff0c\u53ea\u6709\u83b7\u5f97\u5168\u90e8\u5546\u54c1\u7f16\u7801\u7684\u9501\u65f6\u624d\u8fdb\u884c\u5e93\u5b58\u7684\u67e5\u8be2\u64cd\u4f5c\\n2. \u7ebf\u7a0b\u5728\u66f4\u65b0\u5b8c\u5e93\u5b58\u540e\u91ca\u653e\u6240\u6301\u6709\u7684\u5546\u54c1\u7f16\u7801\u9501\\n\\n```java\\nRLock[] locks = productSids.seream()  \\n        .distinct()  \\n        .map(key -> \\"ced:pStockInstance:\\" + key)  \\n        .sorted()  \\n        .map(key -> redissonClient.getLock(key))  \\n        .toArray(RLock[]::new);  \\nRLock skuLock = redissonClient.getMultiLock(locks);\\n\\n// \u52a0\u9501\\nskuLock.lock();\\n\\n// \u89e3\u9501\\nskuLock.unlockAsync();\\n```\\n\\n\u8fd9\u79cd\u65b9\u6cd5\u5f53\u6240\u6709\u7684\u8ba2\u5355\u90fd\u9501\u5b9a\u540c\u4e00\u4e2a\u5546\u54c1\u65f6\u5c31\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u9000\u5316\u6210\u4e32\u884c\u6267\u884c\uff0c\u6548\u7387\u5f88\u6162\u3002\\n\\n#### \u548c\u5e76\u8bf7\u6c42\\n\u7531\u4e8e\u524d\u6587\u6211\u4eec\u5df2\u7ecf\u5c06\u5e93\u5b58\u66f4\u65b0\u7684\u65b9\u6cd5\u4f18\u5316\u7684\u8db3\u591f\u5feb\uff0c\u56e0\u6b64\u60f3\u9ad8\u6548\u5730\u89e3\u51b3\u7ade\u6001\u6761\u4ef6\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5c06\u5404\u4e2a\u8bf7\u6c42\u7684\u53c2\u6570\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u4e2a\u7ebf\u7a0b\u6279\u91cf\u6263\u51cf\uff0c\u4ece\u800c\u907f\u514d\u7ebf\u7a0b\u95f4\u6263\u51cf\u51b2\u7a81\u3002\\n\\n![\u5408\u5e76\u8bf7\u6c42](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/202206130944601.png)\\n\\n\u4f7f\u7ebf\u7a0b\u963b\u585e\u5e76\u88ab\u5524\u9192\u7684\u5173\u952e\u4ee3\u7801\u5982\u4e0b\\n\\n```java\\npublic class GuardedObject<T, K> {  \\n    //\u53d7\u4fdd\u62a4\u7684\u5bf9\u8c61  \\n    T obj;  \\n    final Lock lock = new ReentrantLock();  \\n    final Condition done = lock.newCondition();  \\n    final int timeout = 60;  \\n    //\u4fdd\u5b58\u6240\u6709GuardedObject  \\n    final static Map<Object, GuardedObject> gos = new ConcurrentHashMap<>();  \\n  \\n    public GuardedObject(K key) {  \\n        this.key = key;  \\n    }  \\n  \\n    K key;  \\n  \\n    // 1. \u88ab\u8bf7\u6c42\u7ebf\u7a0b\u901a\u8fc7\u552f\u4e00 key \u83b7\u5f97\u963b\u585e\u5bf9\u8c61\uff0c\u7136\u540e\u5c06 key \u5b58\u5165\u6d88\u606f\uff0c\u53d1\u9001\u5230\u6263\u51cf\u4e2d\u5fc3  \\n    public static <K> GuardedObject create(K key) {  \\n        GuardedObject go = new GuardedObject(key.toString());  \\n        gos.put(key, go);  \\n        return go;  \\n    }   \\n  \\n    // 2. \u88ab\u8bf7\u6c42\u7ebf\u7a0b\u7a0d\u540e\u8c03\u7528\u963b\u585e\u5bf9\u8c61\u7684\u8be5\u65b9\u6cd5\uff0c\u963b\u585e\uff0c\u7b49\u5f85\u88ab\u5524\u9192\\n    public Optional<T> get(Predicate<T> p) {  \\n        lock.lock();  \\n        Long start = System.currentTimeMillis();  \\n        try {  \\n            while (!p.test(obj)) {  \\n                done.await(timeout, TimeUnit.SECONDS);  \\n                if (System.currentTimeMillis() - start >= timeout * 1000) {  \\n                    gos.remove(key);  \\n                    break;  \\n                }  \\n            }  \\n            return Optional.ofNullable(obj);  \\n        } catch (InterruptedException e) {  \\n            throw new RuntimeException(e);  \\n        } finally {  \\n            lock.unlock();  \\n        }  \\n    }  \\n\\n    // 3. \u7ed3\u679c\u76d1\u542c\u5668\u6839\u636e\u7ed3\u679c\u6d88\u606f\u4e2d\u7684 key \u627e\u5230\u5bf9\u5e94\u963b\u585e\u5bf9\u8c61\uff0c\u4f20\u5165\u7ed3\u679c\u5e76\u5524\u9192\u5bf9\u5e94\u7ebf\u7a0b\\n    public static <K, T> void fireEvent(K key, T obj) {  \\n        GuardedObject go = gos.remove(key);  \\n        if (go != null) {  \\n            go.onChanged(obj);  \\n        }  \\n    } \\n  \\n    //\u4e8b\u4ef6\u901a\u77e5\u65b9\u6cd5  \\n    void onChanged(T obj) {  \\n        lock.lock();  \\n        try {  \\n            this.obj = obj;  \\n            done.signalAll();  \\n        } finally {  \\n            lock.unlock();  \\n        }  \\n    }  \\n}\\n```\\n\\n## \u6027\u80fd\u6d4b\u8bd5\\n\\n\u5b9e\u9a8c\u73af\u5883\u4e3a\u4e86\u83b7\u5f97\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6027\u80fd\uff0c\u5728\u5e93\u5b58\u660e\u7ec6\u4e2d\u5b58\u5165\u4e86\u4e24\u4e07\u4e94\u5343\u6761\u540c\u4e00\u5546\u54c1\uff0c\u5e76\u5c06\u6bcf\u4e00\u6761\u7684\u6570\u636e\u7684\u5e93\u5b58\u6570\u91cf\u8bbe\u7f6e\u4e3a 1\\n\\n\u5728\u6211\u7684\u7535\u8111\u4e2d\u542f\u52a8\u4e24\u4e2a\u670d\u52a1\u63a5\u6536\u8bf7\u6c42\uff0c\u542f\u52a8\u82e5\u5e72\u7ebf\u7a0b\u5bf9\u8be5\u5546\u54c1\u8fdb\u884c\u6263\u51cf\uff0c\u7ed3\u679c\u5982\u4e0b\\n\\n| \u8bf7\u6c42\u7ebf\u7a0b\u6570\u91cf | \u603b\u8ba1\u9501\u5e93\u884c\u6570 | \u5168\u90e8\u5904\u7406\u8017\u65f6 |\\n| -------- | ------------ | -------- |\\n| 100      | 1000         | 1 S       |\\n| 500      | 5000         | 3 S       |\\n| 1000     | 10000        | 4 S       |\\n| 2000     | 20000        | 8 S       | \\n| 3000     | 25000        | 12 S      |\\n\\n## \u6ce8\u610f\u4e8b\u9879\\n\u4ee5\u4e0b\u662f\u6211\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u53d1\u73b0\u7684\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\\n\\n### \u552f\u4e00\u7d22\u5f15\\n\u5728\u521b\u5efa\u4e34\u65f6\u8868\u65f6 `stock_instance_id` \u8981\u521b\u5efa\u552f\u4e00\u7d22\u5f15\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5b57\u6bb5\u8981\u5145\u5f53 JOIN \u8bed\u53e5\u7684\u6761\u4ef6\uff0c\u5b9e\u6d4b\u4e0d\u52a0\u552f\u4e00\u7d22\u5f15\u6027\u80fd\u4f1a\u5f88\u5dee\u3002\\n\\n```SQL\\ncreate temporary table temp_stock_operation  \\n(  \\n    stock_instance_id varchar(64) unique   not null comment \'\u5e93\u5b58\u5b9e\u4f8bID\', \\n```\\n\\n### \u52a0\u5feb\u6d88\u606f\u961f\u5217\u8bfb\u53d6\\n\u6263\u51cf\u4e2d\u5fc3\u7684\u5e93\u5b58\u6263\u51cf\u7ebf\u7a0b\u76f4\u63a5\u4ece\u6d88\u606f\u961f\u5217\u8bfb\u53d6\u6d88\u606f\u6548\u7387\u8f83\u4f4e\uff0c\u5728\u672c\u6848\u4f8b\u4e2d\uff0c\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a\u672c\u5730\u961f\u5217\uff0c\u7528\u5176\u4ed6\u7ebf\u7a0b\u5c06\u6d88\u606f\u961f\u5217\u4e2d\u7684\u6d88\u606f\u642c\u8fd0\u5230\u672c\u5730\u961f\u5217\uff0c\u8ba9\u6263\u51cf\u7ebf\u7a0b\u64cd\u4f5c\u672c\u5730\u961f\u5217\u800c\u4e0d\u662f\u6d88\u606f\u961f\u5217\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5e45\u63d0\u9ad8\u6263\u51cf\u6548\u7387\u3002\\n\\n---\\n\u6e90\u7801\u8bf7\u89c1\uff1ahttps://github.com/solidSpoon/inventory-lock-master"},{"id":"spring-transaction-propagation-characteristics","metadata":{"permalink":"/blog/spring-transaction-propagation-characteristics","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2022/06-16-spring-transaction-propagation-characteristics/index.md","source":"@site/blog/2022/06-16-spring-transaction-propagation-characteristics/index.md","title":"Spring \u4e8b\u52a1\u4f20\u64ad\u7279\u6027","description":"\u95ee\u9898","date":"2022-06-16T00:00:00.000Z","formattedDate":"2022\u5e746\u670816\u65e5","tags":[],"readingTime":4.75,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"spring-transaction-propagation-characteristics","title":"Spring \u4e8b\u52a1\u4f20\u64ad\u7279\u6027","authors":["solidSpoon"],"tags":[]},"unlisted":false,"prevItem":{"title":"\u9501\u5e93\u5927\u5e08","permalink":"/blog/inventory-lock-master"},"nextItem":{"title":"MongoDB \u521d\u63a2","permalink":"/blog/exploring-mongodb"}},"content":"## \u95ee\u9898\\n\u5728\u9879\u76ee\u4e2d\u5199\u51fa\u4e86\u5982\u4e0b\u6a21\u5f0f\u7684\u4ee3\u7801\\n\\n```java\\n@Override  \\n@Transactional  \\npublic void parent() {\\n    // \u671f\u671b\uff1aparent() \u4e0d\u56de\u6eda\\n    balabalaService.child();  \\n}  \\n  \\n@Override    \\npublic void child() {  \\n    try {  \\n        balabalaService.grandChild();  \\n    } catch (Exception ignore) {  \\n        // \u5ffd\u7565\u5f02\u5e38  \\n    }  \\n}  \\n  \\n@Override  \\n@Transactional  \\npublic void grandChild() {  \\n    // \u901a\u8fc7\u629b\u51fa\u5f02\u5e38\u56de\u6eda\u5f53\u524d\u4e8b\u52a1  \\n    throw new RuntimeException(\\"grandChild\\");  \\n}\\n```\\n\\n\u4e0a\u9762\u7684\u4ee3\u7801\u5728 `parent()` \u65b9\u6cd5\u4e2d\u901a\u8fc7 `child()` \u8c03\u7528\u4e86 `grandChild()` \uff0c\u671f\u671b `grandChild()` \u56de\u6eda\u65f6 `parent()` \u4e0d\u4f1a\u56de\u6eda\u3002\\n\\n\u8fd9\u6bb5\u4ee3\u7801\u5b9e\u9645\u4e0a\u662f\u4e0d\u4f1a\u6309\u7167\u9884\u671f\u5de5\u4f5c\u7684\uff0c`parent()` \u65b9\u6cd5\u4e5f\u4f1a\u8ddf\u7740\u56de\u6eda\u3002\\n\\n## \u89e3\u91ca\\n\\n\u5f53 `grandChild()` \u629b\u51fa\u5f02\u5e38\u65f6\uff0c\u4f1a\u5c06\u5f53\u524d\u4e8b\u52a1\u6807\u8bb0\u4e3a\u56de\u6eda\uff0c\u867d\u7136 `child()` \u4e2d\u6355\u83b7\u4e86\u5f02\u5e38\uff0c\u770b\u4f3c `parent()` \u4e0d\u4f1a\u56e0\u4e3a\u5f02\u5e38\u800c\u56de\u6eda\uff0c\u4f46\u7531\u4e8e\u4e8b\u52a1\u7684\u4f20\u64ad\u7279\u6027\uff0c\u73b0\u5728 `grandChild()` \u4e0e `parent()` \u5904\u4e8e\u4e00\u4e2a\u4e8b\u52a1\u4e2d\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u662f `parent()` \u7684\u4e8b\u52a1\u88ab `grandChild()` \u6807\u8bb0\u4e3a\u4e86\u56de\u6eda\uff0c\u5bfc\u81f4 `parent()` \u53d1\u751f\u56de\u6eda\u3002\\n\\n# \u89e3\u51b3\\n\\n## NESTED\\n\\n\u65e2\u7136 `parent()` \u548c `grandChild()` \u4e24\u4e2a\u65b9\u6cd5\u5904\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\uff0c\u6211\u5c31\u60f3\u80fd\u4e0d\u80fd\u5728 `child()` \u65b9\u6cd5\u4e0a\u65b0\u5efa\u4e00\u4e2a\u5d4c\u5957\u4e8b\u52a1\uff0c\u8fd9\u6837 `grandChild()` \u4fbf\u4e0e `child()` \u5904\u4e8e\u540c\u4e00\u4e2a\u4e8b\u7269\uff0c\u56e0\u6b64 `grandChild()` \u56de\u6eda\u65f6\u5c31\u4e0d\u4f1a\u5bfc\u81f4 `parent()` \u56de\u6eda\u3002\\n\\n```java\\n@Override  \\n@Transactional  \\npublic void parent() {\\n    // \u671f\u671b\uff1aparent() \u4e0d\u56de\u6eda\\n    balabalaService.child();  \\n}  \\n  \\n@Override\\n// \u5f00\u542f\u5d4c\u5957\u4e8b\u52a1\\n@Transactional(propagation = Propagation.NESTED)\\npublic void child() {  \\n    try {  \\n        balabalaService.grandChild();  \\n    } catch (Exception ignore) {  \\n        // \u5ffd\u7565\u5f02\u5e38  \\n    }  \\n}  \\n  \\n@Override  \\n@Transactional  \\npublic void grandChild() {  \\n    // \u901a\u8fc7\u629b\u51fa\u5f02\u5e38\u56de\u6eda\u5f53\u524d\u4e8b\u52a1  \\n    throw new RuntimeException(\\"grandChild\\");  \\n} \\n```\\n\\n\u8fd9\u6bb5\u4ee3\u7801\u770b\u8d77\u6765\u6ca1\u5565\u95ee\u9898\uff0c`grandChild()` \u4e0e  `child()` \u5904\u4e8e\u540c\u4e00\u4e2a\u5d4c\u5957\u4e8b\u52a1\u4e2d\uff0c\u5d4c\u5957\u4e8b\u52a1\u7684\u56de\u6eda\u4e0d\u4f1a\u5f71\u54cd\u5916\u5c42\u4e8b\u52a1\u7684\u56de\u6eda\uff0c\u540c\u65f6\u53c8\u5728 `child()` \u6355\u83b7\u4e86\u6240\u6709\u7684\u5f02\u5e38\uff0c\u56e0\u6b64\u5916\u90e8\u4e8b\u7269\u4e5f\u4e0d\u4f1a\u56e0\u4e3a\u63a5\u6536\u5230\u5f02\u5e38\u800c\u56de\u6eda\uff0c\u7136\u800c\u4e8b\u5b9e\u4e5f\u4e0d\u662f\u8fd9\u6837\u7684\u3002\\n\\n`grandChild()` \u65b9\u6cd5\u7684\u4e8b\u52a1\u4f20\u64ad\u7279\u6027\u4e3a\u9ed8\u8ba4\u503c `REQUIRED` \uff0c\u4ed6\u7684\u7279\u6027\u4e4b\u4e00\u662f\u300c\u652f\u6301\u5f53\u524d\u4e8b\u52a1\u300d\uff0c\u90a3\u4e48\u5f53\u524d\u4e8b\u52a1\u662f\u4ec0\u4e48\u5462\uff1f\\n\\n\u901a\u8fc7[[Spring Boot \u6253\u5370\u4e8b\u52a1\u65e5\u5fd7]]\u7b49\u65b9\u5f0f\u53d1\u73b0\u5f53\u524d\u4e8b\u52a1\u662f `parent()` \u65b9\u6cd5\u7684\u4e8b\u52a1\uff0c\u4e5f\u5c31\u662f\u8bf4 `Propagation.NESTED` \u65b9\u5f0f\u521b\u5efa\u7684\u4e8b\u52a1\u4e0d\u662f\u771f\u6b63\u7684\u4e8b\u52a1\uff0c\u5b9e\u9645\u4e0a\u4ed6\u53ea\u662f MySQL \u4e2d\u7684\u4e00\u4e2a\u300csavepoint\u300d\uff0c\u5bfc\u81f4 `grandChild()` \u4ecd\u7136\u4e0e  `child()` \u5904\u5728\u540c\u4e00\u4e2a\u4e8b\u7269\u4e2d\u3002\\n\\n> The SAVEPOINT in MySQL is used for dividing (or) breaking a transaction into multiple units so that the user has a chance of roll backing the transaction up to a specified point. That means using Save Point we can roll back a part of a transaction instead of the entire transaction.\\n\\n\u53ef\u89c1\uff1a**NESTED \u4e2d\u8c03\u7528\u5e26\u4e8b\u52a1\u7684\u65b9\u6cd5\u53ef\u80fd\u5bfc\u81f4\u5916\u5c42\u4e8b\u52a1\u56de\u6eda**\\n\\n## REQUIRES_NEW\\n\\n\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u4f7f\u7528 `Propagation.REQUIRES_NEW` \u521b\u5efa\u4e00\u4e2a\u771f\u6b63\u7684\u4e8b\u52a1\u3002\\n\\n```java\\n@Override  \\n@Transactional  \\npublic void parent() {\\n    // \u671f\u671b\uff1aparent() \u4e0d\u56de\u6eda\\n    balabalaService.child();  \\n}  \\n  \\n@Override\\n// \u5f00\u542f\u5d4c\u5957\u4e8b\u52a1\\n@Transactional(propagation = Propagation.Propagation.REQUIRES_NEW)\\npublic void child() {  \\n    try {  \\n        balabalaService.grandChild();  \\n    } catch (Exception ignore) {  \\n        // \u5ffd\u7565\u5f02\u5e38  \\n    }  \\n}  \\n  \\n@Override  \\n@Transactional  \\npublic void grandChild() {  \\n    // \u901a\u8fc7\u629b\u51fa\u5f02\u5e38\u56de\u6eda\u5f53\u524d\u4e8b\u52a1  \\n    throw new RuntimeException(\\"grandChild\\");  \\n} \\n```\\n\\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cSpring \u4f1a\u6682\u505c\u5f53\u524d\u7684\u4e8b\u52a1\u94fe\u63a5\uff0c\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u94fe\u63a5\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u4e8b\u52a1\uff0c\u4e5f\u5c31\u662f\u8bf4 `REQUIRES_NEW` \u7684\u4e8b\u52a1\u8ddf\u666e\u901a\u7684\u4e8b\u52a1\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002\\n\\n## Catch Exception\\n\\n\u6b64\u65f6\u518d\u8fd0\u884c\u4ee3\u7801\uff0c\u4f1a\u53d1\u73b0 `child()` \u65b9\u6cd5\u629b\u51fa\u4e86\u4e00\u4e2a\u5f02\u5e38\uff0c\u63cf\u8ff0\u4e3a\u300cTransaction rolled back because it has been marked as rollback-only\u300d\uff0c\u5f88\u660e\u663e\u6211\u4eec\u5df2\u7ecf\u5728 `child()` \u4e2d\u6355\u83b7\u4e86\u6240\u6709\u7684\u5f02\u5e38\uff0c\u90a3\u8fd9\u4e2a\u5f02\u5e38\u5c31\u4e0d\u662f\u6211\u4eec\u629b\u51fa\u7684\u3002\u7531\u6b64\u5f97\u77e5\uff0c\u5f53\u4e8b\u52a1\u88ab\u6807\u8bb0\u4e3a rollback-only \u7684\u65f6\u5019\uff0cSpring \u4f1a\u5728\u4e8b\u52a1\u7684\u65b9\u6cd5\u4e0a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002\\n\\n```java\\n@Override  \\n@Transactional  \\npublic void parent() {\\n    // \u671f\u671b\uff1aparent() \u4e0d\u56de\u6eda\\n    try {  \\n        balabalaService.child();  \\n    } catch (Exception e) {  \\n        e.printStackTrace();  \\n    }\\n}  \\n  \\n@Override\\n// \u5f00\u542f\u5d4c\u5957\u4e8b\u52a1\\n@Transactional(propagation = Propagation.Propagation.REQUIRES_NEW)\\npublic void child() {  \\n    try {  \\n        balabalaService.grandChild();  \\n    } catch (Exception ignore) {  \\n        // \u5ffd\u7565\u5f02\u5e38  \\n    }  \\n}  \\n  \\n@Override  \\n@Transactional  \\npublic void grandChild() {  \\n    // \u901a\u8fc7\u629b\u51fa\u5f02\u5e38\u56de\u6eda\u5f53\u524d\u4e8b\u52a1  \\n    throw new RuntimeException(\\"grandChild\\");  \\n} \\n```\\n\\n\u5728 `parent()` \u65b9\u6cd5\u4e2d\u6355\u83b7\u5f02\u5e38\u540e\uff0c\u8fd9\u6bb5\u4ee3\u7801\u7ec8\u4e8e\u5de5\u4f5c\u4e86\u3002"},{"id":"exploring-mongodb","metadata":{"permalink":"/blog/exploring-mongodb","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2022-04-11-exploring-mongodb/index.md","source":"@site/blog/2022-04-11-exploring-mongodb/index.md","title":"MongoDB \u521d\u63a2","description":"\u5bf9\u4e8e\u5df2\u7ecf\u719f\u6089 MySQL \u7684\u540c\u5b66\u6765\u8bf4\uff0c\u521d\u6b21\u63a5\u89e6 MongoDB \u53ef\u80fd\u4f1a\u4e0d\u4e60\u60ef\u5b83\u7684\u8bed\u6cd5\uff0c\u672c\u7bc7\u6587\u7ae0\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5e26\u4f60\u5165\u95e8 MongoDB\u3002","date":"2022-04-11T00:00:00.000Z","formattedDate":"2022\u5e744\u670811\u65e5","tags":[{"label":"MongoDB","permalink":"/blog/tags/mongo-db"}],"readingTime":4.995,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"exploring-mongodb","title":"MongoDB \u521d\u63a2","authors":["solidSpoon"],"tags":["MongoDB"]},"unlisted":false,"prevItem":{"title":"Spring \u4e8b\u52a1\u4f20\u64ad\u7279\u6027","permalink":"/blog/spring-transaction-propagation-characteristics"},"nextItem":{"title":"ClashForWindows tap \u6a21\u5f0f\u65e0\u6cd5\u6b63\u5e38\u8fde\u63a5\u7f51\u7edc","permalink":"/blog/clash-for-windows-tap-mode-cannot-connect-to-network-normally"}},"content":"\u5bf9\u4e8e\u5df2\u7ecf\u719f\u6089 MySQL \u7684\u540c\u5b66\u6765\u8bf4\uff0c\u521d\u6b21\u63a5\u89e6 MongoDB \u53ef\u80fd\u4f1a\u4e0d\u4e60\u60ef\u5b83\u7684\u8bed\u6cd5\uff0c\u672c\u7bc7\u6587\u7ae0\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5e26\u4f60\u5165\u95e8 MongoDB\u3002\\n\\n## \u51c6\u5907\\n\\n\u5bf9\u4e8e MongoDB \u65b0\u624b\uff0c\u53ef\u4ee5\u501f\u52a9 DataGrip \u6765\u5b66\u4e60MongoDB \u8bed\u6cd5\u3002\u5728 MongoDB \u4e2d\u5b9e\u73b0\u51c6\u5907\u597d\u4e24\u4e2a\u8868 \\"old\\" \u548c \\"new\\"\uff0c\u5e76\u968f\u610f\u63d2\u5165\u4e00\u4e9b\u6570\u636e\\n\\n```js\\ndb.createCollection(\\"new\\")  \\ndb.createCollection(\\"old\\")\\n\\ndb.old.insertOne({  \\nid: 1,  \\nname: old  \\n})  \\ndb.new.insertOne({  \\nid: 2,  \\nname: 13,  \\ngoods: 1  \\n})\\n// \u968f\u610f\u63d2\u5165\u6570\u636e\\n```\\n\\n\u5728 DataGrip \u4e2d\u8f93\u5165\u5982\u4e0b\u7684 SQL \u8bed\u53e5\\n\\n```sql\\nselect * from \\"new\\" as aleft left join \\"old\\" as bright on aleft.id = bright.id;\\n```\\n\\n\u7136\u540e\u5728\u8fd9\u6761\u8bed\u53e5\u4e0a\u300c\u53f3\u952e\u300d\uff0c\u9009\u62e9 \u300cShow JS Script\u300d\uff0c\u4f1a\u53d1\u73b0 DataGrip \u4f1a\u5e2e\u52a9\u6211\u4eec\u5c06 SQL \u8bed\u53e5\u8f6c\u4e3a MongoDB \u8bed\u53e5\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7\u7814\u7a76\u8fd9\u4e2a\u8bed\u53e5\u6765\u4f53\u4f1a MongoDB \u7684\u57fa\u672c\u601d\u60f3\\n\\n```js\\ndb.getSiblingDB(\\"test\\").getCollection(\\"new\\").aggregate([  \\n  {  \\n    $project: {\\"aleft\\": \\"$$ROOT\\", \\"_id\\": 0}  \\n  },  \\n  {  \\n    $lookup: {  \\n      localField: \\"aleft.id\\",  \\n      from: \\"old\\",  \\n      foreignField: \\"id\\",  \\n      as: \\"bright\\"  \\n    }  \\n  },  \\n  {  \\n    $unwind: {  \\n      path: \\"$bright\\",  \\n      preserveNullAndEmptyArrays: true  \\n    }  \\n  },  \\n  {  \\n    $replaceRoot: {  \\n      newRoot: {$mergeObjects: [\\"$aleft\\", \\"$bright\\", \\"$$ROOT\\"]}  \\n    }  \\n  },  \\n  {  \\n    $project: {\\"aleft\\": 0, \\"bright\\": 0}  \\n  }  \\n])\\n```\\n\\n## \u5206\u6790\\n\\n### aggregate\\n\\n`db.collection.aggregate(\u7ba1\u9053\uff0c\u9009\u9879)` \u65b9\u6cd5\u53c2\u6570\u63a5\u6536\u4e00\u4e2a\u5305\u542b\u4e86\u82e5\u5e72\u64cd\u4f5c\u7684\u6570\u7ec4\uff0c\u7c7b\u4f3c\u4e8e Linux \u4e2d\u7684\u7ba1\u9053\u4e00\u6837\uff0c\u5bf9\u96c6\u5408\u4f9d\u6b21\u8fdb\u884c\u64cd\u4f5c\u3002\\n\\n### project\\n\\n\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u4e3a `$project` \uff0c\u8fd9\u662f\u4e00\u4e2a\u6620\u5c04\u64cd\u4f5c\\n\\n```json\\n  {  \\n    $project: {\\"aleft\\": \\"$$ROOT\\", \\"_id\\": 0}  \\n  }\\n```\\n\\n\u5176\u4e2d `$$ROOT` \u5373\u5f15\u7528\u9876\u7ea7\u6587\u6863\uff0c\u6548\u679c\u662f\u5c06\u5f53\u524d\u6587\u6863\uff08\u884c\uff09\u7684\u6240\u6709\u6570\u636e\u653e\u5230 `aleft` \u5b57\u6bb5\u4e0b\u3002`\\"_id\\": 0` \u4ee3\u8868\u9690\u85cf `_id` \u884c\uff0c\u5f53\u8bbe\u5b9a\u4e3a `\\"_id\\": 1` \u65f6\u4f1a\u5c55\u793a `_id` \u884c\uff0c\uff08`_id` \u7531 MongoDB \u81ea\u52a8\u751f\u6210\uff09\u7ed3\u679c\u793a\u610f\u5982\u4e0b\uff1a\\n\\n```json\\n[  \\n  {  \\n    \\"aleft\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"6247f1e253a1be11c3b88d8b\\"},  \\n      \\"id\\": 1,  \\n      \\"name\\": 12  \\n    }  \\n  },  \\n  {  \\n    \\"_id\\": {\\"$oid\\": \\"624ce445b67f62529d94a83e\\"}, // \u5f53 _id: 1 \u65f6\u4f1a\u5c55\u793a id \\n    \\"aleft\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"624ce445b67f62529d94a83e\\"},  \\n      \\"id\\": 2,  \\n      \\"name\\": 13,  \\n      \\"goods\\": 1  \\n    }  \\n  }  \\n]\\n```\\n\\n### lookup\\n\\n\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u4e3a\\n\\n```json\\n  {  \\n    $lookup: {  \\n      localField: \\"aleft.id\\",  \\n      from: \\"old\\",  \\n      foreignField: \\"id\\",  \\n      as: \\"bright\\" \\n    } \\n  }\\n```\\n\\n\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u662f\u4e00\u4e2a\u67e5\u627e\u64cd\u4f5c\uff0c\u5b83\u6839\u636e\u7b2c\u4e00\u6b65\u7ed3\u679c\u4e2d\u7684 `aleft.id` \u5b57\u6bb5\uff0c\u5728 `old` \u8868\u4e2d\u67e5\u627e `id` \u4e0e\u4e4b\u76f8\u7b49\u7684\u6587\u6863\uff08\u884c\uff09\uff0c\u5e76\u5c06\u6240\u6709\u5339\u914d\u7684\u7ed3\u679c\u4ee5\u6570\u7ec4\u65b9\u5f0f\u653e\u5728 `bright` \u5b57\u6bb5\u4e0b\uff0c\u7ed3\u679c\u793a\u610f\u5982\u4e0b\uff1a\\n\\n```json\\n[  \\n  {  \\n    \\"aleft\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"6247f1e253a1be11c3b88d8b\\"},  \\n      \\"id\\": 1,  \\n      \\"name\\": 12  \\n     },  \\n    \\"bright\\": [  \\n      {  \\n        \\"_id\\": {\\"$oid\\": \\"624ce82ab67f62529d94a84c\\"},  \\n        \\"id\\": 1,  \\n        \\"name\\": \\"haha\\"  \\n      },  \\n      {  \\n        \\"_id\\": {\\"$oid\\": \\"624ce867b67f62529d94a84e\\"},  \\n        \\"id\\": 1,  \\n        \\"vbsss\\": \\"haha\\"  \\n      }  \\n    ]  \\n  }\\n]\\n```\\n\\n### unwind\\n\\n\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u4e3a\\n\\n```json\\n  {  \\n    $unwind: {  \\n      path: \\"$bright\\",  \\n      preserveNullAndEmptyArrays: true\\n    } \\n  } \\n```\\n\\n\u8fd9\u4e2a\u64cd\u4f5c\u6307\u660e\u4e86\u4f7f\u7528 `$bright` \u5b57\u6bb5\uff0c\u8fd9\u4e2a\u5b57\u6bb5\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c`$unwind` \u64cd\u4f5c\u4f1a\u5c06 `$bright` \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0e `aleft` \u7ec4\u5408\\n\\n```json\\n[  \\n  {  \\n    \\"aleft\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"6247f1e253a1be11c3b88d8b\\"},  \\n      \\"id\\": 1,  \\n      \\"name\\": 12  \\n    },  \\n    \\"bright\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"624ce82ab67f62529d94a84c\\"},  \\n      \\"id\\": 1,  \\n      \\"name\\": \\"haha\\"  \\n     }  \\n  },  \\n  {  \\n    \\"aleft\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"6247f1e253a1be11c3b88d8b\\"},  \\n      \\"id\\": 1,  \\n      \\"name\\": 12  \\n     },  \\n    \\"bright\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"624ce867b67f62529d94a84e\\"},  \\n      \\"id\\": 1,  \\n      \\"vbsss\\": \\"haha\\"  \\n     }  \\n  }\\n]\\n```\\n\\n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u4e24\u4e2a\u8868\u4e2d\u5173\u8054\u7684\u884c\u7ec4\u5408\u5728\u4e86\u4e00\u8d77\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u5c06\u8fd9\u4e2a\u7ed3\u6784\u7b80\u5316\u4e00\u4e0b\\n\\n### replaceRoot\\n\\n\u7b2c\u56db\u4e2a\u64cd\u4f5c\u4e3a\\n\\n```json\\n  {  \\n    $replaceRoot: {  \\n      newRoot: {$mergeObjects: [\\"$aleft\\", \\"$bright\\", \\"$$ROOT\\"]}  \\n    }  \\n  },\\n```\\n\\n### mergeObjects\\n\\n`$mergeObjects` \u64cd\u4f5c\u4f1a\u5c06\u53c2\u6570\u4e2d\u5143\u7d20\u7684\u5185\u5bb9\u8fdb\u884c\u5408\u5e76\uff0c\u5982\u679c\u6709\u91cd\u590d\uff0c\u540e\u9762\u7684\u503c\u4f1a\u8986\u76d6\u524d\u9762\u7684\u503c\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u8fd9\u4e2a\u6587\u6863\\n\\n```json\\n  {  \\n    \\"aleft\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"6247f1e253a1be11c3b88d8b\\"},  \\n      \\"id\\": 1,  \\n      \\"name\\": 12  \\n    },  \\n    \\"bright\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"624ce82ab67f62529d94a84c\\"},  \\n      \\"id\\": 1,  \\n      \\"name\\": \\"haha\\"  \\n     }  \\n  },\\n```\\n\\n\u6267\u884c `$mergeObjects: [\\"$aleft\\", \\"$bright\\", \\"$$ROOT\\"]` \u64cd\u4f5c\u540e\u7ed3\u679c\u5982\u4e0b\\n\\n```json\\n  {  \\n    \\"_id\\": {\\"$oid\\": \\"6247f1e253a1be11c3b88d8b\\"},  \\n    \\"aleft\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"6247f1e253a1be11c3b88d8b\\"},  \\n      \\"id\\": 1,  \\n      \\"name\\": 12  \\n    },  \\n    \\"bright\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"624ce82ab67f62529d94a84c\\"},  \\n      \\"id\\": 1,  \\n      \\"name\\": \\"haha\\"  \\n    },  \\n    \\"id\\": 1,  \\n    \\"name\\": \\"haha\\"  \\n  }\\n```\\n\\n### replaceRoot\\n\\n`$replaceRoot` \u5c06\u6307\u5b9a\u7684\u6587\u6863\u63d0\u5347\u5230\u9876\u5c42\uff0c\u5e76\u4e22\u5f03\u9876\u5c42\u6240\u6709\u5176\u4ed6\u5b57\u6bb5\u3002\\n\\n```json\\n[  \\n  {  \\n    \\"_id\\": {\\"$oid\\": \\"6247f1e253a1be11c3b88d8b\\"},  \\n    \\"aleft\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"6247f1e253a1be11c3b88d8b\\"},  \\n      \\"id\\": 1,  \\n      \\"name\\": 12  \\n    },  \\n    \\"bright\\": {  \\n      \\"_id\\": {\\"$oid\\": \\"624ce82ab67f62529d94a84c\\"},  \\n      \\"id\\": 1,  \\n      \\"name\\": \\"haha\\"  \\n    },  \\n    \\"id\\": 1,  \\n    \\"name\\": \\"haha\\"  \\n  }\\n]\\n\\n```\\n\\n\u81f3\u6b64\uff0c\u53ea\u8981\u5c06 `aleft` \u548c `bright` \u4e24\u4e2a\u53c2\u6570\u5220\u6389\u5c31\u5f97\u5230\u4e86\u6700\u540e\u7684\u7ed3\u679c\uff0c\u64cd\u4f5c\u4e3a\\n\\n```json\\n  {  \\n    $project: {\\"aleft\\": 0, \\"bright\\": 0}  \\n  }\\n```\\n\\n\u7ed3\u679c\u793a\u610f\u5982\u4e0b\\n\\n```json\\n[  \\n  {  \\n    \\"_id\\": {\\"$oid\\": \\"6247f1e253a1be11c3b88d8b\\"},  \\n    \\"id\\": 1,  \\n    \\"name\\": \\"haha\\"  \\n  }\\n]\\n```\\n\\n## \u5176\u4ed6\\n\\nMongoDB \u4e2d\u7684 JOIN \u64cd\u4f5c\u8fd8\u662f\u5341\u5206\u590d\u6742\u7684\uff0c\u4e0e MySQL \u4e0d\u540c\uff0c MongoDB \u4e2d\u7684\u6587\u6863\u7ed3\u6784\u5e76\u6ca1\u6709\u9650\u5236\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528[\u5d4c\u5957\u6587\u6863](https://www.mongodb.com/docs/v4.2/tutorial/query-embedded-documents/)\u7684\u65b9\u5f0f\u5c06\u672c\u6765\u9700\u8981\u5173\u8054\u7684\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u8d77\uff0c\u4ece\u800c\u907f\u514d JOIN \u64cd\u4f5c"},{"id":"clash-for-windows-tap-mode-cannot-connect-to-network-normally","metadata":{"permalink":"/blog/clash-for-windows-tap-mode-cannot-connect-to-network-normally","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2022-02-14-clash-for-windows-tap-mode-cannot-connect-to-network-normally/index.md","source":"@site/blog/2022-02-14-clash-for-windows-tap-mode-cannot-connect-to-network-normally/index.md","title":"ClashForWindows tap \u6a21\u5f0f\u65e0\u6cd5\u6b63\u5e38\u8fde\u63a5\u7f51\u7edc","description":"ClashForWindows \u6b63\u5e38\u60c5\u51b5\u4e0b\u53ea\u80fd\u4ee3\u7406\u901a\u8fc7 Http \u6216 Socks \u4ee3\u7406\u5de5\u4f5c\u3002\u8fd9\u4e24\u79cd\u534f\u8bae\u5de5\u4f5c\u5728\u7f51\u7edc\u6a21\u578b\u4e2d\u7684\u8f83\u9ad8\u5c42\u7ea7\uff0c\u53ef\u80fd\u65e0\u6cd5\u4ee3\u7406\u7cfb\u7edf\u5168\u90e8\u7684\u6d41\u91cf\uff0c\u6bd4\u5982\u5bf9 SSH \u6216 WSL \u7b49\u4e0d\u8d77\u4f5c\u7528\uff0c\u4f7f\u7528\u65f6\u9700\u8981\u5bf9\u8fd9\u4e9b\u5e94\u7528\u5355\u72ec\u914d\u7f6e\u3002\u5176\u5b9e\u4e0b\u9762\u8fd9\u51e0\u4e2a\u9009\u9879\u53ef\u4ee5\u8ba9 ClashForWindows \u6709\u80fd\u529b\u5728 TCP/IP \u5c42\u7ea7\u5de5\u4f5c\uff0c\u4ece\u800c\u4ee3\u7406\u7cfb\u7edf\u5168\u90e8\u6d41\u91cf\uff0c\u5177\u4f53\u7684\u6559\u7a0b\u53c2\u89c1\u5b98\u65b9\u6587\u6863","date":"2022-02-14T00:00:00.000Z","formattedDate":"2022\u5e742\u670814\u65e5","tags":[{"label":"\u6559\u7a0b","permalink":"/blog/tags/\u6559\u7a0b"}],"readingTime":1.415,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"clash-for-windows-tap-mode-cannot-connect-to-network-normally","title":"ClashForWindows tap \u6a21\u5f0f\u65e0\u6cd5\u6b63\u5e38\u8fde\u63a5\u7f51\u7edc","authors":["solidSpoon"],"tags":["\u6559\u7a0b"]},"unlisted":false,"prevItem":{"title":"MongoDB \u521d\u63a2","permalink":"/blog/exploring-mongodb"},"nextItem":{"title":"Java \u51fd\u6570\u5f0f\u7f16\u7a0b\u8be6\u89e3","permalink":"/blog/java-functional-programming-explained"}},"content":"ClashForWindows \u6b63\u5e38\u60c5\u51b5\u4e0b\u53ea\u80fd\u4ee3\u7406\u901a\u8fc7 Http \u6216 Socks \u4ee3\u7406\u5de5\u4f5c\u3002\u8fd9\u4e24\u79cd\u534f\u8bae\u5de5\u4f5c\u5728\u7f51\u7edc\u6a21\u578b\u4e2d\u7684\u8f83\u9ad8\u5c42\u7ea7\uff0c\u53ef\u80fd\u65e0\u6cd5\u4ee3\u7406\u7cfb\u7edf\u5168\u90e8\u7684\u6d41\u91cf\uff0c\u6bd4\u5982\u5bf9 SSH \u6216 WSL \u7b49\u4e0d\u8d77\u4f5c\u7528\uff0c\u4f7f\u7528\u65f6\u9700\u8981\u5bf9\u8fd9\u4e9b\u5e94\u7528\u5355\u72ec\u914d\u7f6e\u3002\u5176\u5b9e\u4e0b\u9762\u8fd9\u51e0\u4e2a\u9009\u9879\u53ef\u4ee5\u8ba9 ClashForWindows \u6709\u80fd\u529b\u5728 TCP/IP \u5c42\u7ea7\u5de5\u4f5c\uff0c\u4ece\u800c\u4ee3\u7406\u7cfb\u7edf\u5168\u90e8\u6d41\u91cf\uff0c\u5177\u4f53\u7684\u6559\u7a0b\u53c2\u89c1[\u5b98\u65b9\u6587\u6863](https://docs.cfw.lbyczf.com/contents/tun.html#windows)\\n\\n![image-20211202230604161](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/2021/12/02/20211202-230605.png)\\n\\n\u8fd9\u91cc\u4e3b\u8981\u63d0\u4e00\u4e0b\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u64cd\u4f5c\u4e4b\u540e\u65e0\u6cd5\u6b63\u5e38\u4ee3\u7406\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u60c5\u51b5 GitHub \u7684 issue \u4e0a\u5df2\u7ecf\u6709\u4e86\u89e3\u51b3\u65b9\u6848\uff0c[\u94fe\u63a5](https://github.com/Fndroid/clash_for_windows_pkg/issues/1243)\u3002\u5982\u679c\u4f60\u4e5f\u8fde\u4e0d\u4e0a\u7f51\uff0c\u4e0d\u59a8\u6392\u67e5\u4e00\u4e0b\u7f51\u5361\u7684\u9a71\u52a8\u6216\u76f8\u5173\u5e94\u7528\\n\\n![image-20211202231142928](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/2021/12/02/20211202-231144.png)\\n\\n\u4f7f\u7528\u4e0a\u8ff0\u65b9\u6cd5\u4ee3\u7406\u7cfb\u7edf\u5168\u90e8\u6d41\u91cf\u65f6\uff0c\u53ef\u4ee5\u5173\u95ed ClashForWindows \u7684 System Proxy \u5f00\u5173\uff0c\u4e5f\u4f1a\u6b63\u5e38\u5de5\u4f5c\u3002\\n\\n\u9700\u8981\u63d0\u53ca\u4e00\u4e0b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u867d\u7136\u53ef\u4ee5\u4ee3\u7406\u5168\u90e8\u7cfb\u7edf\u6d41\u91cf\uff0c\u770b\u8d77\u6765\u5341\u5206\u5f3a\u5927\uff0c\u4f46\u5b83\u7684\u6027\u80fd\u4e0d\u5982\u76f4\u63a5\u4f7f\u7528 Http \u6216 Socks \u4ee3\u7406\uff0c\u6240\u4ee5\u8fd8\u662f\u8981\u770b\u60c5\u51b5\u4f7f\u7528\u4e0d\u540c\u7684\u4ee3\u7406\u65b9\u6848\u3002"},{"id":"java-functional-programming-explained","metadata":{"permalink":"/blog/java-functional-programming-explained","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-09-25-java-functional-programming-explained/index.md","source":"@site/blog/2021-09-25-java-functional-programming-explained/index.md","title":"Java \u51fd\u6570\u5f0f\u7f16\u7a0b\u8be6\u89e3","description":"\u6982\u8981","date":"2021-09-25T00:00:00.000Z","formattedDate":"2021\u5e749\u670825\u65e5","tags":[],"readingTime":13.885,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"java-functional-programming-explained","title":"Java \u51fd\u6570\u5f0f\u7f16\u7a0b\u8be6\u89e3","authors":["solidSpoon"],"tags":[]},"unlisted":false,"prevItem":{"title":"ClashForWindows tap \u6a21\u5f0f\u65e0\u6cd5\u6b63\u5e38\u8fde\u63a5\u7f51\u7edc","permalink":"/blog/clash-for-windows-tap-mode-cannot-connect-to-network-normally"},"nextItem":{"title":"\u81ea\u5b9a\u4e49 ClassLoader \u52a0\u8f7d\u4e00\u4e2a\u52a0\u5bc6 class \u6587\u4ef6","permalink":"/blog/custom-class-loader-loads-encrypted-class-file"}},"content":"## \u6982\u8981\\n\\n\u9996\u5148\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5c55\u793a\u4e00\u4e0b\u4ec0\u4e48\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\\n\\n\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u300cPerson\u300d\u5217\u8868\\n\\n```java\\nList<Person> people = List.of(\\n        new Person(\\"John\\", MALE),\\n        new Person(\\"Maria\\", FEMALE),\\n        new Person(\\"Aisha\\", FEMALE),\\n        new Person(\\"Alex\\", MALE),\\n        new Person(\\"Alice\\", FEMALE)\\n);\\n```\\n\\n\u300cPerson\u300d\u7684\u5b9a\u4e49\u5982\u4e0b\\n\\n```java\\nprivate record Person(String name, Gender gender) {}\\n\\nenum Gender {\\n    MALE, FEMALE\\n}\\n```\\n\\n\u5982\u679c\u6211\u4eec\u60f3\u5728\u5217\u8868\u4e2d\u627e\u5230 FEMALE\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u547d\u4ee4\u5f0f\u65b9\u6cd5\\n\\n```java\\nList<Person> females = new ArrayList<>();\\n\\nfor (Person person : people) {\\n    if (FEMALE.equals(person.gender)) {\\n        females.add(person);\\n    }\\n}\\n\\nfor (Person female : females) {\\n    System.out.println(female);\\n}\\n```\\n\\n\u4f46\u5b83\u5728\u58f0\u660e\u5f0f\u65b9\u6cd5\u4e2d\u66f4\u7b80\u6d01\\n\\n```java\\nPredicate<Person> personPredicate = person -> FEMALE.equals(person.gender);\\nvar females2 = people.stream().filter(personPredicate)\\n        .collect(Collectors.toList());\\n//          .forEach(System.out::println);\\nfemales2.forEach(System.out::println);\\n```\\n\\n---\\n\\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\\n\\n```java\\npublic class Main {\\n    public static void main(String[] args) {\\n        List<Person> people = List.of(\\n                new Person(\\"John\\", MALE),\\n                new Person(\\"Maria\\", FEMALE),\\n                new Person(\\"Aisha\\", FEMALE),\\n                new Person(\\"Alex\\", MALE),\\n                new Person(\\"Alice\\", FEMALE)\\n        );\\n\\n        System.out.println(\\"Imperative approach\\");\\n        // Imperative approach\\n        List<Person> females = new ArrayList<>();\\n        for (Person person : people) {\\n            if (FEMALE.equals(person.gender)) {\\n                females.add(person);\\n            }\\n        }\\n        for (Person female : females) {\\n            System.out.println(female);\\n        }\\n\\n        // Declarative approach\\n        System.out.println(\\"Declarative approach\\");\\n        Predicate<Person> personPredicate = person -> FEMALE.equals(person.gender);\\n        var females2 = people.stream().filter(personPredicate)\\n                .collect(Collectors.toList());\\n//                .forEach(System.out::println);\\n        females2.forEach(System.out::println);\\n    }\\n\\n    private record Person(String name, Gender gender) {}\\n    enum Gender {\\n        MALE, FEMALE\\n    }\\n}\\n```\\n\\n## Function and BiFunction\\n\\n`Function` \u8868\u793a\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570 \\\\<T\\\\> \u5e76\u4ea7\u751f\u7ed3\u679c \\\\<R\\\\> \u7684\u51fd\u6570\u3002\\n\\n```java\\nFunction<T, R>\\n```\\n\\n\u4ee5\u4e0b\u662f `Function` \u7684\u4e00\u4e9b\u4f8b\u5b50\\n\\n```java\\nstatic Function<Integer, Integer> incrementByOneFunction = number -> number + 1;\\nstatic Function<Integer, Integer> multiplyBy10Function = number -> number * 10;\\n---usage\\nvar increment2 = incrementByOneFunction.apply(1);\\nvar multiply = multiplyBy10Function.apply(increment2);\\n```\\n\\n\u9177\uff0c\u5982\u679c\u4f60\u770b\u4e0d\u61c2\uff0c\u90a3\u4e48\u6211\u4eec\u4e4b\u524d\u7528\u547d\u4ee4\u5f0f\u7f16\u7a0b\u662f\u8fd9\u4e48\u5199\u7684\\n\\n```java\\nstatic int incrementByOne(int number) {\\n    return number + 1;\\n}\\n---usage\\nvar increment = incrementByOne(1);\\n```\\n\\n\u66f4\u8fdb\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408\u4e24\u4e2a Function\\n\\n```java\\nvar addBy1AndThenMultiplyBy10 = incrementByOneFunction.andThen(multiplyBy10Function);\\n---usage\\nvar ans = addBy1AndThenMultiplyBy10.apply(4);\\n```\\n\\n`BiFunction` \u8868\u793a\u4e00\u4e2a\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u5e76\u4ea7\u751f\u7ed3\u679c\u7684\u51fd\u6570\u3002\\n\\n\u4f5c\u4e3a\u5bf9\u6bd4\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f20\u7edf\u7684\u4e8c\u53c2\u6570\u65b9\u6cd5\\n\\n```java\\nstatic int incrementByOneAndMultiply(int number, int numberToMultiplyBy) {\\n    return (number + 1) * numberToMultiplyBy;\\n}\\n---usage\\nincrementByOneAndMultiply(4, 100);\\n```\\n\\n\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u8fd9\u6837\u5199\\n\\n```java\\nstatic BiFunction<Integer, Integer, Integer> incrementByOneAndMultiplyBiFunction =\\n        (numberToIncrementByOne, numberToMultiplyBy)\\n                -> (numberToIncrementByOne + 1) * numberToMultiplyBy;\\n---usage\\nincrementByOneAndMultiplyBiFunction.apply(4, 100);\\n```\\n\\n---\\n\\n\u5b8c\u6574\u4ee3\u7801\\n\\n```java\\npublic class _Function {\\n    public static void main(String[] args) {\\n        // Function takes 1 argument and produce 1 result\\n        var increment = incrementByOne(1);\\n        System.out.println(increment);\\n\\n        var increment2 = incrementByOneFunction.apply(1);\\n        System.out.println(increment2);\\n\\n        var multiply = multiplyBy10Function.apply(increment2);\\n        System.out.println(multiply);\\n\\n        var addBy1AndThenMultiplyBy10 = incrementByOneFunction.andThen(multiplyBy10Function);\\n        var ans = addBy1AndThenMultiplyBy10.apply(4);\\n        System.out.println(ans);\\n\\n        // BiFunction takes 2 argument and produce 1 result\\n        System.out.println(incrementByOneAndMultiply(4, 100));\\n        System.out.println(incrementByOneAndMultiplyBiFunction.apply(4, 100));\\n    }\\n\\n    static Function<Integer, Integer> incrementByOneFunction = number -> number + 1;\\n\\n    static Function<Integer, Integer> multiplyBy10Function = number -> number * 10;\\n    static int incrementByOne(int number) {\\n        return number + 1;\\n    }\\n    static BiFunction<Integer, Integer, Integer> incrementByOneAndMultiplyBiFunction =\\n            (numberToIncrementByOne, numberToMultiplyBy)\\n                    -> (numberToIncrementByOne + 1) * numberToMultiplyBy;\\n    static int incrementByOneAndMultiply(int number, int numberToMultiplyBy) {\\n        return (number + 1) * numberToMultiplyBy;\\n    }\\n}\\n```\\n\\n## Consumer and BiConsumer\\n\\n`Consumer` \u8868\u793a\u63a5\u53d7\u5355\u4e2a\u8f93\u5165\u53c2\u6570\u5e76\u4e14\u4e0d\u8fd4\u56de\u7ed3\u679c\u7684\u64cd\u4f5c\u3002\u4e0e\u5927\u591a\u6570\u5176\u4ed6 Functional interface \u4e0d\u540c\uff0c**`Consumer` \u9884\u8ba1\u901a\u8fc7\u526f\u4f5c\u7528\u8fdb\u884c\u64cd\u4f5c**\u3002\\n\\n\u6211\u4eec\u7684 `Customer` \u5b9a\u4e49\u5982\u4e0b\\n\\n```java\\nstatic record Customer(String customerName, String customerPhoneNumber) {}\\n---usage\\nvar maria = new Customer(\\"Maria\\", \\"99999\\");\\n```\\n\\n\u5728\u547d\u4ee4\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u8fd9\u6837\u7f16\u5199\u4ee3\u7801\\n\\n```java\\nstatic void greetConsumer(Customer customer) {\\n    System.out.println(\\"Hello\\" + customer.customerName\\n            + \\", thanks for registering phone number \\"\\n            + customer.customerPhoneNumber);\\n}\\n---usage\\ngreetConsumer(maria);\\n```\\n\\n\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u8fd9\u6837\u7f16\u5199\u4ee3\u7801\\n\\n```java\\nstatic Consumer<Customer> greetCustomerConsumer = customer ->\\n        System.out.println(\\"Hello\\" + customer.customerName\\n                + \\", thanks for registering phone number \\"\\n                + customer.customerPhoneNumber);\\n---usage\\ngreetCustomerConsumer.accept(maria);\\n```\\n\\n`BiConsumer` \u662f `Consumer` \u7684\u4e8c\u53c2\u6570\u7248\u672c\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u63a5\u53d7\u4e24\u4e2a\u8f93\u5165\u53c2\u6570\u5e76\u4e14\u4e0d\u8fd4\u56de\u7ed3\u679c\u7684\u64cd\u4f5c\u3002\\n\\n\u6211\u4eec\u901a\u5e38\u7f16\u5199\u4e0b\u9762\u8fd9\u79cd\u547d\u4ee4\u5f0f\u7f16\u7a0b\u65b9\u6cd5\\n\\n```java\\nstatic void greetConsumerV2(Customer customer, boolean showPhoneNumber) {\\n    System.out.println(\\"Hello\\" + customer.customerName\\n            + \\", thanks for registering phone number \\"\\n            + (showPhoneNumber ? customer.customerPhoneNumber : \\"*********\\"));\\n}\\n---usage\\ngreetConsumerV2(maria, false);\\n```\\n\\n\u8fd9\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u7248\u672c\\n\\n```java\\nstatic BiConsumer<Customer, Boolean> greetCustomerConsumerV2 = (customer, showPhoneNumber) ->\\n        System.out.println(\\"Hello\\" + customer.customerName\\n                + \\", thanks for registering phone number \\"\\n                + (showPhoneNumber ? customer.customerPhoneNumber : \\"*********\\"));\\n---usage\\ngreetCustomerConsumerV2.accept(maria, false);\\n```\\n\\n---\\n\\n\u5168\u90e8\u4ee3\u7801\\n\\n```java\\npublic class _Consumer {\\n    public static void main(String[] args) {\\n        var maria = new Customer(\\"Maria\\", \\"99999\\");\\n\\n        // Normal java function\\n        greetConsumer(maria);\\n\\n        // Consumer Functional interface\\n        greetCustomerConsumer.accept(maria);\\n\\n        greetCustomerConsumerV2.accept(maria, false);\\n        greetConsumerV2(maria, false);\\n    }\\n    static BiConsumer<Customer, Boolean> greetCustomerConsumerV2 = (customer, showPhoneNumber) ->\\n            System.out.println(\\"Hello\\" + customer.customerName\\n                    + \\", thanks for registering phone number \\"\\n                    + (showPhoneNumber ? customer.customerPhoneNumber : \\"*********\\"));\\n\\n    static Consumer<Customer> greetCustomerConsumer = customer ->\\n            System.out.println(\\"Hello\\" + customer.customerName\\n                    + \\", thanks for registering phone number \\"\\n                    + customer.customerPhoneNumber);\\n\\n    static void greetConsumer(Customer customer) {\\n        System.out.println(\\"Hello\\" + customer.customerName\\n                + \\", thanks for registering phone number \\"\\n                + customer.customerPhoneNumber);\\n    }\\n    static void greetConsumerV2(Customer customer, boolean showPhoneNumber) {\\n        System.out.println(\\"Hello\\" + customer.customerName\\n                + \\", thanks for registering phone number \\"\\n                + (showPhoneNumber ? customer.customerPhoneNumber : \\"*********\\"));\\n    }\\n\\n    static record Customer(String customerName, String customerPhoneNumber) {\\n    }\\n}\\n```\\n\\n## Predicate\\n\\n`Predicate` \u8868\u793a\u4e00\u4e2a\u5e03\u5c14\u503c\u51fd\u6570\\n\\n\u5728\u547d\u4ee4\u5f0f\u7f16\u7a0b\u4e2d\u901a\u8fc7\u8fd9\u6837\u5199\u8fbe\u5230\u76f8\u540c\u76ee\u7684\\n\\n```java\\nstatic boolean isPhoneNumberValid(String phoneNumber) {\\n    return phoneNumber.startsWith(\\"07\\") && phoneNumber.length() == 11;\\n}\\n---usage\\nvar phoneNumberValid = isPhoneNumberValid(\\"07000000000\\");\\n```\\n\\n\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\\n\\n```java\\nstatic Predicate<String> isPhoneNumberValidPredicate = phoneNumber ->\\n        phoneNumber.startsWith(\\"07\\") && phoneNumber.length() == 11;\\n\\nstatic Predicate<String> containsNumber3 = phoneNumber ->\\n        phoneNumber.contains(\\"3\\");\\n---usage\\nSystem.out.println(isPhoneNumberValidPredicate.test(\\"09009877300\\"));\\n\\nSystem.out.println(\\n        \\"Is phone number valid and contains number 3 = \\" +\\n                isPhoneNumberValidPredicate.and(containsNumber3).test(\\"07009877300\\")\\n);\\n\\nvar isPhoneNumberValidAndContainsNumber3 = isPhoneNumberValidPredicate.or(containsNumber3);\\nSystem.out.println(\\n        \\"Is phone number valid or contains number 3 = \\" +\\n                isPhoneNumberValidAndContainsNumber3.test(\\"07000000000\\")\\n);\\n```\\n\\n\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728\u6982\u8981\u4e2d\u5199\u7684\u4ee3\u7801 `stream().filter()` \u5417\uff1f\\n\\n```java\\nvar females2 = people.stream().filter(person -> FEMALE.equals(person.gender))\\n        .collect(Collectors.toList());\\n```\\n\\n`filter` \u63a5\u6536\u7684\u53c2\u6570\u5c31\u662f `Predicate` \uff0c\u5728 idea \u4e2d\u4f7f\u7528\u5feb\u6377\u952e \u300cCtrl + Alt + V\u300d\u5c06\u5b83\u7684\u53c2\u6570\u63d0\u53d6\u6210\u53d8\u91cf\uff0c\u6211\u4eec\u5c31\u4f1a\u770b\u5230 `Predicate`\\n\\n```java\\nPredicate<Person> personPredicate = person -> FEMALE.equals(person.gender);\\nvar females2 = people.stream().filter(personPredicate)\\n        .collect(Collectors.toList());\\n```\\n\\n---\\n\\n\u5b8c\u6574\u4ee3\u7801\\n\\n```java\\npublic class _Predicate {\\n    public static void main(String[] args) {\\n        System.out.println(\\"Without predicate\\");\\n        var phoneNumberValid = isPhoneNumberValid(\\"07000000000\\");\\n        System.out.println(phoneNumberValid);\\n        System.out.println(isPhoneNumberValid(\\"0700000000\\"));\\n        System.out.println(isPhoneNumberValid(\\"09009877300\\"));\\n\\n        System.out.println(\\"With Predicate\\");\\n        System.out.println(isPhoneNumberValidPredicate.test(\\"07000000000\\"));\\n        System.out.println(isPhoneNumberValidPredicate.test(\\"0700000000\\"));\\n        System.out.println(isPhoneNumberValidPredicate.test(\\"09009877300\\"));\\n\\n        System.out.println(\\n                \\"Is phone number valid and contains number 3 = \\" +\\n                        isPhoneNumberValidPredicate.and(containsNumber3).test(\\"07009877300\\")\\n        );\\n\\n        var isPhoneNumberValidAndContainsNumber3 = isPhoneNumberValidPredicate.or(containsNumber3);\\n        System.out.println(\\n                \\"Is phone number valid or contains number 3 = \\" +\\n                        isPhoneNumberValidAndContainsNumber3.test(\\"07000000000\\")\\n        );\\n\\n    }\\n\\n    static boolean isPhoneNumberValid(String phoneNumber) {\\n        return phoneNumber.startsWith(\\"07\\") && phoneNumber.length() == 11;\\n    }\\n\\n    static Predicate<String> isPhoneNumberValidPredicate = phoneNumber ->\\n            phoneNumber.startsWith(\\"07\\") && phoneNumber.length() == 11;\\n\\n    static Predicate<String> containsNumber3 = phoneNumber ->\\n            phoneNumber.contains(\\"3\\");\\n}\\n```\\n\\n## Supplier\\n\\n`Supplier` \u4e0d\u63a5\u6536\u4efb\u4f55\u53c2\u6570\u5e76\u63d0\u4f9b\u4e00\u4e2a\u7ed3\u679c\\n\\n\u5728\u547d\u4ee4\u5f0f\u7f16\u7a0b\u4e2d\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5199\\n\\n```java\\nstatic String getDbConnectionUrl() {\\n    return \\"jdbc://localhost:5432/users\\";\\n}\\n---usage\\nSystem.out.println(getDbConnectionUrl());\\n```\\n\\n\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u7248\u672c\\n\\n```java\\nstatic Supplier<String> getDbConnectionUrlSupplier = () ->\\n        \\"jdbc://localhost:5432/users\\";\\n\\nstatic Supplier<List<String>> getDbConnectionListUrlSupplier = () ->\\n        List.of(\\n                \\"jdbc://localhost:5432/users\\",\\n                \\"jdbc://localhost:5432/customer\\"\\n        );\\n---usage\\nSystem.out.println(getDbConnectionUrlSupplier.get());\\nSystem.out.println(getDbConnectionListUrlSupplier.get());\\n```\\n\\n---\\n\\n\u5b8c\u6574\u4ee3\u7801\\n\\n```java\\npublic class _Supplier {\\n    public static void main(String[] args) {\\n        System.out.println(getDbConnectionUrl());\\n        System.out.println(getDbConnectionUrlSupplier.get());\\n        System.out.println(getDbConnectionListUrlSupplier.get());\\n\\n    }\\n\\n    static String getDbConnectionUrl() {\\n        return \\"jdbc://localhost:5432/users\\";\\n    }\\n\\n    static Supplier<String> getDbConnectionUrlSupplier = () ->\\n            \\"jdbc://localhost:5432/users\\";\\n    static Supplier<List<String>> getDbConnectionListUrlSupplier = () ->\\n            List.of(\\n                    \\"jdbc://localhost:5432/users\\",\\n                    \\"jdbc://localhost:5432/customer\\"\\n            );\\n\\n}\\n```\\n\\n## Stream\\n\\n\u9996\u5148\u5c06\u524d\u6587\u7684\u5b9a\u4e49 Persion \u7684\u4ee3\u7801\u590d\u5236\u8fc7\u6765\\n\\n```java\\nprivate record Person(String name, Gender gender) {\\n}\\n\\nenum Gender {\\n    MALE, FEMALE, PREFER_NOT_TO_SAY\\n}\\n\\nList<Person> people = List.of(\\n        new Person(\\"John\\", MALE),\\n        new Person(\\"Maria\\", FEMALE),\\n        new Person(\\"Aisha\\", FEMALE),\\n        new Person(\\"Alex\\", MALE),\\n        new Person(\\"Alice\\", FEMALE),\\n        new Person(\\"Bob\\", PREFER_NOT_TO_SAY)\\n);\\n```\\n\\n\u901a\u8fc7 Stream \u6765\u8c03\u7528\\n\\n```java\\npeople.stream()\\n        .map(Person::name)\\n        .mapToInt(String::length)\\n//        .collect(Collectors.toSet())\\n        .forEach(System.out::println);\\n```\\n\\n\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u6b65\u7684\u53c2\u6570\u63d0\u53d6\u6210\u53d8\u91cf\uff0c\u65b9\u4fbf\u89c2\u5bdf\u5b83\u4eec\u7684\u7c7b\u578b\\n\\n```java\\nFunction<Person, String> personStringFunction = Person::name;\\n        ToIntFunction<String> length = String::length;\\n        IntConsumer println = System.out::println;\\n        people.stream()\\n                .map(personStringFunction)\\n                .mapToInt(length)\\n//                .collect(Collectors.toSet())\\n                .forEach(println);\\n```\\n\\nStream \u7684\u5176\u4ed6\u7528\u6cd5\\n\\n```java\\nPredicate<Person> personPredicate = person -> FEMALE.equals(person.gender);\\nvar containOnlyFemales = people.stream()\\n        .allMatch(personPredicate);\\nSystem.out.println(containOnlyFemales);\\n\\nvar personHaveFemales = people.stream()\\n        .anyMatch(personPredicate);\\n//      .noneMatch(personPredicate);\\nSystem.out.println(personHaveFemales);\\n```\\n\\n## Optional\\n\\n`Optional` \u4f1a\u6539\u53d8\u4f60\u5904\u7406\u7a7a\u6307\u9488\u7684\u65b9\u5f0f\\n\\n\u793a\u4f8b\uff1a\\n\\n```java\\nvar value = Optional.ofNullable(null)\\n        .orElseGet(() -> \\"default value\\");\\nvar value2 = Optional.ofNullable(\\"hello\\")\\n        .orElseGet(() -> \\"default value\\");\\n```\\n\\n\u793a\u4f8b2\uff1a\\n\\n```java\\nSupplier<IllegalStateException> exception = () -> new IllegalStateException(\\"exception\\");\\nvar value3 = Optional.ofNullable(\\"hello\\")\\n        .orElseThrow(exception);\\n```\\n\\n\u793a\u4f8b3\uff1a\\n\\n```java\\nOptional.ofNullable(\\"john.gmail.com\\")\\n        .ifPresent(email ->\\n                System.out.println(\\"Sending email to \\" + email));\\nOptional.ofNullable(null)\\n        .ifPresentOrElse(email -> System.out.println(\\"Sending email to \\" + email),\\n                () -> System.out.println(\\"Can not send email\\"));\\n```\\n\\n---\\n\\n\u5b8c\u6574\u4ee3\u7801\\n\\n```java\\npublic class Main {\\n    public static void main(String[] args) {\\n        var value = Optional.ofNullable(null)\\n                .orElseGet(() -> \\"default value\\");\\n        var value2 = Optional.ofNullable(\\"hello\\")\\n                .orElseGet(() -> \\"default value\\");\\n        System.out.println(value2);\\n        Supplier<IllegalStateException> exception = () -> new IllegalStateException(\\"exception\\");\\n        var value3 = Optional.ofNullable(\\"hello\\")\\n                .orElseThrow(exception);\\n        Optional.ofNullable(\\"john.gmail.com\\")\\n                .ifPresent(email ->\\n                        System.out.println(\\"Sending email to \\" + email));\\n        Optional.ofNullable(null)\\n                .ifPresentOrElse(email -> System.out.println(\\"Sending email to \\" + email),\\n                        () -> System.out.println(\\"Can not send email\\"));\\n    }\\n}\\n```\\n\\n## Combinator Pattern\\n\\n\u6211\u4eec\u6709\u4e00\u4e2a Customer \u7c7b\u5b9a\u4e49\u5982\u4e0b\\n\\n```java\\npublic record Customer(\\n        String name,\\n        String email,\\n        String phoneNumber,\\n        LocalDate dob\\n) {}\\n---usage\\nCustomer customer = new Customer(\\n        \\"Alice\\",\\n        \\"alice@gmail.com\\",\\n        \\"+089998879\\",\\n        LocalDate.of(2000, 1, 1)\\n);\\n```\\n\\n\u6211\u4eec\u60f3\u9a8c\u8bc1\u6b64\u4eba\u7684\u4fe1\u606f\u662f\u5426\u5408\u6cd5\u3002\u5728\u547d\u4ee4\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u9a8c\u8bc1\\n\\n```java\\npublic class CustomerValidatorService {\\n    private boolean isEmailValid(String email) {\\n        return email.contains(\\"@\\");\\n    }\\n\\n    private boolean isPhoneNumberValid(String phoneNumber) {\\n        return phoneNumber.startsWith(\\"+0\\");\\n    }\\n\\n    private boolean isAdult(LocalDate dob) {\\n        return Period.between(dob, LocalDate.now()).getYears() > 16;\\n    }\\n\\n    public boolean isValid(Customer customer) {\\n        return isEmailValid(customer.email())\\n                && isPhoneNumberValid(customer.phoneNumber())\\n                && isAdult(customer.dob());\\n    }\\n}\\n---usage\\nSystem.out.println(new CustomerValidatorService().isValid(customer));\\n```\\n\\n\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u9a8c\u8bc1\u9879\u6216\u8005\u9700\u8981\u6839\u636e\u4e0d\u540c\u7684\u7528\u6237\u542f\u7528\u4e0d\u540c\u7684\u9a8c\u8bc1\u7b56\u7565\u65f6\uff0c\u4e0a\u9762\u7684\u65b9\u6cd5\u9700\u8981\u6539\u52a8\u592a\u591a\u7684\u4ee3\u7801\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u53e6\u4e00\u4e2a\u7f3a\u70b9\u662f\uff1a\u5f53\u9a8c\u8bc1\u5931\u8d25\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u77e5\u9053\u5bf9\u8c61\u7684\u54ea\u4e2a\u5c5e\u6027\u6ca1\u6709\u901a\u8fc7\u9a8c\u8bc1\uff0c\u8be5\u65b9\u6cd5\u53ea\u662f\u8fd4\u56de\u4e00\u4e2a\u5931\u8d25\u7684\u7ed3\u679c\uff0c\u8fd9\u4e2a\u7ed3\u679c\u5e76\u4e0d\u5305\u542b\u7ec6\u8282\u3002\\n\\n\u6211\u8fd9\u91cc\u4ecb\u7ecd\u7684\u89e3\u51b3\u65b9\u6848\u53eb\u505a Combinator Pattern\\n\\n\u4e3a\u4e86\u80fd\u591f\u8fd4\u56de\u65b9\u6cd5\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u679a\u4e3e\u7c7b\\n\\n```java\\nenum ValidationResult {\\n    SUCCESS,\\n    PHONE_NUMBER_NOT_VALID,\\n    EMAIL_NOT_VALID,\\n    IS_NOT_AN_ADULT\\n}\\n```\\n\\n\u6211\u4eec\u4f7f\u7528 `CustomerRegistrationValidator interface` \u6269\u5c55 `Functional interface`\\n\\n```java\\npublic interface CustomerRegistrationValidator\\n        extends Function<Customer, ValidationResult> {\\n\\n    static CustomerRegistrationValidator isEmailValid() {\\n        return customer -> customer.email().contains(\\"@\\") ?\\n                SUCCESS : EMAIL_NOT_VALID;\\n    }\\n    static CustomerRegistrationValidator isPhoneNumberValid() {\\n        return customer -> customer.phoneNumber().startsWith(\\"+0\\") ?\\n                SUCCESS : PHONE_NUMBER_NOT_VALID;\\n    }\\n    static CustomerRegistrationValidator isAnAdult() {\\n        return customer ->\\n                Period.between(customer.dob(), LocalDate.now()).getYears() > 16 ?\\n                        SUCCESS : IS_NOT_AN_ADULT;\\n    }\\n\\n    /**\\n     * test lazy load\\n     */\\n    static CustomerRegistrationValidator printSomething() {\\n        return customer ->{\\n            System.out.println(\\"print something\\");\\n            return SUCCESS;\\n        };\\n    }\\n\\n    default CustomerRegistrationValidator and (CustomerRegistrationValidator other) {\\n        return customer -> {\\n            ValidationResult result = this.apply(customer);\\n            return result.equals(SUCCESS) ? other.apply(customer) : result;\\n        };\\n\\n    }\\n\\n    enum ValidationResult {\\n        SUCCESS,\\n        PHONE_NUMBER_NOT_VALID,\\n        EMAIL_NOT_VALID,\\n        IS_NOT_AN_ADULT\\n    }\\n}\\n```\\n\\n\u7528\u6cd5\u5f88\u7b80\u5355\\n\\n```java\\nvar result = isEmailValid()\\n        .and(isPhoneNumberValid())\\n        .and(isAnAdult())\\n        .apply(customer);\\nSystem.out.println(result);\\nif (result != ValidationResult.SUCCESS) {\\n    throw new IllegalStateException(result.name());\\n}\\n```\\n\\n\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7075\u6d3b\u5730\u7ec4\u5408\u591a\u4e2a\u9a8c\u8bc1\u3002\u5f53\u9a8c\u8bc1\u5931\u8d25\u65f6\uff0c\u8be5\u65b9\u6cd5\u4f1a\u8fd4\u56de\u5931\u8d25\u7684\u539f\u56e0\\n\\n\u6b64\u5916\uff0c\u5b83\u662f\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u4e5f\u5c31\u662f\u76f4\u5230\u8c03\u7528 `apply()` \u65f6\u624d\u4f1a\u771f\u6b63\u6267\u884c\\n\\n```java\\nvar result2 = isEmailValid()\\n        .and(isPhoneNumberValid())\\n        .and(isAnAdult())\\n        .and(printSomething());\\nSystem.out.println(\\"not load before apply()\\");\\nresult2.apply(customer);\\n```\\n\\n---\\n\\n\u5b8c\u6574\u4ee3\u7801\\n\\n\u8c03\u7528\u65b9\u6cd5\\n\\n```java\\npublic class Main {\\n    public static void main(String[] args) {\\n        Customer customer = new Customer(\\n                \\"Alice\\",\\n                \\"alice@gmail.com\\",\\n                \\"+089998879\\",\\n                LocalDate.of(2000, 1, 1)\\n        );\\n\\n        System.out.println(new CustomerValidatorService().isValid(customer));\\n\\n        // If valid we can store customer in db\\n        // ...\\n\\n        // Using combinator pattern\\n        var result = isEmailValid()\\n                .and(isPhoneNumberValid())\\n                .and(isAnAdult())\\n                .apply(customer);\\n        System.out.println(result);\\n        if (result != ValidationResult.SUCCESS) {\\n            throw new IllegalStateException(result.name());\\n        }\\n\\n        // Lazy lode\\n        var result2 = isEmailValid()\\n                .and(isPhoneNumberValid())\\n                .and(isAnAdult())\\n                .and(printSomething());\\n        System.out.println(\\"not load before apply()\\");\\n        result2.apply(customer);\\n\\n    }\\n}\\n```\\n\\n\u547d\u4ee4\u5f0f\u7f16\u7a0b\\n\\n```java\\npublic class CustomerValidatorService {\\n    private boolean isEmailValid(String email) {\\n        return email.contains(\\"@\\");\\n    }\\n\\n    private boolean isPhoneNumberValid(String phoneNumber) {\\n        return phoneNumber.startsWith(\\"+0\\");\\n    }\\n\\n    private boolean isAdult(LocalDate dob) {\\n        return Period.between(dob, LocalDate.now()).getYears() > 16;\\n    }\\n\\n    public boolean isValid(Customer customer) {\\n        return isEmailValid(customer.email())\\n                && isPhoneNumberValid(customer.phoneNumber())\\n                && isAdult(customer.dob());\\n    }\\n\\n}\\n```\\n\\n\u51fd\u6570\u5f0f\u7f16\u7a0b\\n\\n```java\\npublic interface CustomerRegistrationValidator\\n        extends Function<Customer, ValidationResult> {\\n\\n    static CustomerRegistrationValidator isEmailValid() {\\n        return customer -> customer.email().contains(\\"@\\") ?\\n                SUCCESS : EMAIL_NOT_VALID;\\n    }\\n    static CustomerRegistrationValidator isPhoneNumberValid() {\\n        return customer -> customer.phoneNumber().startsWith(\\"+0\\") ?\\n                SUCCESS : PHONE_NUMBER_NOT_VALID;\\n    }\\n    static CustomerRegistrationValidator isAnAdult() {\\n        return customer ->\\n                Period.between(customer.dob(), LocalDate.now()).getYears() > 16 ?\\n                        SUCCESS : IS_NOT_AN_ADULT;\\n    }\\n\\n    /**\\n     * test lazy load\\n     */\\n    static CustomerRegistrationValidator printSomething() {\\n        return customer ->{\\n            System.out.println(\\"print something\\");\\n            return SUCCESS;\\n        };\\n    }\\n\\n    default CustomerRegistrationValidator and (CustomerRegistrationValidator other) {\\n        return customer -> {\\n            ValidationResult result = this.apply(customer);\\n            return result.equals(SUCCESS) ? other.apply(customer) : result;\\n        };\\n\\n    }\\n\\n    enum ValidationResult {\\n        SUCCESS,\\n        PHONE_NUMBER_NOT_VALID,\\n        EMAIL_NOT_VALID,\\n        IS_NOT_AN_ADULT\\n    }\\n}\\n```\\n\\nentity\\n\\n```java\\npublic record Customer(\\n        String name,\\n        String email,\\n        String phoneNumber,\\n        LocalDate dob\\n) {}\\n```\\n\\n## Callbacks\\n\\n\u7531\u4e8e Java \u7684\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u50cf JavaScript \u4e00\u6837\u4f7f\u7528 callback\\n\\n\u5728 JavaScript \u4e2d\uff0c\u6211\u4eec\u50cf\u8fd9\u6837\u5b9a\u4e49\u5e26\u6709\u56de\u8c03\u7684\u51fd\u6570\\n\\n```jsx\\nfunction hello(firstName, lastName,callback) {\\n    console.log(firstName);\\n    if (lastName) {\\n        console.log(lastName);\\n    } else {\\n        callback();\\n    }\\n}\\n```\\n\\n\u6211\u4eec\u53ef\u4ee5\u5728 Chrome \u63a7\u5236\u53f0\u4e2d\u8c03\u7528\u5b83\\n\\n```jsx\\nhello(\\"john\\", null, function(){console.log(\\"no lastname provided\\")})\\n```\\n\\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5728 Java \u4e2d\u505a\u540c\u6837\u7684\u4e8b\u60c5\\n\\n```java\\nstatic void hello(String firstName, String lastName, Consumer<String> callback) {\\n    System.out.println(firstName);\\n    if (lastName != null) {\\n        System.out.println(lastName);\\n    } else {\\n        callback.accept(firstName);\\n    }\\n}\\n\\nstatic void hello2(String firstName, String lastName, Runnable callback) {\\n    System.out.println(firstName);\\n    if (lastName != null) {\\n        System.out.println(lastName);\\n    } else {\\n        callback.run();\\n    }\\n}\\n```\\n\\nusage\\n\\n```java\\nhello(\\"John\\", \\"Montana\\", null);\\nhello(\\"John\\", null, value -> {\\n    System.out.println(\\"no lastName provided for \\" + value);\\n});\\n\\nhello2(\\"John\\", null,\\n        () -> System.out.println(\\"no lastName provided\\"));\\n```\\n\\n---\\n\\n\u5b8c\u6574\u4ee3\u7801\\n\\n```java\\npublic class Callbacks {\\n    public static void main(String[] args) {\\n        hello(\\"John\\", \\"Montana\\", null);\\n        hello(\\"John\\", null, value -> {\\n            System.out.println(\\"no lastName provided for \\" + value);\\n        });\\n        hello2(\\"John\\", null,\\n                () -> System.out.println(\\"no lastName provided\\"));\\n\\n\\n    }\\n\\n    static void hello(String firstName, String lastName, Consumer<String> callback) {\\n        System.out.println(firstName);\\n        if (lastName != null) {\\n            System.out.println(lastName);\\n        } else {\\n            callback.accept(firstName);\\n        }\\n    }\\n\\n    static void hello2(String firstName, String lastName, Runnable callback) {\\n        System.out.println(firstName);\\n        if (lastName != null) {\\n            System.out.println(lastName);\\n        } else {\\n            callback.run();\\n        }\\n    }\\n\\n    /*\\n    Callback function in js:\\n    function hello(firstName, lastName,callback) {\\n        console.log(firstName);\\n        if (lastName) {\\n            console.log(lastName);\\n        } else {\\n            callback();\\n        }\\n    }\\n\\n    Invoke it:\\n    hello(\\"john\\", null, function(){console.log(\\"no lastname provided\\")})\\n     */\\n}\\n```\\n\\n## \u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u7279\u6027\\n\\n- \u65e0\u72b6\u6001\\n- \u7eaf\u51fd\u6570\\n- \u65e0\u526f\u4f5c\u7528\\n- \u9ad8\u9636\u7279\u6027\\n    - \u51fd\u6570\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u3002\\n    - \u51fd\u6570\u8fd4\u56de\u53e6\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u7ed3\u679c\u3002"},{"id":"custom-class-loader-loads-encrypted-class-file","metadata":{"permalink":"/blog/custom-class-loader-loads-encrypted-class-file","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-03-05-custom-class-loader-loads-encrypted-class-file/index.md","source":"@site/blog/2021-03-05-custom-class-loader-loads-encrypted-class-file/index.md","title":"\u81ea\u5b9a\u4e49 ClassLoader \u52a0\u8f7d\u4e00\u4e2a\u52a0\u5bc6 class \u6587\u4ef6","description":"\u8ddf\u7740\u6211\u4f53\u9a8c\u4e00\u4e0b\u4f20\u8bf4\u4e2d\u975e\u5e38\u5389\u5bb3\u7684\u7c7b\u52a0\u8f7d\u5668\u5427\uff01","date":"2021-03-05T00:00:00.000Z","formattedDate":"2021\u5e743\u67085\u65e5","tags":[{"label":"Java","permalink":"/blog/tags/java"},{"label":"JVM","permalink":"/blog/tags/jvm"},{"label":"\u7c7b\u52a0\u8f7d\u5668","permalink":"/blog/tags/\u7c7b\u52a0\u8f7d\u5668"}],"readingTime":4.465,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"custom-class-loader-loads-encrypted-class-file","title":"\u81ea\u5b9a\u4e49 ClassLoader \u52a0\u8f7d\u4e00\u4e2a\u52a0\u5bc6 class \u6587\u4ef6","authors":["solidSpoon"],"tags":["Java","JVM","\u7c7b\u52a0\u8f7d\u5668"]},"unlisted":false,"prevItem":{"title":"Java \u51fd\u6570\u5f0f\u7f16\u7a0b\u8be6\u89e3","permalink":"/blog/java-functional-programming-explained"},"nextItem":{"title":"\u624b\u628a\u624b\u6559\u4f60\u8bfb\u4e00\u4e2a Java \u6587\u4ef6\u7684\u5b57\u8282\u7801","permalink":"/blog/step-by-step-guide-to-reading-bytecode-of-a-java-file"}},"content":"\u8ddf\u7740\u6211\u4f53\u9a8c\u4e00\u4e0b\u4f20\u8bf4\u4e2d\u975e\u5e38\u5389\u5bb3\u7684\u7c7b\u52a0\u8f7d\u5668\u5427\uff01\\n## \u5236\u4f5c\u52a0\u5bc6 class\\n### \u76ee\u6807\u7c7b\\n\u6211\u4eec\u8981\u52a0\u8f7d\u7684\u7c7b\u5f88\u7b80\u5355\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a `hello()` \u65b9\u6cd5\u3002\u7f16\u8bd1\u8fd9\u4e2a\u7c7b\u751f\u6210 class \u6587\u4ef6\uff0c\u5f85\u4f1a\u8981\u7528\\n```java\\npackage ClassLoader;\\n\\npublic class Hello {\\n    public void hello(){ \\n        System.out.println(\\"Hello, classLoader!\\"); \\n    }\\n    public static void main(String[] args) {\\n        System.out.println();\\n    }\\n}\\n```\\n### \u52a0\u5bc6\\n\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u8bfb\u53d6\u4e86\u521a\u624d\u751f\u6210\u7684 Hello.class \uff0c\u52a0\u5bc6\u4e4b\u540e\u4fdd\u5b58\u4e3a Hello.xlass\\n\\n\\n`encode()` \u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u52a0\u5bc6\uff0c\u52a0\u8f7d\u7c7b\u7684\u65f6\u5019\u4f7f\u7528\u540c\u6837\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u89e3\u5bc6\\n```java\\npackage ClassLoader;\\n\\nimport java.io.File;\\nimport java.io.FileInputStream;\\nimport java.io.FileOutputStream;\\nimport java.io.IOException;\\n\\n/**\\n * @author : solidSpoon\\n * @date : 2021/3/5 1:57\\n */\\npublic class EncodeFile {\\n\\n    public static void main(String[] args) {\\n        String name = \\"Hello\\";\\n        EncodeFile ef = new EncodeFile();\\n        byte[] fileByteArray = ef.loadFile(name);\\n        fileByteArray = ef.encode(fileByteArray);;\\n        ef.storeFile(fileByteArray, name);\\n    }\\n    public byte[] loadFile(String name){\\n        File f = new File(this.getClass().getResource(name + \\".class\\").getPath());\\n        byte[] fileByteArray = new byte[(int)f.length()];\\n        try {\\n            new FileInputStream(f).read(fileByteArray);\\n        } catch (Exception e) {\\n            e.printStackTrace();\\n        }\\n        return fileByteArray;\\n    }\\n    void storeFile(byte[] fileByteArray, String name) {\\n        String p = this.getClass().getResource(\\"\\").getPath();\\n        File file = new File(p + \\"/\\" + name + \\".xlass\\");\\n        try (FileOutputStream fop = new FileOutputStream(file)) {\\n            if (!file.exists()) {\\n                file.createNewFile();\\n            }\\n            fop.write(fileByteArray);\\n            fop.flush();\\n        } catch (IOException e) {\\n            e.printStackTrace();\\n        }\\n\\n    }\\n    public byte[] encode (byte[] fileToEncode){\\n        for(int i=0; i< fileToEncode.length; i++){\\n            fileToEncode[i] = (byte) (255 - fileToEncode[i]);\\n        }\\n        return fileToEncode;\\n    }\\n}\\n```\\n## \u52a0\u8f7d\\n\u63a5\u4e0b\u6765\u6211\u4eec\u5b9a\u4e49\u81ea\u5df1\u7684\u52a0\u8f7d\u5668\uff0c\u628a\u521a\u624d\u7684 xlass \u6587\u4ef6\u89e3\u5bc6\u4e4b\u540e\u52a0\u8f7d\u5230 JVM \u4e2d\uff0c\u5e76\u53cd\u5c04\u8fd0\u884c\u5b83\u7684 `hello()` \u65b9\u6cd5\u3002\\n\\n\\n\u5177\u4f53\u65b9\u6cd5\u662f\u7ee7\u627f `ClassLoader` \u7c7b\uff0c\u8986\u76d6\u5b83\u7684 `findClass()` \u65b9\u6cd5\uff0c\u5728\u8be5\u65b9\u6cd5\u4e2d\u4f7f\u7528 `defineClass()` \u5c06\u5b57\u8282\u6d41\u8f6c\u6210 `Class`\\n```java\\npackage ClassLoader;\\n\\nimport java.io.File;\\nimport java.io.FileInputStream;\\nimport java.lang.reflect.Method;\\n\\n/**\\n * @author : solidSpoon\\n * @date : 2021/3/5 1:30\\n */\\n\\npublic class MyClassLoader extends ClassLoader{\\n    public static void main(String[] args) {\\n        try {\\n            Class<?> clazz = new  MyClassLoader().findClass(\\"Hello\\");\\n            Object obj = clazz.getConstructor().newInstance();\\n            Method method = clazz.getMethod(\\"hello\\");\\n            method.invoke(obj);\\n        } catch (Exception e) {\\n            e.printStackTrace();\\n        }\\n    }\\n\\n    @Override\\n    protected Class<?> findClass(String name) throws ClassNotFoundException {\\n        File f = new File(this.getClass().getResource(name + \\".xlass\\").getPath());\\n        byte[] fileByteArray = new byte[(int)f.length()];\\n        try {\\n            new FileInputStream(f).read(fileByteArray);\\n        } catch (Exception e) {\\n            e.printStackTrace();\\n        }\\n        fileByteArray = decode(fileByteArray);\\n        String pack = this.getClass().getPackage().getName();\\n        return defineClass(pack + \\".\\" + name, fileByteArray, 0, fileByteArray.length);\\n    }\\n    /**\\n     * \u5c06\u7f16\u7801\u8fc7\u7684\u5b57\u8282\u6570\u7ec4\u89e3\u7801\\n     * @param fileToDecode \u8981\u89e3\u7801\u7684\u5b57\u8282\u6570\u7ec4\\n     * @return \u89e3\u7801\u7684\u5b57\u8282\u6570\u7ec4\\n     */\\n    public byte[] decode (byte[] fileToDecode){\\n        for(int i=0; i< fileToDecode.length; i++){\\n            fileToDecode[i] = (byte) (255 - fileToDecode[i]);\\n        }\\n        return fileToDecode;\\n    }\\n}\\n```\\n## \u8fd0\u884c\u7ed3\u679c\\n\u6211\u4eec\u7684\u7c7b\u52a0\u8f7d\u5668\u89e3\u5bc6\u4e86 xlass \u5e76\u5c06\u5b83\u52a0\u8f7d\u5230\u4e86 JVM \u4e2d\\n```java\\nHello, classLoader!\\n```\\n## \u539f\u7406\\n\u7c7b\u52a0\u8f7d\u7684\u539f\u5219\u662f\u53cc\u4eb2\u59d4\u6d3e\u6a21\u578b\uff1a\u5982\u679c\u4e00\u4e2a\u7c7b\u52a0\u8f7d\u5668\u6536\u5230\u4e86\u7c7b\u52a0\u8f7d\u7684\u8bf7\u6c42\uff0c\u5b83\u9996\u5148\u4f1a\u628a\u8fd9\u4e2a\u8bf7\u6c42\u59d4\u6d3e\u7ed9\u7236\u7c7b\u52a0\u8f7d\u5668\u53bb\u5b8c\u6210\uff0c\u6bcf\u4e00\u4e2a\u5c42\u6b21\u7684\u7c7b\u52a0\u8f7d\u5668\u90fd\u662f\u5982\u6b64\uff0c\u56e0\u6b64\u6240\u6709\u7684\u52a0\u8f7d\u8bf7\u6c42\u6700\u7ec8\u90fd\u5e94\u8be5\u4f20\u9001\u5230\u6700\u9876\u5c42\u7684\u542f\u52a8\u7c7b\u52a0\u8f7d\u5668\u4e2d\uff0c\u53ea\u6709\u5f53\u7236\u52a0\u8f7d\u5668\u53cd\u9988\u81ea\u5df1\u65e0\u6cd5\u5b8c\u6210\u8fd9\u4e2a\u52a0\u8f7d\u8bf7\u6c42\uff08\u5b83\u7684\u641c\u7d22\u8303\u56f4\u4e2d\u6ca1\u6709\u627e\u5230\u6240\u9700\u7684\u7c7b\uff09\u65f6\uff0c\u5b50\u52a0\u8f7d\u5668\u624d\u4f1a\u5c1d\u8bd5\u81ea\u5df1\u53bb\u5b8c\u6210\u52a0\u8f7d\u3002\\n\\n\\n\u6211\u4eec\u5b9a\u4e49\u7684\u8fd9\u4e2a `findClass()` \u65b9\u6cd5\u4f1a\u5728\u4e0b\u9762\u8fd9\u4e2a\u5730\u65b9\u8c03\u7528\uff0c\u5982\u4ee3\u7801\u6240\u793a\uff0c\u5982\u679c\u8be5\u7c7b\u8fd8\u6ca1\u6709\u88ab\u52a0\u8f7d\u5e76\u4e14\u7236\u52a0\u8f7d\u5668\u65e0\u6cd5\u52a0\u8f7d\u4e2a\u7c7b\uff08\u5f53\u7136\u80af\u5b9a\u4e0d\u80fd\u52a0\u8f7d\uff09\uff0c\u5c31\u4f1a\u8c03\u7528\u6211\u4eec\u5b9a\u4e49\u7684 `findClass()` \u53bb\u52a0\u8f7d\u8fd9\u4e2a\u7c7b\\n```java\\n// java.lang ClassLoader\\n\\n\\tprotected Class<?> loadClass(String name, boolean resolve)\\n        throws ClassNotFoundException\\n    {\\n        synchronized (getClassLoadingLock(name)) {\\n            // First, check if the class has already been loaded\\n            Class<?> c = findLoadedClass(name);\\n            if (c == null) {\\n                long t0 = System.nanoTime();\\n                try {\\n                    if (parent != null) {\\n                        c = parent.loadClass(name, false);\\n                    } else {\\n                        c = findBootstrapClassOrNull(name);\\n                    }\\n                } catch (ClassNotFoundException e) {\\n                    // ClassNotFoundException thrown if class not found\\n                    // from the non-null parent class loader\\n                }\\n\\n                if (c == null) {\\n                    // If still not found, then invoke findClass in order\\n                    // to find the class.\\n                    long t1 = System.nanoTime();\\n                    c = findClass(name);\\n\\n                    // this is the defining class loader; record the stats\\n                    PerfCounter.getParentDelegationTime().addTime(t1 - t0);\\n                    PerfCounter.getFindClassTime().addElapsedTimeFrom(t1);\\n                    PerfCounter.getFindClasses().increment();\\n                }\\n            }\\n            if (resolve) {\\n                resolveClass(c);\\n            }\\n            return c;\\n        }\\n    }\\n```"},{"id":"step-by-step-guide-to-reading-bytecode-of-a-java-file","metadata":{"permalink":"/blog/step-by-step-guide-to-reading-bytecode-of-a-java-file","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-03-04-step-by-step-guide-to-reading-bytecode-of-a-java-file/index.md","source":"@site/blog/2021-03-04-step-by-step-guide-to-reading-bytecode-of-a-java-file/index.md","title":"\u624b\u628a\u624b\u6559\u4f60\u8bfb\u4e00\u4e2a Java \u6587\u4ef6\u7684\u5b57\u8282\u7801","description":"\u60f3\u8981\u8bfb\u61c2 Java \u7684\u5b57\u8282\u7801\u5176\u5b9e\u6ca1\u90a3\u4e48\u96be\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u6709\u6c47\u7f16\u8bed\u8a00\u7684\u7ecf\u9a8c\u5c31\u4f1a\u66f4\u597d\u4e0a\u624b\u3002\u672c\u6587\u624b\u628a\u624b\u6559\u4f60\u9605\u8bfb\u4e00\u4e2a\u7b80\u5355 Java \u6587\u4ef6\u7684\u5b57\u8282\u7801\u3002","date":"2021-03-04T00:00:00.000Z","formattedDate":"2021\u5e743\u67084\u65e5","tags":[{"label":"\u5b57\u8282\u7801","permalink":"/blog/tags/\u5b57\u8282\u7801"},{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":7.91,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"step-by-step-guide-to-reading-bytecode-of-a-java-file","title":"\u624b\u628a\u624b\u6559\u4f60\u8bfb\u4e00\u4e2a Java \u6587\u4ef6\u7684\u5b57\u8282\u7801","authors":["solidSpoon"],"tags":["\u5b57\u8282\u7801","Java"]},"unlisted":false,"prevItem":{"title":"\u81ea\u5b9a\u4e49 ClassLoader \u52a0\u8f7d\u4e00\u4e2a\u52a0\u5bc6 class \u6587\u4ef6","permalink":"/blog/custom-class-loader-loads-encrypted-class-file"},"nextItem":{"title":"\u521d\u8bc6 JShell","permalink":"/blog/getting-started-with-jshell"}},"content":"\u60f3\u8981\u8bfb\u61c2 Java \u7684\u5b57\u8282\u7801\u5176\u5b9e\u6ca1\u90a3\u4e48\u96be\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u6709\u6c47\u7f16\u8bed\u8a00\u7684\u7ecf\u9a8c\u5c31\u4f1a\u66f4\u597d\u4e0a\u624b\u3002\u672c\u6587\u624b\u628a\u624b\u6559\u4f60\u9605\u8bfb\u4e00\u4e2a\u7b80\u5355 Java \u6587\u4ef6\u7684\u5b57\u8282\u7801\u3002\\n\\n## \u5982\u4f55\u5f97\u5230\u5b57\u8282\u7801\uff1f\\n\\n\u4ee5\u4e0b\u9762\u8fd9\u6bb5\u793a\u4f8b\u4ee3\u7801\u4e3a\u4f8b\uff0c\u4ed6\u5b58\u653e\u5728\u4e00\u4e2a\u5305\u4e2d\uff1a\\n\\n```java\\npackage demo.a\\npublic class B{\\n    ...\\n}\\n```\\n\\n\u901a\u8fc7\u4e0b\u9762\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u67e5\u770b\u4ee3\u7801\u7684\u5b57\u8282\u7801\uff1a\\n\\n### \u65b9\u6cd5 1 \u3001\u547d\u4ee4\u884c\\n\\n\u76f8\u5173\u547d\u4ee4\u5982\u4e0b\\n\\n```java\\njavac demo/a/B.java // \u7f16\u8bd1\\njvavp -c demo.a.B   // \u8f93\u51fa\u5b57\u8282\u7801\\njavap -c -verbose demo.a.B // \u8be6\u7ec6\u8f93\u51fa\\n```\\n\\n### \u65b9\u6cd5 2 \u3001idea \u63d2\u4ef6\\n\\n\u4e0b\u8f7d\u4e2a\u63d2\u4ef6\uff1a\u300cjclasslib Bytecode Viewer\u300d\uff0c\u7f51\u5740\u5982\u4e0b\\n\\n\\n> [https://plugins.jetbrains.com/plugin/9248-jclasslib-bytecode-viewer](https://plugins.jetbrains.com/plugin/9248-jclasslib-bytecode-viewer)\\n\\n\\n\\n\u5b89\u88c5\u8be5\u63d2\u4ef6\u540e\uff0c\u9996\u5148\u7f16\u8bd1\u4ee3\u7801\uff0c\u7136\u540e\\n\u83dc\u5355 \ud83d\udc49 \u300cview\u300d \ud83d\udc49 \u300cShow Bytecode With jclasslib\u300d\\n\u7ed3\u679c\u5982\u4e0b\uff1a\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20210402103711.png)\\n\\n\\n## \u5b9e\u9a8c\u4ee3\u7801\\n\\n\u6211\u4eec\u4f7f\u7528\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u8f93\u5165 IDE \u4e2d\\n\\n```java\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class Hello {\\n    public static void main(String[] args) {\\n        int num1 = 1;\\n        int num2 = 130;\\n        int num3 = num1 + num2;\\n        int num4 = num2 - num1;\\n        int num5 = num1 * num2;\\n        int num6 = num2 / num1;\\n\\n        final int num7 = 5;\\n        Integer num88 = 6;\\n\\n        //\u770b\u88c5\u7bb1\u6307\u4ee4\\n        if(num88 == 0){\\n            System.out.println(num1);\\n        }\\n\\n        List<Integer> nums = new ArrayList<>();\\n        nums.add(1);\\n        nums.add(2);\\n\\n        for (int num : nums){\\n            System.out.println(num);\\n        }\\n\\n        if (nums.size() == num2) {\\n            System.out.println(num2);\\n        }\\n    }\\n}\\n```\\n\\n\u4e0b\u9762\u662f\u7531 idea \u53cd\u7f16\u8bd1\u5f97\u5230\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u89c2\u5bdf\u5230 `for` \u5faa\u73af\u88ab\u6539\u6210\u4e86 `while`\\n\\n```java\\n//\\n// Source code recreated from a .class file by IntelliJ IDEA\\n// (powered by FernFlower decompiler)\\n//\\n\\nimport java.util.ArrayList;\\nimport java.util.Iterator;\\nimport java.util.List;\\n\\npublic class Hello {\\n    public Hello() {\\n    }\\n\\n    public static void main(String[] args) {\\n        int num1 = 1;\\n        int num2 = 130;\\n        int var10000 = num1 + num2;\\n        var10000 = num2 - num1;\\n        var10000 = num1 * num2;\\n        var10000 = num2 / num1;\\n        int num7 = true;\\n        Integer num88 = 6;\\n        if (num88 == 0) {\\n            System.out.println(num1);\\n        }\\n\\n        List<Integer> nums = new ArrayList();\\n        nums.add(1);\\n        nums.add(2);\\n        Iterator var10 = nums.iterator();\\n\\n        while(var10.hasNext()) {\\n            int num = (Integer)var10.next();\\n            System.out.println(num);\\n        }\\n\\n        if (nums.size() == num2) {\\n            System.out.println(num2);\\n        }\\n\\n    }\\n}\\n```\\n\\n## \u9605\u8bfb\u5b57\u8282\u7801\\n\\n\u4e3a\u4e86\u65b9\u4fbf\u89e3\u91ca\uff0c\u6211\u5c06\u5b57\u8282\u7801\u6587\u4ef6\u62c6\u6210\u5c0f\u6bb5\uff0c\u9996\u5148\u4f7f\u7528\u4e0b\u9762\u8fd9\u4e2a\u547d\u4ee4\u8f93\u51fa\u5b57\u8282\u7801\\n\\n```bash\\nPS C:\\\\Users\\\\cedar\\\\Desktop\\\\ReadBytecode\\\\code\\\\target\\\\classes> javap -c .\\\\Hello.class\\n```\\n\\n\u4e00\u5f00\u59cb\u5c31\u8bf4\u660e\u4e86\u8fd9\u662f\u300cHello.java\u300d\u7684\u5b57\u8282\u7801\\n\\n```java\\nCompiled from \\"Hello.java\\"\\npublic class Hello {\\n```\\n\\n\u7d27\u63a5\u7740\u81ea\u52a8\u521b\u5efa\u4e86\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u8c03\u7528\u4e86\u7236\u7c7b `Object` \u7684\u521d\u59cb\u5316\u51fd\u6570\u3002 `aload_0` \u662f\u8bf4\u628a\u672c\u5730\u53d8\u4eae\u8868\u4f4d\u7f6e 0 \u7684\u5bf9\u8c61\u52a0\u8f7d\u51fa\u6765\uff0c\u800c\u8fd9\u4e2a\u4f4d\u7f6e\u4fdd\u5b58\u7684\u662f\u5bf9\u81ea\u8eab\u7684\u5f15\u7528\u3002\\n\\n\\n\u4f60\u4f1a\u53d1\u73b0\u5b57\u8282\u7801\u6bcf\u6761\u547d\u4ee4\u524d\u9762\u4e5f\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u6bd4\u5982 `0: aload_0` \u524d\u9762\u6709\u4e00\u4e2a `0` \uff0c\u5b83\u4ee3\u8868 `aload_0` \u8fd9\u6761\u6307\u4ee4\u5728\u7b2c 0 \u4e2a\u4f4d\u7f6e\u3002\u63a5\u7740\u89c2\u5bdf `4: return`\uff0c\u5b83\u7684\u4f4d\u7f6e\u600e\u4e48\u7a81\u7136\u53d8\u6210 4 \u4e86\uff1f\u90a3\u662f\u56e0\u4e3a `invokespecial` \u8fd9\u4e2a\u6307\u4ee4\u8fd8\u6709\u4e24\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u4e00\u5171\u5360\u7528\u4e09\u4e2a\u5b57\u8282\\n\\n```java\\n-- \u5b57\u8282\u7801\\n public Hello();\\n    Code:\\n       0: aload_0\\n       1: invokespecial #1                  // Method java/lang/Object.\\"<init>\\":()V\\n       4: return\\n```\\n\\n`1: invokespecial #1` \u7684 `#1`\uff0c\u4ee3\u8868\u5e38\u91cf\u6c60\u4f4d\u7f6e 1.\u5e38\u91cf\u6c60\u901a\u8fc7 `javap -c -verbose demo.a.B` \u5c31\u53ef\u4ee5\u663e\u793a\u51fa\u6765\uff0c\u5982\u4e0b\u6240\u793a\\n\\n```bash\\nConstant pool:\\n   #1 = Methodref          #15.#48        // java/lang/Object.\\"<init>\\":()V\\n   #2 = Methodref          #12.#49        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\\n   #3 = Methodref          #12.#50        // java/lang/Integer.intValue:()I\\n   ......\\n```\\n\\n\u63a5\u4e0b\u6765\u5c31\u662f `main` \u65b9\u6cd5\u4e86\uff0c\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728 `main` \u65b9\u6cd5\u4e2d\u5e72\u4e86\u4ec0\u4e48\u5417\\n\\n```java\\n// \u6e90\u7801\\n        int num1 = 1;\\n        int num2 = 130;\\n        int num3 = num1 + num2;\\n        int num4 = num2 - num1;\\n        int num5 = num1 * num2;\\n        int num6 = num2 / num1;\\n\\n        final int num7 = 5;\\n        Integer num88 = 6;\\n```\\n\\n\u5b83\u5bf9\u5e94\u7684\u5b57\u8282\u7801\u662f\u4e0b\u9762\u8fd9\u6837\u7684\uff0c\u5177\u4f53\u5185\u5bb9\u6211\u5df2\u7ecf\u6807\u6ce8\u51fa\u6765\u4e86\uff0c\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b `iconst_1` \uff0c\u4ee3\u8868\u5e38\u91cf `int 1` \uff0c\u4e5f\u5c31\u662f\u4ee3\u7801\u4e2d\u6709\u4e2a\u5e38\u91cf \u300c1\u300d\u52a0\u8f7d\u5230\u6808\u9876\\n\\n```java\\n  public static void main(java.lang.String[]);\\n    Code:\\n\\n    -- \u521d\u59cb\u5316 num1 = 1;\u4fdd\u5b58\u5230\u53d8\u91cf\u8868 1\\n       0: iconst_1\\n       1: istore_1\\n\\n    -- \u521d\u59cb\u5316 num2 = 130; \u4fdd\u5b58\u5230 \u53d8\u91cf\u88682\uff0c\u4ee5\u4e0b\u540c\u7406\\n       2: sipush        130\\n       5: istore_2\\n\\n    -- \u8ba1\u7b97 num3(\u533f\u540d\u4e86) = num1 + num2;\\n       6: iload_1\\n       7: iload_2\\n       8: iadd\\n       9: istore_3\\n\\n    -- \u8ba1\u7b97 num4(\u533f\u540d\u4e86) = num2 - num1;  \\n      10: iload_2\\n      11: iload_1\\n      12: isub\\n      13: istore        4\\n\\n    -- \u8ba1\u7b97 num5(\u533f\u540d\u4e86) = num1 * num2; \\n      15: iload_1\\n      16: iload_2\\n      17: imul\\n      18: istore        5\\n\\n    -- \u8ba1\u7b97 num6(\u533f\u540d\u4e86) = num2 / num1;\\n      20: iload_2\\n      21: iload_1\\n      22: idiv\\n      23: istore        6\\n\\n    -- final int num7 = 5;\\n      25: iconst_5\\n      26: istore        7\\n\\n    -- Integer num88 = 6;\\n      28: bipush        6\\n      30: invokestatic  #2                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\\n      33: astore        8\\n```\\n\\n\u7136\u540e\u662f\u8fd9\u4e2a `if` \u8bed\u53e5\\n\\n```java\\n        if (num88 == 0) {\\n            System.out.println(num1);\\n        }\\n```\\n\\n\u6ce8\u610f\u4e0a\u6587 `num88` \u88ab\u4fdd\u5b58\u5230\u53d8\u91cf\u8868\u4f4d\u7f6e 8\uff0c\u6240\u4ee5\u6b64\u5904\u628a\u4f4d\u7f6e 8 \u52a0\u8f7d\u51fa\u6765\\n\\n```java\\n-- \u5b57\u8282\u7801\\n      35: aload         8\\n      37: invokevirtual #3                  // Method java/lang/Integer.intValue:()I\\n      40: ifne          50 -- \u5982\u679c\u4e0d\u7b49\u4e8e 0 \u5c31\u8df3\u8f6c\u5230 50\\n      43: getstatic     #4                  // Field java/lang/System.out:Ljava/io/PrintStream;\\n      46: iload_1          -- \u5b58\u50a8 num1 \u7684\u5730\u65b9\\n      47: invokevirtual #5                  // Method java/io/PrintStream.println:(I)V\\n```\\n\\n\u7136\u540e\u6211\u4eec\u64cd\u4f5c\u4e86\u4e00\u4e2a `List`\\n\\n```java\\n// \u6e90\u7801\\n        List<Integer> nums = new ArrayList<>();\\n        nums.add(1);\\n        nums.add(2);\\n```\\n\\n```java\\n    -- \u521d\u59cb\u5316 List \u5bf9\u8c61\\n      50: new           #6                  // class java/util/ArrayList\\n      53: dup              -- \u628a\u6808\u9876\u7684\u503c\u590d\u5236\u4e00\u4efd\u518d\u538b\u56de\u53bb\uff0c\u6b64\u65f6\u6808\u9876\u6709\u4e24\u4efd\u4e00\u6837\u7684\u503c\uff0c\u5206\u522b\u88ab 54 \u548c 57 \u6307\u4ee4\u6d88\u8017\u4e86\\n      54: invokespecial #7                  // Method java/util/ArrayList.\\"<init>\\":()V\\n      57: astore        9 -- \u5c06\u521d\u59cb\u5316\u7684\u5bf9\u8c61\u5b58\u5230\u5bc4\u5b58\u5668 9\\n\\n    -- list -> add(1);\\n      59: aload         9\\n      61: iconst_1\\n      62: invokestatic  #2                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\\n      65: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\\n      70: pop           -- \u4e22\u5f03\u4e86 add \u8fd4\u56de\u503c\\n\\n    -- list -> add(2)\\n      71: aload         9\\n      73: iconst_2\\n      74: invokestatic  #2                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\\n      77: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\\n      82: pop           -- \u4e22\u5f03\u4e86 add \u8fd4\u56de\u503c\\n```\\n\\n\u904d\u5386 `List` \uff0c\u8fd9\u91cc JVM \u628a `for` \u6539\u6210\u4e86 `while`\\n\\n```java\\n// \u6e90\u4ee3\u7801\\n    for (int num : nums){\\n        System.out.println(num);\\n    }\\n\\n//\u88ab JVM \u8be5\u6210\u5982\u4e0b\u4ee3\u7801\\n    Iterator var10 = nums.iterator();\\n    while(var11.hasNext()) {\\n        int num = (Integer)var11.next();\\n        System.out.println(num);\\n    }\\n```\\n\\n```java\\n    -- \u83b7\u53d6\u8fed\u4ee3\u5668\\n      83: aload         9\\n      85: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\\n      90: astore        10\\n\\n    -- \\n      92: aload         10\\n      94: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\\n      99: ifeq          128 -- \u5982\u679c\u7b49\u4e8e 0\uff0c\u8df3\u8f6c\u5230 128\\n\\n    -- \u83b7\u53d6 next() \u5e76\u6253\u5370\\n     102: aload         10\\n     104: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\\n     109: checkcast     #12                 // class java/lang/Integer  -- \u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u4e3a\u7ed9\u5b9a\u7c7b\u578b\\n     112: invokevirtual #3                  // Method java/lang/Integer.intValue:()I\\n     115: istore        11\\n     117: getstatic     #4                  // Field java/lang/System.out:Ljava/io/PrintStream;\\n     120: iload         11\\n     122: invokevirtual #5                  // Method java/io/PrintStream.println:(I)V\\n     125: goto          92\\n```\\n\\n\u6700\u540e\u6211\u4eec\u5199\u4e86\u4e2a if\\n\\n```java\\n// \u6e90\u7801\\n        if (nums.size() == num2) {\\n            System.out.println(num2);\\n        }\\n```\\n\\n```java\\n    -- \u5982\u679c list.size() == num2; \u6253\u5370 num2\\n     128: aload         9\\n     130: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I\\n     135: iload_2\\n     136: if_icmpne     146\\n     139: getstatic     #4                  // Field java/lang/System.out:Ljava/io/PrintStream;\\n     142: iload_2\\n     143: invokevirtual #5                  // Method java/io/PrintStream.println:(I)V\\n     146: return\\n}\\n```\\n\\n## \u5c0f\u7ed3\\n\\nJava \u7684\u5b57\u8282\u7801\u8fd8\u662f\u8981\u6bd4\u6c47\u7f16\u7b80\u5355\u4e00\u4e9b\u3002\\n\\n\\n\u8fd9\u91cc\u518d\u63d0\u4e00\u70b9\uff0c\u5f53\u8981\u521d\u59cb\u5316\u4e00\u4e2a int \u65f6\uff08\u5728 JVM \u4e2d\uff1abool\uff0cbyte\uff0cchar\uff0cshort \u90fd\u662f int\uff09\uff0c\u6839\u636e\u4e0d\u540c\u7684\u6570\u5b57\u6240\u5360\u7684\u4f4d\u6570\u4e0d\u540c\uff0c\u5206\u522b\u9700\u8981\u5982\u4e0b\u51e0\u4e2a\u547d\u4ee4\uff0c\u65b9\u62ec\u53f7\u4e2d\u7ed9\u51fa\u4e86\u547d\u4ee4\u9002\u7528\u7684\u8303\u56f4\\n\\n- iconst: [-1, 5]\\n- bipush: [-128, 127]\\n- sipush: [-32768, 32767]\\n- idc: any int value\\n\\n---\\n\\n- [https://tech.meituan.com/2019/09/05/java-bytecode-enhancement.html](https://tech.meituan.com/2019/09/05/java-bytecode-enhancement.html)"},{"id":"getting-started-with-jshell","metadata":{"permalink":"/blog/getting-started-with-jshell","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-23-getting-started-with-jshell/index.md","source":"@site/blog/2021-02-23-getting-started-with-jshell/index.md","title":"\u521d\u8bc6 JShell","description":"\u521d\u8bc6 JShell","date":"2021-02-23T00:00:00.000Z","formattedDate":"2021\u5e742\u670823\u65e5","tags":[{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":3.935,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"getting-started-with-jshell","title":"\u521d\u8bc6 JShell","authors":["solidSpoon"],"tags":["Java"]},"unlisted":false,"prevItem":{"title":"\u624b\u628a\u624b\u6559\u4f60\u8bfb\u4e00\u4e2a Java \u6587\u4ef6\u7684\u5b57\u8282\u7801","permalink":"/blog/step-by-step-guide-to-reading-bytecode-of-a-java-file"},"nextItem":{"title":"Docker \u8bca\u65ad\u795e\u5668 BusyBox","permalink":"/blog/docker-diagnostic-tool-busybox"}},"content":"## \u521d\u8bc6 JShell\\n\\n\u5347\u7ea7\u5230 Java 11 \u540e\uff0c\u6709\u4e86 JShell \u8fd9\u4e2a\u5de5\u5177\uff08\u5176\u5b9e Java 9 \u5c31\u6709\u4e86\uff09\uff0c\u5b83\u8ba9 Java \u53ef\u4ee5\u50cf\u811a\u672c\u8bed\u8a00\u4e00\u6837\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4ea4\u4e92\uff0c\u542c\u8d77\u6765\u597d\u795e\u5947\uff0c\u5feb\u6765\u4f53\u9a8c\u4e00\u4e0b\uff01\uff01\\n\\n## \u542f\u52a8\u4e0e\u9000\u51fa\\n\\n\u4fdd\u9669\u8d77\u89c1\uff0c\u5f97\u5148\u5f04\u660e\u767d\u542f\u52a8\u4e0e\u9000\u51fa\\n\\n\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u8f93\u5165 `jshell` \u5c31\u542f\u52a8\u4e86\\n\\n```bash\\n\u279c  ~cedar jshell\\n|  Welcome to JShell -- Version 11.0.9.1\\n|  For an introduction type: /help intro\\n\\njshell>\\n```\\n\\n\u9000\u51fa\u65b9\u5f0f\u7a0d\u5fae\u6709\u4e00\u4e9b\u7279\u522b\uff0c\u547d\u4ee4\u662f `/exit`\\n\\n```bash\\njshell> /exit\\n|  Goodbye\\n```\\n\\n`jshell -h` \u53ef\u4ee5\u53d1\u73b0\u63d0\u4f9b\u4e86\u51e0\u4e2a\u9009\u9879\uff0c\u8fd9\u4ee8\u6bd4\u8f83\u6709\u610f\u601d\\n\\n```bash\\n    -q                    Quiet feedback.  Same as: --feedback concise\\n    -s                    Really quiet feedback.  Same as: --feedback silent\\n    -v                    Verbose feedback.  Same as: --feedback verbose\\n```\\n\\n\u8bd5\u4e86\u4e00\u4e0b `-s` \u975e\u5e38\u5b89\u9759\u7684\u53cd\u9988\uff0c\u770b\u8d77\u6765\u771f\u7684\u6e05\u723d\\n\\n```bash\\n\u279c  ~cedar jshell -s\\n-> int a = 1;\\n-> int b = 2;\\n```\\n\\n\u521d\u5b66\u8005\u8fd8\u662f\u522b\u6574\u8fd9\u4e48\u5b89\u9759\u4e86\uff0c\u4f7f\u7528 `-v` \u5f00\u542f\u8be6\u7ec6\u53cd\u9988\u5427\\n\\n```bash\\n\u279c  ~cedar jshell -v\\n|  Welcome to JShell -- Version 11.0.9.1\\n|  For an introduction type: /help intro\\n\\njshell>\\n```\\n\\n## \u7b80\u5355\u4f7f\u7528\\n\\n### \u53d8\u91cf\u8d4b\u503c\\n\\n\u8d4b\u51e0\u4e2a\u503c\u770b\u770b\\n\\n```bash\\njshell> int a = 1\\na ==> 1\\n|  created variable a : int\\n\\njshell> a + 1\\n$2 ==> 2\\n|  created scratch variable $2 : int\\n\\njshell> $2 + a\\n$3 ==> 3\\n|  created scratch variable $3 : int\\n```\\n\\n\u53ef\u89c1\uff1a\u6ca1\u6709\u6307\u5b9a\u53d8\u91cf\u7684\u6570\u5b57\u4f1a\u81ea\u52a8\u8d4b\u503c\u7ed9\u4e34\u65f6\u53d8\u91cf\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\\n\\n### \u65b9\u6cd5\u4e0e\u7c7b\\n\\n\u90a3\u521b\u5efa\u65b9\u6cd5\u5462\uff1f\\n\\n```bash\\njshell> String addMark(Word word) {\\n   ...> return word.val + \\"!\\";\\n   ...> }\\n|  created method addMark(Word), however, it cannot be referenced until class Word is declared\\n```\\n\\n\u8fd9\u91cc\u65b9\u6cd5\u4f20\u5165\u4e86\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u7c7b\uff0c\u4ed6\u544a\u8bc9\u6211\u4eec\u8981\u5b9a\u4e49\u8fd9\u4e2a\u7c7b\u624d\u80fd\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u90a3\u5b9a\u4e49\u4e00\u4e0b\u5427\\n\\n```bash\\n\\njshell> class Word {\\n   ...> String val;\\n   ...> public Word() {\\n   ...> val = \\"hello word\\";\\n   ...> }\\n   ...> }\\n|  created class Word\\n|    update replaced method addMark(Word)\\n```\\n\\n\u521b\u5efa\u4e2a\u5bf9\u8c61\u8c03\u7528\u4e00\u4e0b\\n\\n```bash\\n\\njshell> Word words = new Word()\\nwords ==> Word@2ef1e4fa\\n|  created variable words : Word\\n\\njshell> addMark(words)\\n$4 ==> \\"hello word!\\"\\n|  created scratch variable $4 : String\\n```\\n\\n### \u5185\u7f6e\u547d\u4ee4\\n\\n\u8f93\u5165 `/help` \u5c31\u80fd\u770b\u5230\u6240\u6709\u53ef\u4ee5\u4f7f\u7528\u7684\u547d\u4ee4\uff0c\u4f8b\u5982\u5217\u51fa\u6240\u6709\u53d8\u91cf\\n\\n```bash\\n\\njshell> /vars\\n|    Word words = Word@2ef1e4fa\\n|    String $4 = \\"hello word!\\"\\n```\\n\\n## \u5916\u90e8\u7f16\u8f91\u5668\\n\\n\u6709\u6ca1\u6709\u89c9\u5f97\u5728\u547d\u4ee4\u884c\u5b9a\u4e49\u7c7b\u6216\u8005\u65b9\u6cd5\u5565\u7684\u592a\u8d39\u4e8b\u4e86\uff0c\u5176\u5b9e JShell \u652f\u6301\u4f7f\u7528\u7f16\u8f91\u5668\\n\\n### \u4f7f\u7528\u9ed8\u8ba4\u7f16\u8f91\u5668\\n\\n\u5148\u5b9a\u4e49\u4e00\u4e2a\u7c7b\\n\\n```bash\\njshell> class Friend{}\\n|  \u5df2\u521b\u5efa \u7c7b Friend\\n```\\n\\n\u8c03\u7528\u81ea\u5e26\u7684\u7f16\u8f91\u5668\\n\\n```bash\\njshell> /edit Friend\\n```\\n\\n\u5982\u4e0b\u56fe\uff0c\u70b9\u51fb Accept \u5c31\u884c\\n\\n![img](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20210223013703.png)\\n\\n\u6ce8\u610f\u4e00\u5b9a\u662f\u4e4b\u524d\u5b9a\u4e49\u597d\u7684\u7247\u6bb5\uff0c\u5982\u4e0b\uff1a\\n\\n```bash\\njshell> /list\\n\\n   1 : int a = 1;\\n   2 : int b = 2;\\n   3 : int c = 1;\\n   6 : class Friend{\\n       String val = \\"No Friend !!!\\";\\n       }\\n```\\n\\n\u5426\u5219\u4f1a\u62a5\u9519\\n\\n```bash\\njshell> /edit Dog\\n|  \u6ca1\u6709\u6b64\u7c7b\u7247\u6bb5: Dog\\n```\\n\\n### \u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\\n\\n\u5982\u679c\u60f3\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\u5462\uff0c\u81ea\u5e26\u7684\u592a\u4e0d\u597d\u7528\\n\\n```bash\\njshell> /set editor vim\\n|  \u7f16\u8f91\u5668\u8bbe\u7f6e\u4e3a: vim\\n```\\n\\n```bash\\njshell> /set editor \\"C:\\\\\\\\Users\\\\\\\\cedar\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS Code\\\\\\\\code\\" -w\\n|  \u7f16\u8f91\u5668\u8bbe\u7f6e\u4e3a: C:\\\\Users\\\\cedar\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\code -w\\n```\\n\\n\u8be5 `-w` \u9009\u9879\u8bbe\u7f6e\u7b49\u5f85\u6587\u4ef6\u5173\u95ed\u540e\u518d\u8fd4\u56de\\n\\n\u4e0a\u8ff0\u8bbe\u7f6e\u662f\u4e00\u6b21\u6027\u7684\uff0c\u60f3\u6c38\u4e45\u8bbe\u7f6e\u7684\u8bdd\uff0c\u4f7f\u7528 `-retain` \u9009\u9879\\n\\n```bash\\njshell> /set editor -retain vim\\n```"},{"id":"docker-diagnostic-tool-busybox","metadata":{"permalink":"/blog/docker-diagnostic-tool-busybox","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021/02-18-docker-diagnostic-tool-busybox/index.md","source":"@site/blog/2021/02-18-docker-diagnostic-tool-busybox/index.md","title":"Docker \u8bca\u65ad\u795e\u5668 BusyBox","description":"BusyBox \u662f\u4e00\u4e2a\u96c6\u6210\u4e86\u4e00\u767e\u591a\u4e2a\u6700\u5e38\u7528 Linux \u547d\u4ee4\u548c\u5de5\u5177\uff08\u5982 cat\u3001echo\u3001grep\u3001mount\u3001telnet \u3001ping\u3001ifconfig \u7b49\uff09\u7684\u7cbe\u7b80\u5de5\u5177\u7bb1\uff0c\u5b83\u53ea\u9700\u8981\u51e0 MB \u7684\u5927\u5c0f\uff0c\u5f88\u65b9\u4fbf\u8fdb\u884c\u5404\u79cd\u5feb\u901f\u9a8c\u8bc1\uff0c\u88ab\u8a89\u4e3a\u201cLinux \u7cfb\u7edf\u7684\u745e\u58eb\u519b\u5200\u201d\u3002","date":"2021-02-18T00:00:00.000Z","formattedDate":"2021\u5e742\u670818\u65e5","tags":[{"label":"Docker","permalink":"/blog/tags/docker"}],"readingTime":0.87,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"docker-diagnostic-tool-busybox","title":"Docker \u8bca\u65ad\u795e\u5668 BusyBox","authors":["solidSpoon"],"tags":["Docker"]},"unlisted":false,"prevItem":{"title":"\u521d\u8bc6 JShell","permalink":"/blog/getting-started-with-jshell"},"nextItem":{"title":"Docker \u7f51\u7edc\u8bbe\u7f6e","permalink":"/blog/docker-network-configuration"}},"content":"> BusyBox \u662f\u4e00\u4e2a\u96c6\u6210\u4e86\u4e00\u767e\u591a\u4e2a\u6700\u5e38\u7528 Linux \u547d\u4ee4\u548c\u5de5\u5177\uff08\u5982 cat\u3001echo\u3001grep\u3001mount\u3001telnet \u3001ping\u3001ifconfig \u7b49\uff09\u7684\u7cbe\u7b80\u5de5\u5177\u7bb1\uff0c\u5b83\u53ea\u9700\u8981\u51e0 MB \u7684\u5927\u5c0f\uff0c\u5f88\u65b9\u4fbf\u8fdb\u884c\u5404\u79cd\u5feb\u901f\u9a8c\u8bc1\uff0c\u88ab\u8a89\u4e3a\u201cLinux \u7cfb\u7edf\u7684\u745e\u58eb\u519b\u5200\u201d\u3002\\n\\n\\n\\nBusyBox \u5bb9\u5668\u955c\u50cf\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u6d4b\u8bd5\u5bb9\u5668\u7f51\u7edc\\n\\n\\n\u76f4\u63a5\u8fd0\u884c\u5e76\u8fdb\u5165\u547d\u4ee4\u884c\uff1a\\n```bash\\ndocker run --name <my-docker-name> -it --rm busybox sh\\n```\\n`--rm`\xa0\u53c2\u6570\u53ef\u4ee5\u8ba9\u6211\u4eec\u5728\u9000\u51fa\u5bb9\u5668\u65f6\u81ea\u52a8\u9500\u6bc1\u8be5\u5bb9\u5668\\n\\n\\n\u521b\u5efa\u65f6\u6307\u5b9a\u7f51\u7edc\\n```bash\\ndocker run -it --rm --name <my-docker-name> --network <my-net> busybox sh\\n```\\n\u5c06\u4e00\u4e2a\u5bb9\u5668\u8fde\u63a5\u5230\u7f51\u7edc\\n```bash\\ndocker network connect <my-net> <my-docker-name>\\n```\\n\u5c06\u5bb9\u5668\u4ece\u7f51\u7edc\u65ad\u5f00\\n```bash\\ndocker network disconnect <my-net> <my-docker-name>\\n```"},{"id":"docker-network-configuration","metadata":{"permalink":"/blog/docker-network-configuration","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021/02-18-docker-network-configuration/index.md","source":"@site/blog/2021/02-18-docker-network-configuration/index.md","title":"Docker \u7f51\u7edc\u8bbe\u7f6e","description":"\u8fd9\u91cc\u5217\u51fa Docker \u914d\u7f6e\u7f51\u7edc\u7684\u5e38\u7528\u547d\u4ee4","date":"2021-02-18T00:00:00.000Z","formattedDate":"2021\u5e742\u670818\u65e5","tags":[{"label":"Docker","permalink":"/blog/tags/docker"}],"readingTime":1.235,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"docker-network-configuration","title":"Docker \u7f51\u7edc\u8bbe\u7f6e","authors":["solidSpoon"],"tags":["Docker"]},"unlisted":false,"prevItem":{"title":"Docker \u8bca\u65ad\u795e\u5668 BusyBox","permalink":"/blog/docker-diagnostic-tool-busybox"},"nextItem":{"title":"MySQL 8.0 \u642d\u5efa\u534a\u540c\u6b65\u590d\u5236","permalink":"/blog/mysql-8-0-building-semi-synchronous-replication"}},"content":"\u8fd9\u91cc\u5217\u51fa Docker \u914d\u7f6e\u7f51\u7edc\u7684\u5e38\u7528\u547d\u4ee4\\n\\n> - docker network create\\n> - docker network connect\\n> - docker network ls\\n> - docker network rm\\n> - docker network disconnect\\n> - docker network inspect\\n\\n\\n\\n\u5217\u51fa\u6240\u6709\u7f51\u7edc\\n```bash\\ndocker network ls\\n```\\n\u521b\u5efa\u7f51\u7edc\\n```bash\\ndocker network create <my-net>\\n```\\n\u67e5\u770b\u7f51\u7edc\u4fe1\u606f\\n```bash\\ndocker network inspect <my-net>\\n```\\n\u67e5\u770b\u5bb9\u5668\u7684\u4fe1\u606f\\n```bash\\ndocker network inspect <my-docker-name>\\n```\\n\u5c06\u4e00\u4e2a\u5bb9\u5668\u8fde\u63a5\u5230\u7f51\u7edc\\n```bash\\ndocker network connect <my-net> <my-docker-name>\\n```\\n\u521b\u5efa\u5bb9\u5668\u65f6\u5c31\u6307\u5b9a\u7f51\u7edc\uff0c\u4ee5 busybox \u4e3a\u4f8b\\n```bash\\ndocker run -it --rm --name busybox1 --network <my-net> busybox sh\\n```\\n\u7ed9\u5bb9\u5668\u5728\u6307\u5b9a\u7f51\u7edc\u4e2d\u8d77\u4e00\u4e2a\u522b\u540d\uff0c\u7f51\u7edc\u4e2d\u7684\u5bb9\u5668\u53ef\u4ee5\u901a\u8fc7\u522b\u540d\u8bbf\u95ee\\n```bash\\ndocker run --net <my-net> -itd --name <my-docker-name> --net-alias <alias-name> busybox\\n```\\n\u591a\u4e2a\u5bb9\u5668\u8d77\u4e00\u4e2a\u522b\u540d\u65f6\u7b2c\u4e00\u4e2a\u8d77\u7684\u6709\u6548\uff0c\u7b2c\u4e00\u4e2a\u4e0b\u7ebf\u540e\u7b2c\u4e8c\u4e2a\u6709\u6548\\n\\n\\n\u5c06\u5bb9\u5668\u4ece\u7f51\u7edc\u65ad\u5f00\\n```bash\\ndocker network disconnect <my-net> <my-docker-name>\\n```\\n\u5220\u9664\u521b\u5efa\u7684\u7f51\u7edc\\n```bash\\ndocker network rm <my-net>\\n```\\n\u9700\u8981\u4fdd\u8bc1\u8be5\u7f51\u7edc\u6ca1\u6709\u5bb9\u5668\u94fe\u63a5\\n\\n---\\n\\n\u53c2\u8003\u94fe\u63a5\\n\\n- https://blog.csdn.net/gezhonglei2007/article/details/51627821\\n- https://www.cnkirito.moe/docker-network-bridge/"},{"id":"mysql-8-0-building-semi-synchronous-replication","metadata":{"permalink":"/blog/mysql-8-0-building-semi-synchronous-replication","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021/02-17-mysql-8-0-building-semi-synchronous-replication/index.md","source":"@site/blog/2021/02-17-mysql-8-0-building-semi-synchronous-replication/index.md","title":"MySQL 8.0 \u642d\u5efa\u534a\u540c\u6b65\u590d\u5236","description":"\u8bf4\u660e\uff1a\u642d\u5efa\u534a\u540c\u6b65\u590d\u5236\u9700\u8981\u9884\u5148\u6709\u57fa\u672c\u7684\u4e3b\u4ece\u590d\u5236\u73af\u5883\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u6211\u4e4b\u524d\u7684\u6587\u7ae0\uff1a","date":"2021-02-17T00:00:00.000Z","formattedDate":"2021\u5e742\u670817\u65e5","tags":[{"label":"\u6559\u7a0b","permalink":"/blog/tags/\u6559\u7a0b"}],"readingTime":3.725,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"mysql-8-0-building-semi-synchronous-replication","title":"MySQL 8.0 \u642d\u5efa\u534a\u540c\u6b65\u590d\u5236","authors":["solidSpoon"],"tags":["\u6559\u7a0b"]},"unlisted":false,"prevItem":{"title":"Docker \u7f51\u7edc\u8bbe\u7f6e","permalink":"/blog/docker-network-configuration"},"nextItem":{"title":"Win10 - MySQL 5.7 - Docker \u642d\u5efa\u4e3b\u4ece\u590d\u5236","permalink":"/blog/win10-mysql-5-7-docker-building-master-slave-replication"}},"content":"\u8bf4\u660e\uff1a\u642d\u5efa\u534a\u540c\u6b65\u590d\u5236\u9700\u8981\u9884\u5148\u6709\u57fa\u672c\u7684\u4e3b\u4ece\u590d\u5236\u73af\u5883\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u6211\u4e4b\u524d\u7684\u6587\u7ae0\uff1a\\n\\n> https://github.com/solidSpoon/solidSpoon.github.io/wiki\\n\\n\u534a\u540c\u6b65\u8d85\u65f6\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u964d\u4e3a\u5f02\u6b65\u5de5\u4f5c\u3002\u5f53Slave\u5f00\u542f\u534a\u540c\u6b65\u540e\uff0c\u6216\u8005\u5f53\u4e3b\u4ece\u4e4b\u95f4\u7f51\u7edc\u5ef6\u8fdf\u6062\u590d\u6b63\u5e38\u7684\u65f6\u5019\uff0c\u534a\u540c\u6b65\u590d\u5236\u4f1a\u81ea\u52a8\u4ece\u5f02\u6b65\u590d\u5236\u53c8\u8f6c\u4e3a\u534a\u540c\u6b65\u590d\u5236\uff0c\u8fd8\u662f\u76f8\u5f53\u667a\u80fd\u7684\u3002\\n\\n## Master \u914d\u7f6e\\n\\n\\n\u5b89\u88c5\u534a\u540c\u6b65\u6a21\u5757\u5e76\u542f\u52a8\\n\\n\\n\u8fd9\u91cc Windows \u7248\u672c\u6709\u4e2a\u5751\\n\\n\u5bf9\u4e8e Linux \u6765\u8bf4\uff1a\u6b64\u6a21\u5757\u4f4d\u7f6e\u5728 `/usr/local/mysql/lib/plugin/semisync_master.so`\\n\u5bf9\u4e8e Windows Zip \u7248\u672c\u6765\u8bf4\uff1a\u63d2\u4ef6\u7684\u4f4d\u7f6e\u672c\u6765\u5728 `..\\\\lib\\\\semisync_master.dll` \uff0c\u4f46\u662f MySQL \u9ed8\u8ba4\u7684\u4f4d\u7f6e\u662f `\\\\bin\\\\lib\\\\plugin\\\\semisync_master.so`\xa0\\n\\n\\n\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u628a lib \u76ee\u5f55\u590d\u5236\u4e00\u4efd\u8fc7\u53bb\u5c31\u597d\u4e86\u3002\\n\\n\\n\u4e5f\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u63d2\u4ef6\u76ee\u5f55\uff1a\\n\\n```bash\\n[mysqld]\\nplugin_dir=/path/to/plugin/directory\\n```\\n\\n\u5982\u679c [plugin_dir](https://www.docs4dev.com/docs/zh/mysql/5.7/reference/server-system-variables.html#sysvar_plugin_dir) \u7684\u503c\u662f\u76f8\u5bf9\u8def\u5f84\u540d\uff0c\u5219\u5c06\u5176\u89c6\u4e3a\u76f8\u5bf9\u4e8e MySQL \u57fa\u672c\u76ee\u5f55\uff08 [basedir](https://www.docs4dev.com/docs/zh/mysql/5.7/reference/server-system-variables.html#sysvar_basedir) \u7cfb\u7edf\u53d8\u91cf\u7684\u503c\uff09\u3002\\n\\n\\n\u4e0b\u9762\u662f\u5b89\u88c5\u6a21\u5757\u7684\u547d\u4ee4\uff1a\\n\\n\\nLinux\uff1a\\n\\n```bash\\nmysql> install plugin rpl_semi_sync_master soname \'semisync_master.so\';\\n```\\n\\nWindows\uff1a\\n\\n```bash\\nmysql> install plugin rpl_semi_sync_master soname \'semisync_master.dll\';\\n```\\n\\n\\n\u5b89\u88c5\u5b8c\u540e\uff1a\\n\\n```bash\\nmysql> show global variables like \'%semi%\';\\n```\\n\\n```bash\\nmysql> show global variables like \'%semi%\';\\n+-------------------------------------------+------------+\\n| Variable_name                             | Value      |\\n+-------------------------------------------+------------+\\n| rpl_semi_sync_master_enabled              | OFF        | -> \u662f\u5426\u542f\u7528\u534a\u540c\u6b65\u534f\u8bae\\n| rpl_semi_sync_master_timeout              | 10000      | -> \u94fe\u63a5 Slave \u8d85\u65f6\u65f6\u95f4\\n| rpl_semi_sync_master_trace_level          | 32         |\\n| rpl_semi_sync_master_wait_for_slave_count | 1          |\\n| rpl_semi_sync_master_wait_no_slave        | ON         |\\n| rpl_semi_sync_master_wait_point           | AFTER_SYNC | -> MySQL 5.7 \u4e4b\u540e\u9ed8\u8ba4\u503c\\n+-------------------------------------------+------------+\\n6 rows in set, 1 warning (0.02 sec)\\n```\\n\\n\\n```bash\\nmysql> set global rpl_semi_sync_master_enabled = 1;\\nmysql> set global rpl_semi_sync_master_timeout = 2000;\\n```\\n\\n\\n\u5b89\u88c5\u540e\u542f\u52a8\u548c\u5b9a\u5236\u4e3b\u4ece\u8fde\u63a5\u9519\u8bef\u7684\u8d85\u65f6\u65f6\u95f4\u9ed8\u8ba4\u662f 10s \u53ef\u6539\u4e3a 2s\uff0c\u4e00\u65e6\u6709\u4e00\u6b21\u8d85\u65f6\u81ea\u52a8\u964d\u7ea7\u4e3a\u5f02\u6b65\u3002\uff08\u4ee5\u4e0a\u5185\u5bb9\u8981\u60f3\u6c38\u4e45\u6709\u6548\u9700\u8981\u5199\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\uff09\\n\\n\\n```bash\\n[root@localhost ~]# cat /etc/my.cnf\\n[mysqld]\\nrpl_semi_sync_master_enabled = 1;\\nrpl_semi_sync_master_timeout = 2000;\\n```\\n\\n\\n## Slave \u914d\u7f6e\\n\\n\\n1\uff09\u5b89\u88c5\u534a\u540c\u6b65\u6a21\u5757\u5e76\u542f\u52a8\\n\\n\\nLinux\uff1a\\n\\n```bash\\nmysql> install plugin rpl_semi_sync_slave soname \'semisync_slave.so\';\\n```\\n\\nWIndows\uff1a\\n\\n```bash\\nmysql> install plugin rpl_semi_sync_slave soname \'semisync_slave.dll\';\\n```\\n\\n\u540c\u6837\uff0c\u5982\u679c\u62a5\u9519\u5c31\u628a\u63d2\u4ef6\u76ee\u5f55\u79fb\u52a8\u4e00\u4e0b\\n\\n`lib` -> `bin\\\\lib`\\n\\n\\n\u63a5\u7740\u6267\u884c\\n\\n\\n```bash\\nmysql> set global rpl_semi_sync_slave_enabled = 1;\\nmysql> show global variables like \'%semi%\';\\n+-------------------------------------------+------------+\\n| Variable_name                             | Value      |\\n+-------------------------------------------+------------+\\n| rpl_semi_sync_master_enabled              | ON         |\\n| rpl_semi_sync_master_timeout              | 10000      |\\n| rpl_semi_sync_master_trace_level          | 32         |\\n| rpl_semi_sync_master_wait_for_slave_count | 1          |\\n| rpl_semi_sync_master_wait_no_slave        | ON         |\\n| rpl_semi_sync_master_wait_point           | AFTER_SYNC |\\n| rpl_semi_sync_slave_enabled               | ON         |\\n| rpl_semi_sync_slave_trace_level           | 32         |\\n+-------------------------------------------+------------+\\n8 rows in set, 1 warning (0.00 sec)\\n```\\n\\n\\n2\uff09\u4ece\u8282\u70b9\u9700\u8981\u91cd\u65b0\u8fde\u63a5\u4e3b\u670d\u52a1\u5668\u534a\u540c\u6b65\u624d\u4f1a\u751f\u6548\\n\\n\\n```bash\\nmysql> stop slave io_thread;\\nmysql> start slave io_thread;\\n```\\n\\n\\nPS\uff1a\u5982\u679c\u60f3\u5378\u8f7d\u5f02\u6b65\u6a21\u5757\u5c31\u4f7f\u7528 uninstall \u5373\u53ef\u3002\\n\\n\\nMaster \u4e0a\u67e5\u770b\u662f\u5426\u542f\u7528\u4e86\u534a\u540c\u6b65\\n\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20210203214530.png)\\n\\n\\n\u73b0\u5728\u534a\u540c\u6b65\u5df2\u7ecf\u6b63\u5e38\u5de5\u4f5c\u4e86\uff0c\u4e3b\u8981\u770b `Rpl_semi_sync_master_clients` \u662f\u5426\u4e0d\u4e3a 0\uff0c`Rpl_semi_sync_master_status` \u662f\u5426\u4e3a ON\u3002\u5982\u679c `Rpl_semi_sync_master_status` \u4e3a OFF\uff0c\u8bf4\u660e\u51fa\u73b0\u4e86\u7f51\u7edc\u5ef6\u8fdf\u6216 Slave IO \u7ebf\u7a0b\u5ef6\u8fdf\u3002\\n\\n## \u9a8c\u8bc1\\n\\n\u534a\u540c\u6b65\u8d85\u65f6\uff0c\u662f\u5426\u4f1a\u81ea\u52a8\u964d\u4e3a\u5f02\u6b65\u5de5\u4f5c\\n\\n### Slave\\n\\n## \u5173\u95ed\u534a\u540c\u6b65;\\n\\n```bash\\nmysql> set global rpl_semi_sync_slave_enabled = 0 ;\\nmysql> stop slave io_thread;\\nmysql> start slave io_thread;\\n```\\n\\n### Master\\n\\n```bash\\nmysql> insert into t1(id) values(5),(4);\\nQuery OK, 2 rows affected (10.06 sec)\\nmysql> insert into t1(id) values(6),(7);\\nQuery OK, 2 rows affected (0.03 sec)\\n```"},{"id":"win10-mysql-5-7-docker-building-master-slave-replication","metadata":{"permalink":"/blog/win10-mysql-5-7-docker-building-master-slave-replication","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021/02-17-win10-mysql-5-7-docker-building-master-slave-replication/index.md","source":"@site/blog/2021/02-17-win10-mysql-5-7-docker-building-master-slave-replication/index.md","title":"Win10 - MySQL 5.7 - Docker \u642d\u5efa\u4e3b\u4ece\u590d\u5236","description":"\u642d\u5efa\u73af\u5883\uff1aWindows 10 Docker Desktop WSL 2 based engine","date":"2021-02-17T00:00:00.000Z","formattedDate":"2021\u5e742\u670817\u65e5","tags":[{"label":"\u6559\u7a0b","permalink":"/blog/tags/\u6559\u7a0b"}],"readingTime":2.715,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"win10-mysql-5-7-docker-building-master-slave-replication","title":"Win10 - MySQL 5.7 - Docker \u642d\u5efa\u4e3b\u4ece\u590d\u5236","authors":["solidSpoon"],"tags":["\u6559\u7a0b"]},"unlisted":false,"prevItem":{"title":"MySQL 8.0 \u642d\u5efa\u534a\u540c\u6b65\u590d\u5236","permalink":"/blog/mysql-8-0-building-semi-synchronous-replication"},"nextItem":{"title":"Win10 - MySQL 8.0 - Docker \u642d\u5efa\u4e3b\u4ece\u590d\u5236","permalink":"/blog/win10-mysql-8-0-docker-building-master-slave-replication"}},"content":"> \u642d\u5efa\u73af\u5883\uff1aWindows 10 Docker Desktop WSL 2 based engine\\n\\n## \u521b\u5efa\\n\\n\u9996\u5148\u521b\u5efa\u4e24\u4e2a\u6570\u636e\u5e93\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u4e3b\u5e93\uff0c\u53e6\u4e00\u4e2a\u4f5c\u4e3a\u4ece\u5e93\\n\\n### \u7f16\u5199 docker-conpose \u6587\u4ef6\\n\\n\u9996\u5148\u5b89\u88c5 docker\uff0cdocker-compose\\n\u4e00\u822c\u5b89\u88c5\u4e86 docker \u90fd\u4f1a\u5b89\u88c5 docker-compose\uff0c\u53ef\u4ee5\u4f7f\u7528 `docker-compose -verison` \u67e5\u770b\u662f\u5426\u5b89\u88c5\\n\\n\\n`docker pull mysql:5.7` \u62c9\u53d6 mysql5.7 \u955c\u50cf\\n\\n\\n\u7f16\u5199 docker-compose \u6587\u4ef6\u300cdocker-compose.yaml\u300d\\n\\n```yaml\\nversion: \'2\' \\nnetworks:\\n  byfn:                                       #\u914d\u7f6ebyfn\u7f51\u7edc\\nservices:\\n  master:                                     #\u914d\u7f6emaster\u670d\u52a1\\n    image: \'mysql:5.7\'                        #\u4f7f\u7528\u521a\u624dpull\u4e0b\u6765\u7684\u955c\u50cf\\n    restart: always\\n    container_name: mysql-master              #\u5bb9\u5668\u8d77\u540d mysql-master\\n    environment:\\n      MYSQL_USER: test\\n      MYSQL_PASSWORD: admin123\\n      MYSQL_ROOT_PASSWORD: admin123           #\u914d\u7f6eroot\u7684\u5bc6\u7801\\n    ports:\\n      - \'3316:3306\'                           #\u914d\u7f6e\u7aef\u53e3\u6620\u5c04\\n    volumes:\\n      - \\"./master/my.cnf:/etc/mysql/my.cnf\\"   #\u914d\u7f6emy.cnf\u6587\u4ef6\u6302\u8f7d\uff0c\\n    networks:\\n      - byfn                                  #\u914d\u7f6e\u5f53\u524dservie\u6302\u8f7d\u7684\u7f51\u7edc\\n  slave:                                      #\u914d\u7f6eslave\u670d\u52a1\\n    image: \'mysql:5.7\'\\n    restart: always\\n    container_name: mysql-slave\\n    environment:\\n      MYSQL_USER: test\\n      MYSQL_PASSWORD: admin123\\n      MYSQL_ROOT_PASSWORD: admin123\\n    ports:\\n      - \'3326:3306\'\\n    volumes:\\n      - \\"./slave/my.cnf:/etc/mysql/my.cnf\\"\\n    networks:\\n      - byfn\\n```\\n\\n### \u7f16\u5199 cnf \u6587\u4ef6\\n\\n\\n\u5728 `docker-compose.yaml` \u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u5efa\u7acb\u4e24\u4e2a\u6587\u4ef6\u5939\uff0cmaster \u548c slave\uff0c\u91cc\u9762\u5206\u522b\u5199\u5165\u6587\u4ef6\u300cmy.cnf\u300d\\n\\n\\n```yaml\\nmater/my.cnf\\n\\n[mysqld]\\nserver-id=1\\nlog-bin=/var/lib/mysql/mysql-bin\\n\\nslave/my.cnf\\n\\n\\n[mysqld]\\nserver-id=2\\n```\\n\\n\u5206\u522b\u4fdd\u5b58\u540e\u9000\u51fa\\n\\n\\n\u7136\u540e\u5728\u5f53\u524d docker-compose.yaml \u6587\u4ef6\u76ee\u5f55\u4e0b\u6267\u884c\\n\\n```shell\\ndocker-compose -f docker-compse.yaml up -d\\n```\\n\\n\u6b64\u65f6\u4e24\u4e2a\u6570\u636e\u5e93\u521b\u5efa\u6210\u529f\\n\\n## \u914d\u7f6e\\n\\n### Master\\n\\n\u542f\u52a8\u4e4b\u540e\u8fdb\u5165 master \u5bb9\u5668\\n\\n\\n```shell\\ndocker exec -it mysql-master /bin/bash\\nmysql -uroot -padmin123\\n\u8fdb\u5165 mysql \u7ec8\u7aef\u4e4b\u540e\\nmysql> create user \'repl\'@\'%\' identified by \'admin123\';\\nmysql> GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO \'repl\'@\'%\'; \\nmysql> flush privileges;\\nmysql> show master status;\\n```\\n\\n\u6700\u540e\u7684 `show master status;`\\n\\n\\n```shell\\nmysql> show master status;\\n+------------------+----------+--------------+------------------+-------------------+\\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\\n+------------------+----------+--------------+------------------+-------------------+\\n| mysql-bin.000003 |      767 |              |                  |                   |\\n+------------------+----------+--------------+------------------+-------------------+\\n1 row in set (0.00 sec)\\n```\\n\\n\u9700\u8981\u8bb0\u4f4f File \u540d\u5b57\uff0c\u548c Position \u504f\u79fb\u4f4d\u7f6e\\n\\n### Slave\\n\\n\u53e6\u8d77\u4e00\u4e2a\u7ec8\u7aef\u8fdb\u5165 slave \u5bb9\u5668\\n\\n```shell\\ndocker exec -it mysql-slave /bin/bash\\nmysql -uroot -padmin123\\n\u8fdb\u5165 mysql \u7ec8\u7aef\u4e4b\u540e\\nmysql> CHANGE MASTER TO MASTER_HOST=\'mysql-master\', MASTER_PORT=3306,  MASTER_USER=\'repl\', MASTER_PASSWORD=\'admin123\', MASTER_LOG_FILE=\'mysql-bin.000003\', MASTER_LOG_POS=767;\\nmysql> start slave;\\n```\\n\\n\u8fd9\u91cc\u4e24\u4e2a\u53c2\u6570 MASTER_LOG_FILE \u548c MASTER_LOG_POS \u5c31\u662f\u524d\u9762 master \u4e0a\u6700\u540e\u67e5\u8be2\u51fa\u6765\u7684\uff1b\\n\\n\\n```shell\\nmysql> show slave status\\\\G\\n*************************** 1. row ***************************\\n               Slave_IO_State: Waiting for master to send event\\n                  Master_Host: mysql-master\\n                  Master_User: repl\\n                  Master_Port: 3306\\n                Connect_Retry: 60\\n              Master_Log_File: mysql-bin.000003\\n          Read_Master_Log_Pos: 1116\\n               Relay_Log_File: eefecaed2964-relay-bin.000002\\n                Relay_Log_Pos: 320\\n        Relay_Master_Log_File: mysql-bin.000003\\n             Slave_IO_Running: Yes\\n            Slave_SQL_Running: Yes\\n              Replicate_Do_DB:\\n          Replicate_Ignore_DB:\\n           Replicate_Do_Table:\\n```\\n\\n\u67e5\u8be2 slave \u7684\u72b6\u6001\uff0c\u770b\u5230 Slave_IO_Running \u548c Slave_SQL_Running \u90fd\u662f yes \u5373\u4e3a\u540c\u6b65\u6210\u529f\\n\\n\\n\u53ef\u4ee5\u767b\u5f55 master \u4e0a\u521b\u5efa\u6570\u636e\u5e93\uff0c\u8868\uff0c\u7136\u540e\u5728 slave \u8fd9\u8fb9\u67e5\u770b\u6570\u636e\u662f\u5426\u540c\u6b65"},{"id":"win10-mysql-8-0-docker-building-master-slave-replication","metadata":{"permalink":"/blog/win10-mysql-8-0-docker-building-master-slave-replication","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021/02-17-win10-mysql-8-0-docker-building-master-slave-replication/index.md","source":"@site/blog/2021/02-17-win10-mysql-8-0-docker-building-master-slave-replication/index.md","title":"Win10 - MySQL 8.0 - Docker \u642d\u5efa\u4e3b\u4ece\u590d\u5236","description":"\u642d\u5efa\u73af\u5883\uff1aWindows 10 Docker Desktop WSL 2 based engine","date":"2021-02-17T00:00:00.000Z","formattedDate":"2021\u5e742\u670817\u65e5","tags":[{"label":"\u6559\u7a0b","permalink":"/blog/tags/\u6559\u7a0b"}],"readingTime":3.8,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"win10-mysql-8-0-docker-building-master-slave-replication","title":"Win10 - MySQL 8.0 - Docker \u642d\u5efa\u4e3b\u4ece\u590d\u5236","authors":["solidSpoon"],"tags":["\u6559\u7a0b"]},"unlisted":false,"prevItem":{"title":"Win10 - MySQL 5.7 - Docker \u642d\u5efa\u4e3b\u4ece\u590d\u5236","permalink":"/blog/win10-mysql-5-7-docker-building-master-slave-replication"},"nextItem":{"title":"Win10 - MySQL 8 Zip \u7248 - \u642d\u5efa\u57fa\u4e8e GTID \u7684\u4e3b\u4ece\u590d\u5236","permalink":"/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication"}},"content":"> \u642d\u5efa\u73af\u5883\uff1aWindows 10 Docker Desktop WSL 2 based engine\\n\\n## \u521b\u5efa\\n\\n\u9996\u5148\u521b\u5efa\u4e24\u4e2a\u6570\u636e\u5e93\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u4e3b\u5e93\uff0c\u53e6\u4e00\u4e2a\u4f5c\u4e3a\u4ece\u5e93\\n\\n### \u7f16\u5199 docker-conpose \u6587\u4ef6\\n\\n\\n\u4e00\u822c\u5b89\u88c5\u4e86 docker \u90fd\u4f1a\u5b89\u88c5 docker-compose\uff0c\u53ef\u4ee5\u4f7f\u7528 `docker-compose -verison` \u67e5\u770b\u662f\u5426\u5b89\u88c5\\n\\n```bash\\n\u279c  ~ docker-compose -verison\\ndocker-compose version 1.27.4, build 40524192\\n```\\n\\n\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u300cmysqlms\u300d\u7528\u4e8e\u5b58\u653e\u672c\u6b21\u642d\u5efa\u7684\u6587\u4ef6\\n\u5728 \u300cmysqlms\u300d \u6587\u4ef6\u5939\u65b0\u5efa dokcer-compose \u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u4e3a \u300cdocker-compose.yaml\u300d\\n\\n```yaml\\nversion: \'2\' \\nnetworks:\\n  byfn:                                       #\u914d\u7f6ebyfn\u7f51\u7edc\\nservices:\\n  master:                                     #\u914d\u7f6emaster\u670d\u52a1\\n    image: \'mysql:latest\'                        #\u4f7f\u7528\u521a\u624dpull\u4e0b\u6765\u7684\u955c\u50cf\\n    restart: on-failure\\n    container_name: mysql-master              #\u5bb9\u5668\u8d77\u540d mysql-master\\n    environment:\\n      MYSQL_USER: test\\n      MYSQL_PASSWORD: admin123\\n      MYSQL_ROOT_PASSWORD: admin123           #\u914d\u7f6eroot\u7684\u5bc6\u7801\\n    ports:\\n      - \'3316:3306\'                           #\u914d\u7f6e\u7aef\u53e3\u6620\u5c04\\n    volumes:\\n      - \\"./master/my.cnf:/etc/mysql/my.cnf\\"   #\u914d\u7f6emy.cnf\u6587\u4ef6\u6302\u8f7d\uff0c\\n      - \\"./master/mysql-files:/var/lib/mysql-files\\" #MySQL 8.0 \u4e0d\u52a0\u8fd9\u4e00\u884c\u4f1a\u62a5\u9519\\n    networks:\\n      - byfn                                  #\u914d\u7f6e\u5f53\u524dservie\u6302\u8f7d\u7684\u7f51\u7edc\\n  slave:                                      #\u914d\u7f6eslave\u670d\u52a1\\n    image: \'mysql:latest\'\\n    restart: on-failure\\n    container_name: mysql-slave\\n    environment:\\n      MYSQL_USER: test\\n      MYSQL_PASSWORD: admin123\\n      MYSQL_ROOT_PASSWORD: admin123\\n    ports:\\n      - \'3326:3306\'\\n    volumes:\\n      - \\"./slave/my.cnf:/etc/mysql/my.cnf\\"\\n      - \\"./master/mysql-files:/var/lib/mysql-files\\" #MySQL 8.0 \u4e0d\u52a0\u8fd9\u4e00\u884c\u4f1a\u62a5\u9519\\n    networks:\\n      - byfn\\n```\\n\\n`- \\"./master/mysql-files:/var/lib/mysql-files\\"` \u8fd9\u4e00\u884c\u7684\u76ee\u7684\u8be6\u89c1\u4e0b\u9762\u94fe\u63a5\\n\\n> [https://github.com/docker-library/mysql/issues/541](https://github.com/docker-library/mysql/issues/541)\\n\\n\\n\\n\u5982\u679c\u60f3\u660e\u786e\u6307\u5b9a MySQL \u7248\u672c\uff0c\u5982\uff1a `image: \'mysql:8\'`\\n\\n### \u7f16\u5199 cnf \u6587\u4ef6\\n\\n\u5728 \u300cmysqlms\u300d\u65b0\u5efa\u4e24\u4e2a\u6587\u4ef6\u5939 \u300cmaster\u300d \u548c \u300cslave\u300d\uff0c\u5728\u5176\u4e2d\u5206\u522b\u5199\u5165\u6587\u4ef6\u300cmy.cnf\u300d\\n\\n\\n- mysqlms/master/my.cnf \u5185\u5bb9\u5982\u4e0b\uff1a\\n\\n```\\n[mysqld]\\nserver-id=1\\nlog-bin=/var/lib/mysql/mysql-bin\\n```\\n\\n- mysqlms/slave/my.cnf \u5185\u5bb9\u5982\u4e0b\\n\\n```\\n[mysqld]\\nserver-id=2\\n```\\n\\n\u5728\u300cmysqlms\u300d\u76ee\u5f55\u4e0b\u6267\u884c\u5982\u4e0b\u547d\u4ee4\\n\\n```bash\\ndocker-compose -f docker-compose.yaml up -d\\n```\\n\u6b64\u65f6\u4e24\u4e2a\u4e3b\u4ece\u6570\u636e\u5e93\u521b\u5efa\u6210\u529f\\n\\n## \u914d\u7f6e\\n\\n### Master\\n\\n\u542f\u52a8\u4e4b\u540e\u8fdb\u5165 master \u5bb9\u5668\\n\\n```bash\\ndocker exec -it mysql-master /bin/bash\\nmysql -uroot -padmin123\\n```\\n\\n\u6b64\u65f6\u8fdb\u5165\u4e86 MySql \u7ec8\u7aef\uff0c\u521b\u5efa\u7528\u4e8e\u4e3b\u4ece\u590d\u5236\u7684\u7528\u6237\\n\\n```bash\\ncreate user \'repl\'@\'%\' identified with \'mysql_native_password\' by \'admin123\';\\nGRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO \'repl\'@\'%\'; \\n```\\n\\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff0c\u5e94\u8be5\u662f MySQL 5.0 \u4e0e MySQL 8.0 \u7684\u4e00\u4e2a\u9a8c\u8bc1\u8eab\u4efd\u7684\u6bd4\u8f83\u5927\u7684\u533a\u522b\uff1a\\n\\n\\nMySql 8.0 \u9ed8\u8ba4\u6307\u5b9a\u4f7f\u7528\u9700\u8981 SSL \u7684\u8eab\u4efd\u9a8c\u8bc1\u63d2\u4ef6 \u300ccaching_sha2_password\u300d\uff0c\u610f\u5473\u7740\u6211\u4eec\u4ece\u5e93\u5fc5\u987b\u4f7f\u7528\u5b89\u5168\u94fe\u63a5\u6765\u8fde\u63a5\u5230\u4e3b\u5e93\u624d\u53ef\u4ee5\uff0c\u5426\u5219\u4ece\u5e93\u94fe\u63a5\u7684\u65f6\u5019\u4f1a\u62a5\u9519\uff0c\u9519\u8bef\u4ee3\u7801\u4e3a 2061\uff0c\u56e0\u6b64\u8fd9\u91cc\u9009\u62e9\u7ed5\u8fc7\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6539\u4e3a\u4f7f\u7528\u300cmysql_native_password\u300d\u6765\u9a8c\u8bc1\u3002\u6709\u673a\u4f1a\u53ef\u4ee5\u5c1d\u8bd5\u4ee5\u4e0b\u4f7f\u7528\u5b89\u5168\u8fde\u63a5\u3002\\n\\n\\n```bash\\nflush privileges;\\nshow master status;\\n```\\n\\n```bash\\nmysql> show master status;\\n+------------------+----------+--------------+------------------+-------------------+\\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\\n+------------------+----------+--------------+------------------+-------------------+\\n| mysql-bin.000003 |      767 |              |                  |                   |\\n+------------------+----------+--------------+------------------+-------------------+\\n1 row in set (0.00 sec)\\n```\\n\\n\u9700\u8981\u8bb0\u4f4f File \u540d\u5b57\uff0c\u548c Position \u504f\u79fb\u4f4d\u7f6e\\n\\n### Slave\\n\\n\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u8fdb\u5165 slave  \u5bb9\u5668\\n\\n\\n```bash\\ndocker exec -it mysql-slave /bin/bash\\nmysql -uroot -padmin123\\n```\\n\\n\u8fdb\u5165 MySQL \u7ec8\u7aef\u4e4b\u540e\\n\\n```bash\\nmysql> CHANGE MASTER TO MASTER_HOST=\'mysql-master\', MASTER_PORT=3306,  MASTER_USER=\'repl\', MASTER_PASSWORD=\'admin123\', MASTER_LOG_FILE=\'mysql-bin.000003\', MASTER_LOG_POS=767;\\nmysql> start slave;\\n```\\n\\n\u8fd9\u91cc\u4e24\u4e2a\u53c2\u6570 `MASTER_LOG_FILE` \u548c `MASTER_LOG_POS` \u5c31\u662f\u524d\u9762 master \u4e0a\u6700\u540e\u67e5\u8be2\u51fa\u6765\u7684\\n\\n```bash\\nmysql> show slave status\\\\G\\n*************************** 1. row ***************************\\n               Slave_IO_State: Waiting for master to send event\\n                  Master_Host: mysql-master\\n                  Master_User: repl\\n                  Master_Port: 3306\\n                Connect_Retry: 60\\n              Master_Log_File: mysql-bin.000003\\n          Read_Master_Log_Pos: 1116\\n               Relay_Log_File: eefecaed2964-relay-bin.000002\\n                Relay_Log_Pos: 320\\n        Relay_Master_Log_File: mysql-bin.000003\\n             Slave_IO_Running: Yes\\n            Slave_SQL_Running: Yes\\n              Replicate_Do_DB:\\n          Replicate_Ignore_DB:\\n           Replicate_Do_Table\\n......\\n```\\n\\n\u53ef\u4ee5\u4ece\u4e2d\u770b\u5230\u4e00\u4e9b\u4fe1\u606f\uff1a\\n\\n```bash\\n             Slave_IO_Running: Yes\\n            Slave_SQL_Running: Yes\\n      Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates\\n```\\n\\n\u53ef\u89c1\u4e3b\u4ece\u914d\u7f6e\u6210\u529f\\n\\n---\\n\\n\u53c2\u8003\u94fe\u63a5\\n\\n- [https://blog.csdn.net/wawa8899/article/details/86689618](https://blog.csdn.net/wawa8899/article/details/86689618)\\n- [https://dev.mysql.com/doc/refman/8.0/en/replication-howto-repuser.html](https://dev.mysql.com/doc/refman/8.0/en/replication-howto-repuser.html)\\n- [https://github.com/docker-library/mysql/issues/541](https://github.com/docker-library/mysql/issues/541)\\n- [https://blog.csdn.net/wangxiaotongfan/article/details/81870258](https://blog.csdn.net/wangxiaotongfan/article/details/81870258)"},{"id":"win10-mysql-8-zip-version-building-gtid-based-master-slave-replication","metadata":{"permalink":"/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021/02-17-win10-mysql-8-zip-version-building-gtid-based-master-slave-replication/index.md","source":"@site/blog/2021/02-17-win10-mysql-8-zip-version-building-gtid-based-master-slave-replication/index.md","title":"Win10 - MySQL 8 Zip \u7248 - \u642d\u5efa\u57fa\u4e8e GTID \u7684\u4e3b\u4ece\u590d\u5236","description":"\u914d\u7f6e\u73af\u5883\uff1aWindows 10 - MySQL \u538b\u7f29\u7248","date":"2021-02-17T00:00:00.000Z","formattedDate":"2021\u5e742\u670817\u65e5","tags":[{"label":"\u6559\u7a0b","permalink":"/blog/tags/\u6559\u7a0b"}],"readingTime":4.955,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"win10-mysql-8-zip-version-building-gtid-based-master-slave-replication","title":"Win10 - MySQL 8 Zip \u7248 - \u642d\u5efa\u57fa\u4e8e GTID \u7684\u4e3b\u4ece\u590d\u5236","authors":["solidSpoon"],"tags":["\u6559\u7a0b"]},"unlisted":false,"prevItem":{"title":"Win10 - MySQL 8.0 - Docker \u642d\u5efa\u4e3b\u4ece\u590d\u5236","permalink":"/blog/win10-mysql-8-0-docker-building-master-slave-replication"},"nextItem":{"title":"Win10 - MySQL 8 Zip \u7248 - \u642d\u5efa\u4e3b\u4ece\u590d\u5236","permalink":"/blog/win10-mysql-8-zip-version-building-master-slave-replication"}},"content":"> \u914d\u7f6e\u73af\u5883\uff1aWindows 10 - MySQL \u538b\u7f29\u7248\\n\\n## \u524d\u8a00\\n\\nGTID \u662f\u5e72\u561b\u7684\uff1f\\n\\n\\n> GTID (Global Transaction IDentifier) \u662f\u5168\u5c40\u4e8b\u52a1\u6807\u8bc6\u3002\u5b83\u5177\u6709\u5168\u5c40\u552f\u4e00\u6027\uff0c\u4e00\u4e2a\u4e8b\u52a1\u5bf9\u5e94\u4e00\u4e2aGTID\u3002\u552f\u4e00\u6027\u4e0d\u4ec5\u9650\u4e8e\u4e3b\u670d\u52a1\u5668\uff0cGTID\u5728\u6240\u6709\u7684\u4ece\u670d\u52a1\u5668\u4e0a\u4e5f\u662f\u552f\u4e00\u7684\u3002\u4e00\u4e2aGTID\u5728\u4e00\u4e2a\u670d\u52a1\u5668\u4e0a\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u4ece\u800c\u907f\u514d\u91cd\u590d\u6267\u884c\u5bfc\u81f4\u6570\u636e\u6df7\u4e71\u6216\u4e3b\u4ece\u4e0d\u4e00\u81f4\u3002\\n>\\n> \u5728\u4f20\u7edf\u7684\u590d\u5236\u91cc\u9762\uff0c\u5f53\u53d1\u751f\u6545\u969c\u9700\u8981\u4e3b\u4ece\u5207\u6362\u65f6\uff0c\u670d\u52a1\u5668\u9700\u8981\u627e\u5230binlog\u548cpos\u70b9\uff0c\u7136\u540e\u5c06\u5176\u8bbe\u5b9a\u4e3a\u65b0\u7684\u4e3b\u8282\u70b9\u5f00\u542f\u590d\u5236\u3002\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4e5f\u5bb9\u6613\u51fa\u9519\u3002\u5728MySQL 5.6\u91cc\u9762\uff0cMySQL\u4f1a\u901a\u8fc7\u5185\u90e8\u673a\u5236\u81ea\u52a8\u5339\u914dGTID\u65ad\u70b9\uff0c\u4e0d\u518d\u5bfb\u627ebinlog\u548cpos\u70b9\u3002\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u4e3b\u8282\u70b9\u7684ip\uff0c\u7aef\u53e3\uff0c\u4ee5\u53ca\u8d26\u53f7\u5bc6\u7801\u5c31\u53ef\u4ee5\u81ea\u52a8\u590d\u5236\u3002\\n> [http://mysql.taobao.org/monthly/2020/05/09/](http://mysql.taobao.org/monthly/2020/05/09/)\\n\\n\\n\\n\u5728\u4f20\u7edf\u7684\u4e3b\u4ece\u590d\u5236\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5728\u4ece\u5e93\u4e2d\u6307\u5b9a\u4e3b\u5e93\u7684 Log \u6587\u4ef6\u4e0e Position \uff0c\u5728\u57fa\u4e8e DTID \u7684\u4e3b\u4ece\u590d\u5236\u4e2d\uff0c\u4e0d\u9700\u8981\u8fd9\u4e00\u6b65\u9aa4\u3002\\n\\n## \u51c6\u5907\u4e24\u4e2a MySQL \u670d\u52a1\u5b9e\u4f8b\\n\\n8.0 \u538b\u7f29\u7248\u4e0b\u8f7d\u5730\u5740\uff1a\\n\\n> [https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.16-winx64.zip](https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.16-winx64.zip)\\n\\n\u89e3\u538b\u540e\u518d\u590d\u5236\u4e00\u4efd\uff0c\u5047\u8bbe\u547d\u540d\u4e3a `mysql-8.0.16-winx64` \u548c `mysql-8.0.16-winx64-2`\\n\\n## \u4fee\u6539\u4e3b MySQL-8\u7684 `my.ini`\\n\\n\u5728 `mysql-8.0.16-winx64` \u76ee\u5f55\u4e0b\u6dfb\u52a0 my.ini \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a\\n\\n```yaml\\n[mysqld]\\nbasedir = ./\\ndatadir = ./data\\nport = 3306\\nserver_id = 1\\n\\ngtid_mode=ON\\nenforce-gtid-consistency\\nsql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES \\nlog_bin=mysql-bin\\nbinlog-format=Row\\n\\n```\\n\\n## \u4fee\u6539\u4ece MySQL-8\u7684 `my.ini`\\n\\n\u5728\u4ece `mysql-8.0.16-winx64-2` \u76ee\u5f55\u4e0b\u6dfb\u52a0 my.ini \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a\\n\\n```yaml\\n[mysqld]\\nbasedir = ./\\ndatadir = ./data\\nport = 3316\\nserver_id = 2\\n\\ngtid_mode=ON\\nenforce-gtid-consistency\\nsql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES \\nlog_bin=mysql-bin\\nbinlog-format=Row\\n```\\n\\n\\n## \u521d\u59cb\u5316\u548c\u542f\u52a8\u6570\u636e\u5e93\\n\\n\u7a7a\u6570\u636e\u5e93\u9700\u8981\u521d\u59cb\u5316\uff0c\u5206\u522b\u5728\u4e24\u4e2a\u6570\u636e\u5e93\u7684 `\\\\bin` \u76ee\u5f55\u4e0b\u6267\u884c `mysqld --initialize-insecure` \u8fdb\u884c\u521d\u59cb\u5316\u3002\\n\\n\\n\u5206\u522b\u542f\u52a8\u4e3b\u548c\u4ece\uff0c\u5728\u4e24\u4e2a\u6570\u636e\u5e93\u7684 `\\\\bin` \u76ee\u5f55\u4e0b\u76f4\u63a5\u6267\u884c `mysqld` \u6216 `start mysqld` \u547d\u4ee4\u5373\u53ef\u3002\\n\\n## \u914d\u7f6e\u4e3b\u8282\u70b9\\n\\n\u7528 `mysql` \u547d\u4ee4\u767b\u5f55\u5230\u4e3b\u8282\u70b9\uff1a\\n\\n```bash\\nmysql -uroot -P3306\\n```\\n\\n\u8fdb\u5165\u540e\u6267\u884c\u4e0b\u9762\u547d\u4ee4\\n\\n```bash\\nmysql> CREATE USER \'repl\'@\'%\' IDENTIFIED BY \'123456\';\\nQuery OK, 0 rows affected (0.11 sec)\\n\\nmysql> GRANT REPLICATION SLAVE ON *.* TO \'repl\'@\'%\';\\nQuery OK, 0 rows affected (0.12 sec)\\n\\nmysql> flush privileges;\\nQuery OK, 0 rows affected (0.10 sec)\\n```\\n\\n\\n\u521b\u5efa\u6570\u636e\u5e93\uff1a\\n\\n```bash\\ncreate schema db;\\n```\\n\\n### \u4e3b\u8282\u70b9\u8bc1\u4e66\u6587\u4ef6\\n\\n\\n```bash\\nmysql> SHOW GLOBAL VARIABLES LIKE \'caching_sha2_password_public_key_path\';\\n+---------------------------------------+----------------+\\n| Variable_name                         | Value          |\\n+---------------------------------------+----------------+\\n| caching_sha2_password_public_key_path | public_key.pem |\\n+---------------------------------------+----------------+\\n1 row in set (0.00 sec)\\n```\\n\\n\\n\u8fd9\u4e2a\u6587\u4ef6\u5728\u521d\u59cb\u5316\u540e\u4f4d\u4e8e `\\\\bin\\\\data` \u4e0b\\n\\n\\n\u56e0\u4e3a MySQL 8 \u9ed8\u8ba4\u662f\u7528 `caching_sha2_password` \u505a\u8ba4\u8bc1\u63d2\u4ef6\uff0c\u8fd9\u70b9\u4e0e MySQL 5 \u4e0d\u540c\uff1a\\n\\n```bash\\nerror connecting to master \'repl@localhost:3306\' - retry-time: 60 retries: 18 message: Authentication plugin \'caching_sha2_password\' reported error: Authentication requires secure connection.\\n```\\n\\n\\n\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u57fa\u4e8e\u9ed8\u8ba4\u8bbe\u7f6e `caching_sha2_password` \u4e0b\u7684\u901a\u8baf\u516c\u94a5\u6587\u4ef6\u3002\u9ed8\u8ba4\u60c5\u51b5\u670d\u52a1\u5668\u4e0d\u4f1a\u7ed9\u5ba2\u6237\u7aef\u53d1\u9001\uff0c\u6240\u4ee5\u9700\u8981\u62f7\u8d1d\u5230\u4ece\u8282\u70b9\u7684\u76ee\u5f55\u4e0b\u3002\\n\\n\\n\u5982\u679c\u4e0d\u60f3\u62f7\u8d1d\u7684\u8bdd \uff1a\\n\\nMySQL 8.0 \u7684\u7248\u672c\u8981\u5728**\u4ece\u6570\u636e\u5e93**\u521d\u59cb\u8bbe\u7f6e\uff08CHANGE MASTER TO\uff09\u52a0\uff1a\\n\\n`MASTER_PUBLIC_KEY_PATH = \'key_file_name\'`\\n\\n\u6216\u8005\\n\\n`GET_MASTER_PUBLIC_KEY = {0|1}`\\n\\n## \u914d\u7f6e\u4ece\u8282\u70b9\\n\\n\\n\u628a\u521a\u624d\u7684 `public_key.pem` \u6587\u4ef6\u6539\u540d\u4e3a `master_public_key.pem` \u7136\u540e\u62f7\u8d1d\u5230\u4ece\u670d\u52a1\u5668\u7684 `\\\\bin\\\\data` \u6587\u4ef6\u5939\u4e2d\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u5728\u7528\u4e0a\u9762\u7684\u547d\u4ee4\u521d\u59cb\u5316\u4e4b\u540e\u624d\u6709\u3002\\n\\n`mysql` \u547d\u4ee4\u767b\u5f55\u5230\u4ece\u8282\u70b9\uff1a\\n\\n```bash\\nmysql -uroot -P3316\\n```\\n\\n\\n```bash\\nCHANGE MASTER TO\\n    MASTER_HOST=\'localhost\',  \\n    MASTER_PORT = 3306,\\n    MASTER_USER=\'repl\',      \\n    MASTER_PASSWORD=\'123456\',   \\n    MASTER_PUBLIC_KEY_PATH=\'master_public_key.pem\',\\n    MASTER_AUTO_POSITION = 1;\\n```\\n\\n\\n\u8fd9\u91cc\u6709\u4e2a\u95ee\u9898\uff0cMySQL 8 \u4e0b\u9762\u4e0d\u9700\u8981\u521b\u5efa db \u3002\u5426\u5219\u4f1a\u62a5\u9519\u8bf4\u5df2\u7ecf\u5b58\u5728 db \u3002\\n--\u521b\u5efa\u6570\u636e\u5e93\uff1acreate schema db;--\\n\\n\\n\u76f4\u63a5\u5f00\u59cb\u6267\u884c\u540c\u6b65\\n`start/stop slave;`\\n\\n\\n## \u9a8c\u8bc1\u64cd\u4f5c\\n\\n### \u4e3b\u5e93\\n\\n\u5728\u4e3b\u5e93\u6267\u884c\uff1a\\n\\n\\n```bash\\nmysql> use db\\nDatabase changed\\nmysql> create table t1(id int);\\nQuery OK, 0 rows affected (0.17 sec)\\n\\nmysql>\\nmysql>\\nmysql> insert into t1(id) values(1),(2);\\nQuery OK, 2 rows affected (0.04 sec)\\n```\\n\\n\\n### \u4ece\u5e93\\n\\n\u5728\u4ece\u5e93\u67e5\u770b\u6570\u636e\u540c\u6b65\u60c5\u51b5\\n\\n\\n```bash\\nmysql> use db\\nDatabase changed\\nmysql>\\nmysql>\\nmysql> show tables;\\n+--------------+\\n| Tables_in_db |\\n+--------------+\\n| t1           |\\n+--------------+\\n1 row in set (0.00 sec)\\n\\nmysql>\\nmysql>\\nmysql> select * from t1;\\n+------+\\n| id   |\\n+------+\\n|    1 |\\n|    2 |\\n+------+\\n2 rows in set (0.00 sec)\\n```\\n\\n\\n## \u67e5\u770b\u547d\u4ee4\\n\\n\u53ef\u4ee5\u901a\u8fc7 `show master status\\\\G`\uff0c`show slave status\\\\G` \u67e5\u770b\u72b6\u6001\uff0c\u6216\u5b9a\u4f4d\u4e00\u4e9b\u95ee\u9898\\n\\n\\n\u53ef\u4ee5\u80fd\u6539\u8fc7 `stop slave;` \xa0`start slave;` \u6765\u505c\u6b62\u590d\u5236\u3002"},{"id":"win10-mysql-8-zip-version-building-master-slave-replication","metadata":{"permalink":"/blog/win10-mysql-8-zip-version-building-master-slave-replication","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021/02-17-win10-mysql-8-zip-version-building-master-slave-replication/index.md","source":"@site/blog/2021/02-17-win10-mysql-8-zip-version-building-master-slave-replication/index.md","title":"Win10 - MySQL 8 Zip \u7248 - \u642d\u5efa\u4e3b\u4ece\u590d\u5236","description":"Win10 - MySQL 8 \u538b\u7f29\u7248 - \u4e3b\u4ece\u590d\u5236","date":"2021-02-17T00:00:00.000Z","formattedDate":"2021\u5e742\u670817\u65e5","tags":[{"label":"\u6559\u7a0b","permalink":"/blog/tags/\u6559\u7a0b"}],"readingTime":4.23,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"win10-mysql-8-zip-version-building-master-slave-replication","title":"Win10 - MySQL 8 Zip \u7248 - \u642d\u5efa\u4e3b\u4ece\u590d\u5236","authors":["solidSpoon"],"tags":["\u6559\u7a0b"]},"unlisted":false,"prevItem":{"title":"Win10 - MySQL 8 Zip \u7248 - \u642d\u5efa\u57fa\u4e8e GTID \u7684\u4e3b\u4ece\u590d\u5236","permalink":"/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication"},"nextItem":{"title":"\u4e00\u7bc7\u6563\u6587","permalink":"/blog/an-essay"}},"content":"## Win10 - MySQL 8 \u538b\u7f29\u7248 - \u4e3b\u4ece\u590d\u5236\\n\\n> \u914d\u7f6e\u73af\u5883\uff1aWindows 10 - MySQL \u538b\u7f29\u7248\\n\\n## \u51c6\u5907\u4e24\u4e2a MySQL \u670d\u52a1\u5b9e\u4f8b\\n\\n8.0 \u538b\u7f29\u7248\u4e0b\u8f7d\u5730\u5740\uff1a\\n\\n> [https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.16-winx64.zip](https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.16-winx64.zip)\\n\\n\\n\\n\u89e3\u538b\u540e\u518d\u590d\u5236\u4e00\u4efd\uff0c\u5047\u8bbe\u547d\u540d\u4e3a `mysql-8.0.16-winx64` \u548c `mysql-8.0.16-winx64-2`\\n\\n## \u4fee\u6539\u4e3b MySQL-8\u7684 `my.ini`\\n\\n\u5728 `mysql-8.0.16-winx64` \u76ee\u5f55\u4e0b\u6dfb\u52a0 my.ini \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a\\n\\n```yaml\\n[mysqld]\\nbasedir = ./\\ndatadir = ./data\\nport = 3306\\nserver_id = 1\\n\\nsql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES \\nlog_bin=mysql-bin\\nbinlog-format=Row\\n```\\n\\n## \u4fee\u6539\u4ece MySQL-8\u7684 `my.ini`\\n\\n\u5728\u4ece `mysql-8.0.16-winx64-2` \u76ee\u5f55\u4e0b\u6dfb\u52a0 my.ini \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a\\n\\n```yaml\\n[mysqld]\\nbasedir = ./\\ndatadir = ./data\\nport = 3316\\nserver_id = 2\\n\\nsql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES \\nlog_bin=mysql-bin\\nbinlog-format=Row\\n```\\n\\n\\n## \u521d\u59cb\u5316\u548c\u542f\u52a8\u6570\u636e\u5e93\\n\\n\u7a7a\u6570\u636e\u5e93\u9700\u8981\u521d\u59cb\u5316\uff0c\u5206\u522b\u5728\u4e24\u4e2a\u6570\u636e\u5e93\u7684 `\\\\bin` \u76ee\u5f55\u4e0b\u6267\u884c `mysqld --initialize-insecure` \u8fdb\u884c\u521d\u59cb\u5316\u3002\\n\\n\\n\u5206\u522b\u542f\u52a8\u4e3b\u548c\u4ece\uff0c\u5728\u4e24\u4e2a\u6570\u636e\u5e93\u7684 `\\\\bin` \u76ee\u5f55\u4e0b\u76f4\u63a5\u6267\u884c `mysqld` \u6216 `start mysqld` \u547d\u4ee4\u5373\u53ef\u3002\\n\\n## \u914d\u7f6e\u4e3b\u8282\u70b9\\n\\n\u7528 `mysql` \u547d\u4ee4\u767b\u5f55\u5230\u4e3b\u8282\u70b9\uff1a\\n\\n```bash\\nmysql -uroot -P3306\\n```\\n\\n\u8fdb\u5165\u540e\u6267\u884c\u4e0b\u9762\u547d\u4ee4\\n\\n```bash\\nmysql> CREATE USER \'repl\'@\'%\' IDENTIFIED BY \'123456\';\\nQuery OK, 0 rows affected (0.11 sec)\\n\\nmysql> GRANT REPLICATION SLAVE ON *.* TO \'repl\'@\'%\';\\nQuery OK, 0 rows affected (0.12 sec)\\n\\nmysql> flush privileges;\\nQuery OK, 0 rows affected (0.10 sec)\\n\\nmysql> show master status;\\n+------------------+----------+--------------+------------------+-------------------+\\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\\n+------------------+----------+--------------+------------------+-------------------+\\n| mysql-bin.000003 |      305 |              |                  |                   |\\n+------------------+----------+--------------+------------------+-------------------+\\n1 row in set (0.00 sec)\\n```\\n\\n\\n\u521b\u5efa\u6570\u636e\u5e93\uff1a\\n\\n```bash\\ncreate schema db;\\n```\\n\\n### \u4e3b\u8282\u70b9\u8bc1\u4e66\u6587\u4ef6\\n\\n\\n```bash\\nmysql> SHOW GLOBAL VARIABLES LIKE \'caching_sha2_password_public_key_path\';\\n+---------------------------------------+----------------+\\n| Variable_name                         | Value          |\\n+---------------------------------------+----------------+\\n| caching_sha2_password_public_key_path | public_key.pem |\\n+---------------------------------------+----------------+\\n1 row in set (0.00 sec)\\n```\\n\\n\u8fd9\u4e2a\u6587\u4ef6\u5728\u521d\u59cb\u5316\u4e4b\u540e\u4f4d\u4e8e `\\\\bin\\\\data` \u4e0b\\n\\n\u56e0\u4e3a MySQL 8 \u9ed8\u8ba4\u662f\u7528 `caching_sha2_password` \u505a\u8ba4\u8bc1\u63d2\u4ef6\uff0c\u8fd9\u70b9\u4e0e MySQL 5 \u4e0d\u540c\uff1a\\n\\n```bash\\nerror connecting to master \'repl@localhost:3306\' - retry-time: 60 retries: 18 message: Authentication plugin \'caching_sha2_password\' reported error: Authentication requires secure connection.\\n```\\n\\n\\n\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u57fa\u4e8e\u9ed8\u8ba4\u8bbe\u7f6e `caching_sha2_password` \u4e0b\u7684\u901a\u8baf\u516c\u94a5\u6587\u4ef6\u3002\u9ed8\u8ba4\u60c5\u51b5\u670d\u52a1\u5668\u4e0d\u4f1a\u7ed9\u5ba2\u6237\u7aef\u53d1\u9001\uff0c\u6240\u4ee5\u9700\u8981\u62f7\u8d1d\u5230\u4ece\u8282\u70b9\u7684\u76ee\u5f55\u4e0b\u3002\\n\\n\u5982\u679c\u4e0d\u60f3\u62f7\u8d1d\u7684\u8bdd \uff1a\\nMySQL 8.0 \u7684\u7248\u672c\u8981\u5728**\u4ece\u6570\u636e\u5e93**\u521d\u59cb\u8bbe\u7f6e\uff08CHANGE MASTER TO\uff09\u52a0\uff1a\\n`MASTER_PUBLIC_KEY_PATH = \'key_file_name\'`\\n\u6216\u8005\\n`GET_MASTER_PUBLIC_KEY = {0|1}`\\n\\n## \u914d\u7f6e\u4ece\u8282\u70b9\\n\\n\\n\u628a\u521a\u624d\u7684 `public_key.pem` \u6587\u4ef6\u6539\u540d\u4e3a `master_public_key.pem` \u7136\u540e\u62f7\u8d1d\u5230\u4ece\u670d\u52a1\u5668\u7684 `\\\\bin\\\\data` \u6587\u4ef6\u5939\u4e2d\uff0c\u6ce8\u610f\u8fd9\u4e2a\u6587\u4ef6\u5939\u7528\u4e0a\u9762\u7684\u90a3\u4e2a\u547d\u4ee4\u521d\u59cb\u5316\u4e4b\u540e\u624d\u6709\u3002\\n\\n`mysql` \u547d\u4ee4\u767b\u5f55\u5230\u4ece\u8282\u70b9\uff1a\\n\\n```bash\\nmysql -uroot -P3316\\n```\\n\\n\u8fd8\u8bb0\u5f97\u521a\u521a\u5728\u4e3b\u5e93\u67e5\u770b\u7684\u8868\u683c\u5417\uff1f\\n\\n```bash\\nmysql> show master status;\\n+------------------+----------+--------------+------------------+-------------------+\\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\\n+------------------+----------+--------------+------------------+-------------------+\\n| mysql-bin.000003 |      305 |              |                  |                   |\\n+------------------+----------+--------------+------------------+-------------------+\\n1 row in set (0.00 sec)\\n```\\n\\n\u6ce8\u610f\u4ee5\u4e0b\u7684 MASTER_LOG_POS \u9700\u8981\u6539\u6210\u8fd9\u4e2a\u8868\u683c\u4e0a Position \u7684\u6570\u503c\\n\\n\\n```bash\\nCHANGE MASTER TO\\n    MASTER_HOST=\'localhost\',  \\n    MASTER_PORT = 3306,\\n    MASTER_USER=\'repl\',      \\n    MASTER_PASSWORD=\'123456\',   \\n    MASTER_LOG_FILE=\'mysql-bin.000002\',\\n    MASTER_LOG_POS=855,\\n    MASTER_PUBLIC_KEY_PATH=\'master_public_key.pem\';\\n    \\n    //MASTER_AUTO_POSITION = 1;\\n```\\n\\n\\n\u8fd9\u91cc\u6709\u4e2a\u95ee\u9898\uff0cMySQL 8 \u4e0b\u9762\u4e0d\u9700\u8981\u521b\u5efa db \u3002\u5426\u5219\u4f1a\u62a5\u9519\u8bf4\u5df2\u7ecf\u5b58\u5728 db \u3002\\n--\u521b\u5efa\u6570\u636e\u5e93\uff1acreate schema db;--\\n\\n\\n\u76f4\u63a5\u5f00\u59cb\u6267\u884c\u540c\u6b65\\n`start/stop slave;`\\n\\n\\n## \u9a8c\u8bc1\u64cd\u4f5c\\n\\n### \u4e3b\u5e93\\n\\n\u5728\u4e3b\u5e93\u6267\u884c\uff1a\\n\\n\\n```bash\\nmysql> use db\\nDatabase changed\\nmysql> create table t1(id int);\\nQuery OK, 0 rows affected (0.17 sec)\\n\\nmysql>\\nmysql>\\nmysql> insert into t1(id) values(1),(2);\\nQuery OK, 2 rows affected (0.04 sec)\\n```\\n\\n\\n### \u4ece\u5e93\\n\\n\u5728\u4ece\u5e93\u67e5\u770b\u6570\u636e\u540c\u6b65\u60c5\u51b5\\n\\n\\n```bash\\nmysql> use db\\nDatabase changed\\nmysql>\\nmysql>\\nmysql> show tables;\\n+--------------+\\n| Tables_in_db |\\n+--------------+\\n| t1           |\\n+--------------+\\n1 row in set (0.00 sec)\\n\\nmysql>\\nmysql>\\nmysql> select * from t1;\\n+------+\\n| id   |\\n+------+\\n|    1 |\\n|    2 |\\n+------+\\n2 rows in set (0.00 sec)\\n```\\n\\n\\n## \u67e5\u770b\u547d\u4ee4\\n\\n\u53ef\u4ee5\u901a\u8fc7 `show master status\\\\G`\uff0c`show slave status\\\\G` \u67e5\u770b\u72b6\u6001\uff0c\u6216\u5b9a\u4f4d\u4e00\u4e9b\u95ee\u9898\\n\\n\\n\u53ef\u4ee5\u80fd\u6539\u8fc7 `stop slave;`  `start slave;` \u6765\u505c\u6b62\u590d\u5236\u3002"},{"id":"an-essay","metadata":{"permalink":"/blog/an-essay","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-16-an-essay/index.md","source":"@site/blog/2021-02-16-an-essay/index.md","title":"\u4e00\u7bc7\u6563\u6587","description":"\u6a31\u82b1\u70c2\u6f2b\u65f6\u8282\uff0c\u4e00\u8eab\u5229\u843d\u7684\u8f7b\u88c5\uff0c\u8e0f\u7740\u65b0\u53d1\u7684\u5ae9\u8349\uff0c\u60a0\u60a0\u7684\u6563\u6b65\u3002","date":"2021-02-16T00:00:00.000Z","formattedDate":"2021\u5e742\u670816\u65e5","tags":[],"readingTime":1.89,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"an-essay","title":"\u4e00\u7bc7\u6563\u6587","authors":["solidSpoon"],"tags":[]},"unlisted":false,"prevItem":{"title":"Win10 - MySQL 8 Zip \u7248 - \u642d\u5efa\u4e3b\u4ece\u590d\u5236","permalink":"/blog/win10-mysql-8-zip-version-building-master-slave-replication"},"nextItem":{"title":"\u6587\u7ae0\u6392\u7248\u6307\u5357","permalink":"/blog/article-formatting-guide"}},"content":"\u6a31\u82b1\u70c2\u6f2b\u65f6\u8282\uff0c\u4e00\u8eab\u5229\u843d\u7684\u8f7b\u88c5\uff0c\u8e0f\u7740\u65b0\u53d1\u7684\u5ae9\u8349\uff0c\u60a0\u60a0\u7684\u6563\u6b65\u3002\\n\\n\u4e0d\u77e5\u65b9\u5411\uff0c\u4e0d\u77e5\u76ee\u6807\uff0c\u5c31\u53ea\u662f\u9759\u9759\u7684\uff0c\u6162\u6162\u7684\u4f53\u4f1a\u751f\u6d3b\u7684\u7f8e\u597d\uff0c\u611f\u609f\u751f\u547d\u7684\u610f\u4e49\u3002\u542c\u8fc7\u4e00\u53e5\u8bdd:\u4eba\u751f\u603b\u662f\u592a\u5306\u5fd9\u3002\u7684\u786e\uff0c\u5fd9\u5fd9\u788c\u788c\u4e2d\uff0c\u6211\u4eec\u5ffd\u89c6\u4e86\u5f88\u591a\u751f\u6d3b\u7684\u7f8e\u597d\u3002\\n\\n\u8349\u957f\u83ba\u98de,\u4e07\u7269\u8f6e\u56de\u3002\u65f6\u95f4\u4e00\u70b9\u4e00\u6ef4\uff0c\u5e26\u8d70\u4e86\u6211\u4eec\u7684\u5e74\u5c11\u65f6\u5149\uff0c\u56de\u987e\u5f80\u6614\uff0c\u6211\u4eec\u62e5\u6709\u4ec0\u4e48?\u6211\u4eec\u66fe\u7ecf\u62e5\u6709\u4ec0\u4e48?\u8dcc\u8dcc\u649e\u649e\u7684\u5c0f\u5b66\u751f\u6d3b\uff0c\u604d\u604d\u60da\u60da\u7684\u521d\u4e2d\u65f6\u4ee3\uff0c\u574e\u574e\u5777\u5777\u7684\u9ad8\u4e2d\u70bc\u72f1\uff0c\u4eff\u4f5b\u90fd\u6210\u4e3a\u4e86\u6ce1\u6cab\uff0c\u5728\u9633\u5149\u4e0b\u6d88\u5f2d\u3002\u73b0\u5728\u7684\u73b0\u5728\uff0c\u6211\u4eec\u62e5\u6709\u7684\u53ea\u6709\u5f53\u4e0b\u3002\\n\\n\u5982\u4eca\uff0c\u6700\u91cd\u8981\u7684\u662f\u68a6\u60f3\uff0c\u662f\u5fd7\u5411\u3002\u5f88\u591a\u4eba\u4e3a\u4e86\u8fd9\u4e9b\u884c\u8d70\u5306\u5fd9\uff0c\u4f46\u5ffd\u89c6\u4e86\u5468\u56f4\u7684\u98ce\u666f\u3002\u6625\u610f\u76ce\u7136\uff0c\u9633\u5149\u5fae\u7166\uff0c\u5fae\u98ce\u8f7b\u6696\u3002\u6b64\u65f6\uff0c\u8e0f\u4e00\u5e2d\u6625\u8272\uff0c\u4eab\u65e0\u8fb9\u70c2\u6f2b\u3002\u5c31\u50cf\u987e\u57ce\u8bf4\u7684\u90a3\u6837:\u8349\u5728\u7ed3\u5b83\u7684\u79cd\u5b50\uff0c\u98ce\u5728\u6447\u5b83\u7684\u53f6\u5b50\u3002\u6211\u4eec\u7ad9\u7740\uff0c\u4e0d\u8bf4\u8bdd\uff0c\u5c31\u5f88\u7f8e\u597d\u3002\\n\\n\u8fd9\u6837\u5355\u7eaf\u7684\u7f8e\u597d\uff0c\u503c\u5f97\u6bcf\u4e2a\u4eba\u8bb0\u4f4f\u3002\u90a3\u4e48\uff0c\u5728\u75be\u8d70\u7684\u65f6\u5019\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u505c\u4e0b\u6765\u770b\u770b\u5462?\u5728\u7825\u783a\u524d\u884c\u7684\u540c\u65f6\uff0c\u6ce8\u610f\u5230\u5468\u56f4\u7684\u82ac\u82b3\uff0c\u4eba\u751f\u4f1a\u66f4\u52a0\u65e0\u61be\u3002\\n\u6240\u4ee5\uff0c\u5954\u8d74\u8fdc\u65b9\u7684\u5c11\u5e74\u554a\uff0c\u8bf7\u5728\u8ffd\u5bfb\u672a\u6765\u7684\u540c\u65f6\uff0c\u628a\u63e1\u4f4f\u73b0\u5728\u3002\u4f60\u5b9e\u73b0\u68a6\u60f3\u7684\u672a\u6765\u662f\u5f88\u7f8e\u597d\uff0c\u4f46\u8f7d\u6b4c\u8f7d\u821e\u7684\u5982\u4eca\uff0c\u540c\u6837\u503c\u5f97\u4f9d\u604b\u3002"},{"id":"article-formatting-guide","metadata":{"permalink":"/blog/article-formatting-guide","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-16-article-formatting-guide/index.md","source":"@site/blog/2021-02-16-article-formatting-guide/index.md","title":"\u6587\u7ae0\u6392\u7248\u6307\u5357","description":"\u6211\u4eec\u65e5\u5e38\u770b\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u5df2\u7ecf\u5728\u6162\u6162\u79ef\u7d2f\u6211\u4eec\u7684\u5ba1\u7f8e\u610f\u8bc6\uff0c\u6211\u4eec\u80fd\u5206\u8fa8\uff0c\u54ea\u7bc7\u63a8\u6587\u770b\u7740\u8212\u670d\uff0c\u54ea\u7bc7\u6587\u7ae0\u770b\u7740\u8fa3\u773c\u775b\u3002\u4e3a\u4e86\u51cf\u5c11\u8fd9\u79cd\u300c\u8fa3\u773c\u775b\u300d\u7684\u60c5\u51b5\u51fa\u73b0\uff0c\u4eca\u5929\u6211\u5c31\u6765\u8c08\u8c08\u5173\u4e8e\u6587\u7ae0\u6392\u7248\u7684\u4e8b\u60c5\u3002","date":"2021-02-16T00:00:00.000Z","formattedDate":"2021\u5e742\u670816\u65e5","tags":[],"readingTime":9.33,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"article-formatting-guide","title":"\u6587\u7ae0\u6392\u7248\u6307\u5357","authors":["solidSpoon"],"tags":[]},"unlisted":false,"prevItem":{"title":"\u4e00\u7bc7\u6563\u6587","permalink":"/blog/an-essay"},"nextItem":{"title":"\u642d\u5efa\u7b80\u5355\u597d\u7528\u7684\u7b14\u8bb0\u7cfb\u7edf","permalink":"/blog/building-a-simple-and-user-friendly-note-taking-system"}},"content":"> \u6211\u4eec\u65e5\u5e38\u770b\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u5df2\u7ecf\u5728\u6162\u6162\u79ef\u7d2f\u6211\u4eec\u7684\u5ba1\u7f8e\u610f\u8bc6\uff0c\u6211\u4eec\u80fd\u5206\u8fa8\uff0c\u54ea\u7bc7\u63a8\u6587\u770b\u7740\u8212\u670d\uff0c\u54ea\u7bc7\u6587\u7ae0\u770b\u7740\u8fa3\u773c\u775b\u3002\u4e3a\u4e86\u51cf\u5c11\u8fd9\u79cd\u300c\u8fa3\u773c\u775b\u300d\u7684\u60c5\u51b5\u51fa\u73b0\uff0c\u4eca\u5929\u6211\u5c31\u6765\u8c08\u8c08\u5173\u4e8e\u6587\u7ae0\u6392\u7248\u7684\u4e8b\u60c5\u3002\\n\\n\\n\\n### \u258e\u535a\u5ba2\u6392\u7248\\n\\n\u5199\u535a\u5ba2\u7684\u540c\u5b66\u90fd\u77e5\u9053\uff0c\u73b0\u5728\u535a\u5ba2\u90fd\u662f\u7531 Markdown \u6392\u7248\u3002\u5982\u679c\u4f60\u8fd8\u4e0d\u77e5\u5230 Markdown \u7684\u8bdd\u5c31\u53bb\u5b66\u4e60\u4e00\u4e0b\u5427\uff0c\u5b83\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5e2e\u52a9\u6211\u4eec\u6392\u7248\u51fa\u6f02\u4eae\u7684\u6587\u7ae0\u3002\u4f46\u6211\u4eec\u5728\u5199\u535a\u6587\u7684\u65f6\u5019\uff0c\u4ecd\u6709\u4e00\u4e9b\u7ec6\u8282\u662f\u9700\u8981\u6ce8\u610f\u7684\u3002\\n\\n#### 1. \u7a7a\u683c\\n\\n\u6bcf\u6b21\u770b\u5230\u7f51\u9875\u4e0a\u7684\u4e2d\u6587\u5b57\u548c\u82f1\u6587\u3001\u6570\u5b57\u3001\u7b26\u53f7\u6324\u5728\u4e00\u8d77\uff0c\u5c31\u4f1a\u5750\u7acb\u4e0d\u5b89\uff0c\u5fcd\u4e0d\u4f4f\u60f3\u5728\u4ed6\u4eec\u4e4b\u95f4\u52a0\u4e2a\u7a7a\u683c\u3002\\n\\n- \u4e2d\u82f1\u6587\u4e4b\u95f4\u9700\u8981\u52a0\u7a7a\u683c\\n\\n  *eg*. \u5927\u5bb6\u53ef\u4ee5\u5fae\u4fe1\u641c\u4e00\u641c solidSpoon \u5173\u6ce8\u6211\u3002\\n\\n- \u4e2d\u6587\u4e0e\u6570\u5b57\u4e4b\u95f4\u9700\u8981\u52a0\u7a7a\u683c\\n\\n  *eg*. \u4e0d\u77e5\u4e0d\u89c9\uff0c\u6211\u5df2\u7ecf\u5199\u535a\u5ba2 3 \u4e2a\u6708\u4e86\u3002\\n\\n- \u6570\u5b57\u4e0e\u5355\u4f4d\u4e4b\u95f4\u9700\u8981\u52a0\u7a7a\u683c\\n\\n  *eg*. \u6211\u6628\u5929\u4e70\u4e86\u4e00\u4e2a 16 GB \u7684 U \u76d8\u3002\\n\\n- \u5b8c\u6574\u7684\u82f1\u6587\u6574\u53e5\u65f6\u6807\u70b9\u540e\u8981\u52a0\u7a7a\u683c\u3002\\n\\n  *eg*. Love me, love my dog.\\n\\n**\u4f46\u662f\u4e5f\u6709\u4e00\u4e9b\u4f8b\u5916\u3002**\\n\\n- \u5ea6\u7684\u6807\u5fd7\u3001\u767e\u5206\u53f7\u4e0d\u52a0\u7a7a\u683c\\n\\n  *eg*. \u6c34\u7684\u6cb8\u70b9\u662f 100\xb0\u3002\\n\\n  *eg*. \u6211\u7684\u624b\u673a\u8fd8\u6709 75\uff05 \u7684\u7535\u91cf\u3002\\n\\n- \u5168\u89d2\u6807\u70b9\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e4b\u95f4\u4e0d\u52a0\u7a7a\u683c\\n\\n  *eg*. \u5927\u5bb6\u597d\uff0c\u6211\u662f solidSpoon\uff0c\u6b22\u8fce\u8bbf\u95ee\u6211\u7684\u535a\u5ba2\u3002\\n\\n#### 2. \u6807\u70b9\\n\\n\u8bf4\u5230\u6807\u70b9\uff0c\u4e0d\u5f97\u4e0d\u8bf4\u4e0b\u5168\u89d2\u548c\u534a\u89d2\uff0c\u5f88\u591a\u4eba\u53ef\u80fd\u4e0d\u4e86\u89e3\u5168\u89d2\u548c\u534a\u89d2\u7684\u6982\u5ff5\uff0c\u8fd9\u91cc\u987a\u4fbf\u4ecb\u7ecd\u4e0b\u3002\\n\\n\u5168\u89d2\u548c\u534a\u89d2\u662f\u82f1\u6587\u548c\u4e2d\u6587\u7684\u7f16\u7801\u89c4\u8303\u4e0d\u540c\u9057\u7559\u4e0b\u7684\u95ee\u9898\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5168\u89d2\u5360\u4e24\u4e2a\u5b57\u8282\uff0c\u534a\u89d2\u5360\u4e00\u4e2a\u5b57\u8282\uff0c\u4f60\u53ef\u4ee5\u7406\u89e3\u6210\u4e2d\u6587\u6c49\u5b50\u662f\u5168\u89d2\uff0c\u82f1\u6587\u5b57\u6bcd\u662f\u534a\u89d2\uff0c\u4e0d\u8fc7\u534a\u89d2\u5168\u89d2\u4e3b\u8981\u662f\u9488\u5bf9\u6807\u70b9\u7b26\u53f7\u6765\u8bf4\u7684\uff0c\u4e2d\u6587\u6807\u70b9\u5360\u4e24\u4e2a\u5b57\u8282\uff0c\u82f1\u6587\u6807\u70b9\u5360\u4e00\u4e2a\u5b57\u8282\u3002\u4f53\u73b0\u5728\u6392\u7248\u4e0a\u7684\u5dee\u5f02\u5c31\u662f\uff0c\u5168\u89d2\u5b57\u7b26\u5c4f\u5e55\u6253\u5370\u5bbd\u5ea6\u662f\u4e24\u4e2a\uff0c\u800c\u534a\u89d2\u5b57\u7b26\u5c4f\u5e55\u6253\u5370\u5bbd\u5ea6\u662f\u4e00\u4e2a\uff0c\u5982\u4e2d\u6587\u9017\u53f7\u548c\u82f1\u6587\u9017\u53f7\u4ed6\u4eec\u7684\u663e\u793a\u5206\u522b\u662f\u300c\uff0c\u300d\u548c\u300c,\u300d\u3002\\n\\n- \u4f7f\u7528\u5168\u89d2\u4e2d\u6587\u6807\u70b9\\n\\n  \u4e2d\u6587\u6392\u7248\u4e2d\u6240\u6709\u7684\u6807\u70b9\u90fd\u5e94\u8be5\u4f7f\u7528\u4e2d\u6587\u5168\u89d2\u4e2d\u6587\u6807\u70b9\\n\\n  *eg*. \u5927\u5bb6\u597d\uff0c\u6211\u662f solidSpoon\u3002\\n\\n- \u9047\u5230\u82f1\u6587\u6574\u53e5\u3001\u7279\u6b8a\u540d\u8bcd\u65f6\u4f7f\u7528\u534a\u89d2\u6807\u70b9\u3002\\n\\n  *eg*. \u4e54\u5e03\u65af\u8bf4\u8fc7\uff1a\u300cStay hungry, stay foolish.\u300d\\n\\n  *eg*. Facebook, Inc.\\n\\n- \u4f7f\u7528\u76f4\u89d2\u5f15\u53f7\\n\\n    - \u6211\u56fd\u56fd\u5bb6\u6807\u51c6\u8981\u6c42\u5f2f\u5f15\u53f7\uff0c\u4f46\u662f\u4e2a\u4eba\u5efa\u8bae\u5728\u65b0\u5a92\u4f53\u6392\u7248\u65f6\u4f7f\u7528\u76f4\u89d2\u5f15\u53f7\u3002\\n\\n      *eg*. \u300c\u6211\u53bb\u5403\u996d\u4e86\u300d\uff0c\u5b83\u8d77\u8eab\u8bf4\u5230\u3002\\n\\n    - \u5982\u679c\u5f15\u53f7\u518d\u4f7f\u7528\u5f15\u53f7\u4f7f\u7528\u76f4\u89d2\u53cc\u5f15\u53f7\u3002\\n\\n      *eg*. \u6211\u5bf9\u4ed6\u8bf4\uff1a\u300c\u4e54\u5e03\u65af\u8bf4\u8fc7\uff1a\u300eStay hungry, stay follish.\u300f\u300d\\n\\n**\u5fae\u8f6f\u62fc\u97f3\u8f93\u5165\u7279\u6b8a\u7b26\u53f7\u65b9\u6cd5\uff1a**\\n\\n\u9996\u5148\u5728\u4e2d\u6587\u8f93\u5165\u754c\u9762\u8f93\u5165 `u` \u8fdb\u5165\u300cu \u6a21\u5f0f\u8f93\u5165\u300d\uff0c\u7136\u540e\u8ddf\u7740\u5c4f\u5e55\u63d0\u793a\u5c31\u53ef\u4ee5\u627e\u5230\u4f60\u8981\u8f93\u5165\u7684\u7279\u6b8a\u7b26\u53f7\u4e86\u3002\\n\\n- *eg*. \u4e2d\u6587\u754c\u9762\u8f93\u5165 `uubd` \u5c31\u53ef\u4ee5\u627e\u5230\u76f4\u89d2\u5f15\u53f7\u3002\\n\\n#### 3. \u5176\u4ed6\\n\\n\u9664\u4ee5\u4e0a\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u6807\u51c6\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u7684\u3002\\n\\n- \u82f1\u6587\u540d\u8bcd\u9996\u5b57\u6bcd\u5c3d\u91cf\u5927\u5199\\n\\n  eg. Google\u3001Android\u3001Facebook\\n\\n- \u4e13\u6709\u540d\u8bcd\u4f7f\u7528\u6b63\u786e\u7684\u5927\u5c0f\u5199\\n\\n  eg. GitHub\u3001iOS\u3001iPhone XS Max\u3001MacBook Pro\\n\\n- \u9996\u884c\u4e0d\u8981\u7f29\u8fdb\\n\\n\u5173\u4e8e\u9996\u884c\u4e0d\u7f29\u8fdb\u53ef\u80fd\u6709\u4eba\u4e0d\u592a\u540c\u610f\uff0c\u4f46\u662f\u6211\u8981\u5728\u8fd9\u91cc\u89e3\u91ca\u4e0b\uff0c\u5728\u8bf4\u660e\u4e4b\u524d\u6211\u4eec\u5fc5\u987b\u5f04\u660e\u767d\u300c\u9996\u884c\u7f29\u8fdb\u300d\u7684\u76ee\u7684\u662f\u4ec0\u4e48\u3002\\n\\n\u300c\u6bcf\u6bb5\u4e4b\u524d\u7a7a\u4e24\u683c\u300d\u662f\u6211\u4eec\u4ece\u5c0f\u5b66\u5199\u4f5c\u6587\u5c31\u517b\u6210\u7684\u4e60\u60ef\uff0c\u4e5f\u662f\u6b63\u5f0f\u6587\u4f53\u7684\u683c\u5f0f\u8981\u6c42\uff0c\u5176\u76ee\u7684\u662f\u4e3a\u4e86\u533a\u5206\u81ea\u7136\u6bb5\u3002\\n\\n\u4f46\u662f\u50cf\u6211\u4eec\u73b0\u5728\u63a5\u89e6\u7684\u9605\u8bfb\uff0c\u90fd\u662f\u6ca1\u6709\u56fa\u5b9a\u7684\u683c\u5f0f\u8981\u6c42\u7684\uff0c\u5982\u5fae\u4fe1\u516c\u4f17\u53f7\u3001\u7535\u5b50\u6587\u6863\u7b49\uff0c\u6240\u4ee5\u5927\u5bb6\u4e00\u822c\u90fd\u91c7\u7528\u300c\u7a7a\u51fa\u4e00\u884c\u300d\u8fdb\u884c\u81ea\u7136\u6bb5\u4e0e\u81ea\u7136\u6bb5\u4e4b\u95f4\u7684\u533a\u5206\uff0c\u8fd9\u79cd\u5199\u4f5c\u65b9\u5f0f\u975e\u5e38\u7701\u4e8b\uff0c\u800c\u4e14\u5f88\u6574\u9f50\u3002\\n\\n\u6240\u4ee5\uff0c\u6211\u8ba4\u4e3a\u8fd9\u79cd\u5e94\u8be5\u662f\u6700\u79d1\u5b66\u7684\u65b9\u5f0f\uff0c\u53ea\u8981\u6ca1\u6709\u660e\u786e\u7684\u683c\u5f0f\u8981\u6c42\uff0c\u5199\u4f5c\u7684\u6392\u7248\u65e0\u987b\u9996\u884c\u7f29\u8fdb\u3002\\n\\n### \u258e\u516c\u4f17\u53f7\u6392\u7248\\n\\n\u7528 Markdown \u5199\u4f5c\u7684\u786e\u5f88\u65b9\u4fbf\u3002\u90a3\u4e48\u5bf9\u4e8e\u300c\u4e0d\u90a3\u4e48\u65b9\u4fbf\u300d\u7684\u5fae\u4fe1\u516c\u4f17\u53f7\uff0c\u9664\u4e86\u4e0a\u9762\u7684\u90a3\u4e9b\u5916\uff0c\u53c8\u6709\u4ec0\u4e48\u662f\u9700\u8981\u6ce8\u610f\u7684\u5462\uff1f\\n\\n#### 1. \u5927\u5c0f\\n\\n\u7b80\u5355\u6765\u8bf4\u5c31\u662f\uff1a\u6807\u9898\u8981\u6bd4\u6b63\u6587\u5927\uff0c\u6b63\u6587\u8981\u6bd4\u6807\u6ce8\u5927\u3002\\n\\n\\n#### 2. \u989c\u8272\\n\\n\u989c\u8272\u642d\u914d\u4fdd\u6301\u7edf\u4e00\uff0c\u4e2a\u522b\u5b57\u4f53\u4f7f\u7528\u7279\u6b8a\u8272\u5f3a\u8c03\uff0c\u5b57\u4f53\u989c\u8272\u5c3d\u91cf\u4e0d\u8d85\u8fc7\u4e09\u79cd\uff0c\u989c\u8272\u4e0d\u8981\u9009\u53d6\u592a\u4eae\u7684\u989c\u8272\uff0c\u4f8b\u5982\u7eaf\u9ed1\uff0c\u7eaf\u7ea2\uff0c\u4eae\u7ea2\u914d\u4eae\u7eff\uff0c\u90fd\u662f\u4e0d\u5efa\u8bae\u7684\uff0c\u770b\u4e45\u4e86\u773c\u775b\u96be\u514d\u4f1a\u75b2\u60eb\uff0c\u4e0d\u5229\u4e8e\u9605\u8bfb\u3002\\n\\n**\u5efa\u8bae\u4f7f\u7528\u5b57\u4f53\u989c\u8272\uff1a**\\n\\n- \u6807\u9898\uff1a\u4f7f\u7528\u516c\u4f17\u53f7\u5e38\u7528\u8272\uff0c\u6216\u8005\u76f4\u63a5\u53d6 logo \u6216\u8005\u884c\u4e1a\u8272\\n- \u6b63\u6587\uff1a\u9009\u62e9\u4eae\u5ea6\u6ca1\u8fd9\u4e48\u9ad8\u7684\u5b57\u4f53\uff0c\u8fd9\u662f\u7eaf\u9ed1 `#000000` \uff0c\u6bd4\u8f83\u504f\u7070\u4f1a\u66f4\u52a0\u9002\u5408\u9605\u8bfb `#595757` `#3f3f3f` \u7b49\\n- \u6279\u6ce8\uff1a\u9009\u62e9\u6bd4\u6b63\u6587\u4eae\u5ea6\u8fd8\u4f4e\uff0c\u66f4\u52a0\u6d45\u7684\u6d45\u7070\u8272\uff0c\u4f8b\u5982 `#595959` `#888888` `#d6d6d6`\\n\\n#### 3. \u5f62\u6001\\n\\n\u548c word \u7f16\u8f91\u4e00\u6837\uff0c\u516c\u4f17\u53f7\u6587\u5b57\u5f62\u6001\u4e5f\u53ef\u4ee5\u505a\u4e00\u4e9b\u57fa\u672c\u53d8\u5316\uff0c\u4f8b\u5982 **\u52a0\u7c97**\u3001*\u659c\u4f53*\u3001<u>\u4e0b\u5212\u7ebf</u>\u3001~~\u5220\u9664\u7ebf~~ \u7b49\uff0c\u5e38\u7528\u7684\u662f\u52a0\u7c97\uff0c\u4ee5\u53ca\u6709\u8da3\uff08\u620f\u591a\uff09\u7684\u5220\u9664\u7ebf\u3002\\n\\n\\n\\n#### 4. \u5bf9\u9f50\\n\\n\u5bf9\u9f50\uff0c\u53ef\u4ee5\u8bf4\u662f\u62ef\u6551\u5f3a\u8feb\u75c7\u7684\u6700\u4f73\u8bbe\u7f6e\u3002\u8fd9\u91cc\u63a8\u8350\u5bf9\u9f50\u65b9\u5f0f\u4e3a\uff1a**\u4e24\u7aef\u5bf9\u9f50**\u3002\\n\\n\u6211\u4eec\u65e5\u5e38\u6392\u7248\u5b8c\u4f1a\u53d1\u73b0\uff0c\u56e0\u4e3a\u53e5\u5b50\u7684\u5b57\u7b26\u5927\u5c0f\u7684\u539f\u56e0\uff0c\u6bcf\u884c\u7684\u6700\u53f3\u8fb9\u90fd\u4f1a\u53d8\u5f97\u5c42\u6b21\u4e0d\u9f50\uff0c\u5f3a\u8feb\u75c7\u770b\u7740\u4f1a\u975e\u5e38\u7684\u4e0d\u8212\u670d\uff0c\u8fd9\u65f6\u5019\u5982\u679c\u6211\u4eec\u9009\u62e9\u4e24\u7aef\u5bf9\u9f50\uff0c\u5c31\u4f1a\u7f8e\u89c2\u7684\u591a\u3002\\n\\n#### 5. \u5c0f\u7b26\u53f7\\n\\n\u5c31\u50cf\u524d\u9762\u5bf9\u6807\u9898\u7684\u5904\u7406\u4e00\u6837\uff0c\u7b80\u5355\u7684\u7b26\u53f7\u4e5f\u80fd\u5212\u5206\u7a7a\u95f4\uff0c\u4e5f\u8981\u5e38\u7528\u5f15\u53f7\uff0c\u4ee5\u6b64\u7a81\u51fa\u91cd\u70b9\u7b49\\n\\n#### 6. \u7559\u767d\\n\u5728\u7ecf\u8fc7\u4e86\u6587\u5b57\u7684\u6392\u7248\u4ee5\u540e\uff0c\u6574\u4e2a\u7248\u9762\u7684\u98ce\u683c\u5df2\u7ecf\u51fa\u6765\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u63a8\u6587\u91cc\u5b57\u53e5\u7684\u95f4\u8ddd\u592a\u5bc6\u4e86\uff0c\u770b\u4e45\u4e86\u773c\u775b\u5f88\u4e0d\u8212\u670d\u3002\u5176\u5b9e\uff0c\u8fd9\u90fd\u662f\u56e0\u4e3a\uff1a<u>\u6ca1\u6709\u7559\u767d\uff0c\u6ca1\u6709\u547c\u5438\u611f</u>\u3002\\n\\n\\n\\n\u7559\u767d\u53ef\u4ee5\u5305\u62ec\uff1a\\n- \u9875\u9762\u8fb9\u8ddd\\n- \u6bb5 / \u5b57 / \u884c\u95f4\u8ddd\\n- \u7f29\u8fdb\\n- \u7a7a\u884c\\n\\n**\u9875\u9762\u8fb9\u8ddd**\\n\\n\u9875\u9762\u8fb9\u8ddd\u6307\u7684\u662f\u63a8\u6587\u4e0e\u624b\u673a\u5c4f\u5e55\u4e24\u4fa7\u7684\u8ddd\u79bb\u3002\\n\\n\u9ed8\u8ba4\u8ddd\u79bb\u662f 0\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\uff0c\u8ba9\u6587\u5b57\u79bb\u5c4f\u5e55\u8fdc\u4e00\u70b9\u3002\u6211\u4e2a\u4eba\u5efa\u8bae\u9875\u8fb9\u8ddd\u8bbe\u7f6e\u4e3a 0.5\uff0c\u6216\u8005 1\uff0c\u6bd4\u8f83\u8212\u670d\u3002\\n\\n**\u6bb5\u8ddd**\\n\\n\u6bb5\u843d\u4e0e\u6bb5\u843d\u4e4b\u95f4\uff0c\u56fe\u7247\u4e0e\u6587\u5b57\u4e4b\u95f4\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u6bb5\u524d\u8ddd\u3001\u6bb5\u540e\u8ddd\u8fdb\u884c\u8c03\u6574\u8ddd\u79bb\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7a7a\u683c\u4ee3\u66ff\u3002\\n\\n**\u5b57\u95f4\u8ddd**\\n\\n\u5b57\u4f53\u4e4b\u95f4\u7684\u8ddd\u79bb\u592a\u5bc6\uff0c\u5bb9\u6613\u8ba9\u4eba\u9519\u8fc7\u91cd\u70b9\u5185\u5bb9\uff0c\u8c03\u6574\u6587\u5b57\u95f4\u8ddd\u4f1a\u6709\u610f\u60f3\u4e0d\u5230\u7684\u6548\u679c\uff0c\u547c\u5438\u611f\u77ac\u95f4\u6709\u4e86\u3002\u548c\u5b57\u95f4\u8ddd\u4e00\u6837\uff0c\u884c\u95f4\u8ddd\u662f\u89e3\u653e\u539f\u6709\u884c\u4e0e\u884c\u4e4b\u95f4\u7684\u91cd\u8981\u4e00\u6b65\u3002\\n\\n- \u63a8\u8350\u53c2\u6570\uff1a\u884c\u95f4\u8ddd 1.5 ~ 1.75\u3001\u5b57\u95f4\u8ddd 1\\n\\n#### 7. \u56fe\u7247\u4e0e\u8868\u60c5\u5305\\n\u9002\u5f53\u7684\u56fe\u7247\u548c\u8868\u60c5\u53ef\u4ee5\u589e\u52a0\u9605\u8bfb\u7684\u5174\u8da3\\n\\n**\u6d6e\u52a8\u8bbe\u7f6e**\\n\\n\u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u5f88\u591a\u516c\u4f17\u53f7\u901a\u7bc7\u90fd\u662f\u957f\u56fe\uff0c\u800c\u6211\u4eec\u4e0a\u4f20\u591a\u56fe\u7684\u65f6\u5019\uff0c\u8981\u4e48\u662f\u56fe\u7247\u592a\u5927\u4e0a\u4f20\u4e0d\u4e86\uff0c\u8981\u4e48\u5c31\u662f\u591a\u56fe\u7684\u65f6\u5019\u51fa\u73b0\u7a7a\u9699\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u53ea\u8981\u8ba9\u56fe\u7247\u6d6e\u52a8\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002"},{"id":"building-a-simple-and-user-friendly-note-taking-system","metadata":{"permalink":"/blog/building-a-simple-and-user-friendly-note-taking-system","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-16-building-a-simple-and-user-friendly-note-taking-system/index.md","source":"@site/blog/2021-02-16-building-a-simple-and-user-friendly-note-taking-system/index.md","title":"\u642d\u5efa\u7b80\u5355\u597d\u7528\u7684\u7b14\u8bb0\u7cfb\u7edf","description":"\u4f60\u662f\u4e0d\u662f\u4e5f\u4e00\u76f4\u89c9\u5f97 OneNote\u3001\u5370\u8c61\u7b14\u8bb0\u3001\u6709\u9053\u4e91\u7b14\u8bb0\u7b49\u7b49\u5de5\u5177\u7528\u8d77\u6765\u90fd\u6709\u4e00\u70b9\u4e0d\u592a\u8212\u670d\u3002\u6211\u53ea\u60f3\u7528\u4e00\u4e2a\u7b80\u5355\u65b9\u4fbf\uff0c\u5230\u54ea\u90fd\u80fd\u7528\u7684\u7b14\u8bb0\u7cfb\u7edf\uff0c\u4f46\u662f\u5e02\u9762\u4e0a\u5e38\u89c1\u7684\u7b14\u8bb0\u8f6f\u4ef6\u8d8a\u6765\u8d8a\u81c3\u80bf\uff0c\u5c0f\u4f17\u826f\u5fc3\u7684\u8f6f\u4ef6\u53c8\u62c5\u5fc3\u5b83\u4f1a\u4e0d\u4f1a\u6b7b\u6389\uff0c\u8fd9\u91cc\u6211\u7ed9\u4f60\u63d0\u4f9b\u4e00\u4e2a\u601d\u8def\u3002","date":"2021-02-16T00:00:00.000Z","formattedDate":"2021\u5e742\u670816\u65e5","tags":[{"label":"\u6548\u7387","permalink":"/blog/tags/\u6548\u7387"}],"readingTime":1.945,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"building-a-simple-and-user-friendly-note-taking-system","title":"\u642d\u5efa\u7b80\u5355\u597d\u7528\u7684\u7b14\u8bb0\u7cfb\u7edf","authors":["solidSpoon"],"tags":["\u6548\u7387"]},"unlisted":false,"prevItem":{"title":"\u6587\u7ae0\u6392\u7248\u6307\u5357","permalink":"/blog/article-formatting-guide"},"nextItem":{"title":"Git \u662f\u7eaf\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784","permalink":"/blog/git-is-a-purely-functional-data-structure"}},"content":"\u4f60\u662f\u4e0d\u662f\u4e5f\u4e00\u76f4\u89c9\u5f97 OneNote\u3001\u5370\u8c61\u7b14\u8bb0\u3001\u6709\u9053\u4e91\u7b14\u8bb0\u7b49\u7b49\u5de5\u5177\u7528\u8d77\u6765\u90fd\u6709\u4e00\u70b9\u4e0d\u592a\u8212\u670d\u3002\u6211\u53ea\u60f3\u7528\u4e00\u4e2a\u7b80\u5355\u65b9\u4fbf\uff0c\u5230\u54ea\u90fd\u80fd\u7528\u7684\u7b14\u8bb0\u7cfb\u7edf\uff0c\u4f46\u662f\u5e02\u9762\u4e0a\u5e38\u89c1\u7684\u7b14\u8bb0\u8f6f\u4ef6\u8d8a\u6765\u8d8a\u81c3\u80bf\uff0c\u5c0f\u4f17\u826f\u5fc3\u7684\u8f6f\u4ef6\u53c8\u62c5\u5fc3\u5b83\u4f1a\u4e0d\u4f1a\u6b7b\u6389\uff0c\u8fd9\u91cc\u6211\u7ed9\u4f60\u63d0\u4f9b\u4e00\u4e2a\u601d\u8def\u3002\\n\\n\u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u5168\u5e73\u53f0\u901a\u7528\u7684\u3001\u9002\u5408\u8bb0\u7b14\u8bb0\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u90a3\u4e48 Markdown \u5e94\u8be5\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002Markdown \u7684\u8bed\u6cd5\u7b80\u5355\u3001\u6392\u7248\u6f02\u4eae\uff0c\u914d\u5408\u50cf Typora \u8fd9\u79cd\u4f18\u96c5\u7684\u7f16\u8f91\u5668\u80fd\u591f\u5728\u7535\u8111\u7aef\u5b9e\u73b0\u5f88\u68d2\u7684\u4f53\u9a8c\u3002\\n\\n\u5f53\u7136\uff0cMarkdown \u4e5f\u6709\u5b83\u7684\u7f3a\u70b9\u3002\u7531\u4e8e\u8fd9\u79cd\u6587\u4ef6\u683c\u5f0f\u672c\u8eab\u5e76\u4e0d\u80fd\u4fdd\u5b58\u56fe\u7247\uff0c\u5bfc\u81f4 Markdown \u7684\u4f7f\u7528\u8005\u5e38\u5e38\u8981\u81ea\u5df1\u60f3\u529e\u6cd5\u6765\u89e3\u51b3\u5168\u5e73\u53f0\u4f7f\u7528\u56fe\u7247\u7684\u95ee\u9898\u3002\u5176\u4e2d\u6700\u7701\u5fc3\u7684\u529e\u6cd5\u5c31\u662f\u5728\u7c7b\u4f3c\u963f\u91cc\u4e91\u3001\u817e\u8baf\u4e91\u8fd9\u6837\u5927\u578b\u7684\u4e91\u670d\u52a1\u5546\u8d2d\u4e70\u5b58\u50a8\u670d\u52a1\uff0c\u914d\u5408 PicGo \u8fd9\u79cd\u5c0f\u5de5\u5177\u81ea\u5df1\u642d\u5efa\u4e00\u4e2a\u56fe\u5e8a\uff0c\u64cd\u4f5c\u7b80\u5355\u800c\u4e14\u8d28\u91cf\u53ef\u9760\u3002\\n\\n\u66f4\u5177\u4f53\u7684\u64cd\u4f5c\u65b9\u6cd5\u4f60\u53ef\u4ee5\u53bb\u641c\u7d22\u300e\u963f\u91cc\u4e91 \u56fe\u5e8a\u300f\u8fd9\u6837\u7684\u5173\u952e\u8bcd\u3002\u6700\u540e\uff0c\u4f7f\u7528\u575a\u679c\u4e91\u8fd9\u79cd\u5168\u5e73\u53f0\u53ef\u7528\u7684\u540c\u6b65\u76d8\u6765\u540c\u6b65\u4f60\u7684 Markdown \u7b14\u8bb0\u3002\u800c\u4e14\u575a\u679c\u4e91\u4e5f\u6709 Markdown \u5c0f\u5de5\u5177\uff0c\u5728\u624b\u673a\u548c\u7f51\u9875\u7aef\u6d4f\u89c8 Markdown \u6587\u4ef6\u4e5f\u6bd4\u8f83\u65b9\u4fbf\u3002\\n\\n\u5e0c\u671b\u4f60\u4e5f\u559c\u6b22\u8fd9\u6837\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002\\n\\n---\\n\\n\u9898\u56fe\u7531<a href=\\"https://pixabay.com/zh/users/Monfocus-2516394/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1925752\\">Monfocus</a>\u5728<a href=\\"https://pixabay.com/zh/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1925752\\">Pixabay</a>\u4e0a\u53d1\u5e03\\n\\n![list-1925752_1920](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200524165524.jpg)"},{"id":"git-is-a-purely-functional-data-structure","metadata":{"permalink":"/blog/git-is-a-purely-functional-data-structure","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-16-git-is-a-purely-functional-data-structure/index.md","source":"@site/blog/2021-02-16-git-is-a-purely-functional-data-structure/index.md","title":"Git \u662f\u7eaf\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784","description":"\u6700\u8fd1\u4e00\u76f4\u5728\u5b66\u4e60 Git\uff0c\u4f46\u662f\u4e00\u76f4\u4e0d\u77e5\u9053\u5b83\u7684\u539f\u7406\u662f\u4ec0\u4e48\uff0c\u76f4\u5230\u770b\u5230\u56fd\u5916\u7684\u4e00\u4e2a\u5927\u725b\u7684\u535a\u5ba2\u3002\u8fd9\u7bc7\u535a\u6587\u7ed9\u4e86\u6211\u5f88\u5927\u7684\u542f\u53d1\uff0c\u6240\u4ee5\u7ffb\u8bd1\u8fc7\u6765\u548c\u5927\u5bb6\u5206\u4eab\u3002","date":"2021-02-16T00:00:00.000Z","formattedDate":"2021\u5e742\u670816\u65e5","tags":[{"label":"\u7ffb\u8bd1","permalink":"/blog/tags/\u7ffb\u8bd1"},{"label":"Git","permalink":"/blog/tags/git"}],"readingTime":13.9,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"git-is-a-purely-functional-data-structure","title":"Git \u662f\u7eaf\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784","authors":["solidSpoon"],"tags":["\u7ffb\u8bd1","Git"]},"unlisted":false,"prevItem":{"title":"\u642d\u5efa\u7b80\u5355\u597d\u7528\u7684\u7b14\u8bb0\u7cfb\u7edf","permalink":"/blog/building-a-simple-and-user-friendly-note-taking-system"},"nextItem":{"title":"\u600e\u4e48\u76f4\u89c2\u5730\u7ed9\u7f51\u9875\u300cP \u56fe\u300d","permalink":"/blog/how-to-visually-edit-web-page-elements"}},"content":"> \u6700\u8fd1\u4e00\u76f4\u5728\u5b66\u4e60 Git\uff0c\u4f46\u662f\u4e00\u76f4\u4e0d\u77e5\u9053\u5b83\u7684\u539f\u7406\u662f\u4ec0\u4e48\uff0c\u76f4\u5230\u770b\u5230\u56fd\u5916\u7684\u4e00\u4e2a\u5927\u725b\u7684\u535a\u5ba2\u3002\u8fd9\u7bc7\u535a\u6587\u7ed9\u4e86\u6211\u5f88\u5927\u7684\u542f\u53d1\uff0c\u6240\u4ee5\u7ffb\u8bd1\u8fc7\u6765\u548c\u5927\u5bb6\u5206\u4eab\u3002\\n\\n> [\u539f\u6587\u94fe\u63a5](https://blog.jayway.com/2013/03/03/git-is-a-purely-functional-data-structure/)\\n\\n\u867d\u7136\u8fd1\u51e0\u5e74\u50cf Git \u8fd9\u79cd\u5206\u5e03\u5f0f\u7248\u672c\u7ba1\u7406\u7cfb\u7edf\u5f88\u706b\uff0c\u4f46\u5b83\u770b\u8d77\u6765\u8fd8\u662f\u6bd4\u50cf SVN \u8fd9\u6837\u7684\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u590d\u6742\u3002\u6211\u731c\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u4eec\u603b\u662f\u4f1a\u628a\u4e8c\u8005\u76f8\u6bd4\u8f83\uff1a\u5728 SVN \u4e2d\u8fd9\u6837\u505a\uff0c\u4f46\u5728 Git \u4e2d\u5374\u9700\u8981\u90a3\u6837\u505a\u3002\\n\\n\u6211\u8ba4\u4e3a Git \u7684\u771f\u5b9e\u542b\u4e49\u5e94\u8be5\u662f**\u4e00\u4e2a\u7eaf\u7cb9\u7684\u51fd\u6570\u5f0f\u636e\u7ed3\u6784**\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u5728\u5b66\u4e60\u719f\u7ec3\u5730\u4f7f\u7528 Git\uff0c\u90a3\u4f60\u4e5f\u5c31\u662f\u5728\u5b66\u4e60\u5904\u7406\u6570\u636e\u7ed3\u6784\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u6765\u63a2\u8ba8\u4e00\u4e0b\u7eaf\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784\u3002\\n\\n\x3c!-- more --\x3e\\n\\n### \u4e0d\u53d8\u6027\\n\\n\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6982\u5ff5\u5c31\u662f\u4e0d\u53d8\u6027( immutablity )\u3002\u5c31\u662f\u8bf4\u4e00\u4e2a\u5bf9\u8c61\u7684\u72b6\u6001\u5728\u6784\u9020\u5b8c\u6210\u4ee5\u540e\u4e0d\u53ef\u6539\u53d8\\n\\n\u6bd4\u5982\u6709\u4e00\u4e2a\u5178\u578b\u5217\u8868 `[3,2,1]`\u3002\u5982\u679c\u8fd9\u4e2a\u5217\u8868\u662f\u53ef\u53d8\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4ed6\u7684\u5934\u90e8\u63d2\u5165\u4e00\u4e2a\u5143\u7d204\uff0c\u5373 `[4,3,2,1]`\u3002\u73b0\u5728\u5b83\u53d8\u6210\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u5217\u8868\uff0c\u4e4b\u524d\u7684\u90a3\u4e2a\u5217\u8868\u4e22\u5931\u4e86\u3002\u5982\u679c\u6b64\u65f6\u5176\u4ed6\u7684\u5c0f\u4f19\u4f34\u4e5f\u5728\u64cd\u4f5c\u8fd9\u4e2a\u5217\u8868\uff0c\u4ed6\u4eec\u4fbf\u4f1a\u4e0d\u5e78\u5730\u5f97\u5230\u4e00\u4e2a\u5f02\u5e38.\\n\\n\u800c\u51fd\u6570\u5f0f\u7f16\u7a0b\u4fbf\u4e0d\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u56e0\u4e3a\u5f53\u6211\u4eec\u5728\u5217\u8868\u5934\u90e8\u63d2\u5165 `4` \u65f6\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u5217\u8868 `[4,3,2,1]`\uff0c\u800c\u4e0d\u4f1a\u4fee\u6539\u539f\u59cb\u5217\u8868\u3002\u6240\u4ee5\u4e24\u4e2a\u5217\u8868\u4f1a\u540c\u65f6\u5b58\u5728\u3002\\n\\n\u53ef\u662f\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u8fed\u4ee3\u8fd9\u4e2a\u5217\u8868\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u5168\u65b0\u7684\u5217\u8868\uff0c\u8fd9\u6837\u4e0d\u4ec5\u6d6a\u8d39\uff0c\u800c\u4e14\u6548\u7387\u5f88\u4f4e\u554a\u3002\\n\\n\u5b9e\u9645\u4e0a\uff0c\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784\u7684\u6548\u7387\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u5bf9\u5b83\u4eec\u6267\u884c\u7684\u64cd\u4f5c\u3002\u5bf9\u4e8e\u521a\u521a\u90a3\u79cd\uff08\u5355\u94fe\u63a5\uff09\u5217\u8868\uff0c\u5982\u679c\u6211\u4eec\u53ea\u662f\u60f3\u5728\u5b83\u7684\u5934\u90e8\u63d2\u5165\u6570\u636e\uff0c\u5b8c\u5168\u53ef\u4ee5\u7528\u66f4\u6709\u6548\u7387\u7684\u65b9\u6cd5\uff1a\\n\\n```\\n  +---+    +---+    +---+    +---+\\n  | 4 +---\x3e+ 3 +---\x3e+ 2 +---\x3e+ 1 |\\n  +---+    +---+    +---+    +---+\\n    |        |\\nnew list  original\\n```\\n\\n\u6211\u4eec\u5c06\u65b0\u5143\u7d20 `4` \u653e\u5728\u4e00\u4e2a\u65b0\u8282\u70b9\u4e2d\uff0c\u5e76\u5c06\u5b83\u6307\u5411\u5217\u8868\u7684\u5176\u4f59\u90e8\u5206\u3002\u4f60\u770b\uff0c\u4e4b\u524d\u7684\u5217\u8868\u5f97\u5230\u4e86\u590d\u7528\uff0c\u4e4b\u524d\u6211\u4eec\u53d1\u73b0\u7684\u90a3\u4e9b\u95ee\u9898\u5168\u90fd\u89e3\u51b3\u4e86\u3002\\n\\n\u53ef\u662f\u5982\u679c\u5176\u4ed6\u4eba\u60f3\u8981\u5728 `[3,2,1]` \u4e4b\u524d\u63d2\u5165 `9` \u5462\uff1f\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u8fd9\u4e2a\u65b9\u6cd5\u5566\uff1a\\n\\n```\\n              +---+      +---+    +---+    +---+\\nnew list 1 -> | 4 +---+->+ 3 +---\x3e+ 2 +---\x3e+ 1 |\\n              +---+  /   +---+    +---+    +---+\\n                    /      |\\n              +---+/    original\\nnew list 2 -> | 9 +\\n              +---+\\n```\\n\\n\u6211\u4eec\u5f53\u7136\u4e5f\u53ef\u4ee5\u5c06\u8fd9\u6837\u7684\u5143\u7d20\u5b58\u50a8\u4e3a\u53ef\u53d8\u5217\u8868\uff08non-immutable list\uff09\uff0c\u4f46\u662f\u8fd9\u5f88\u5371\u9669\u3002\u5047\u5982\u6211\u4eec\u66f4\u65b0\u5217\u8868\u4e2d\u7684\u5143\u7d20 `[3]`\uff0c\u90a3\u90e8\u5206\u53ef\u662f\u516c\u5171\u7684\uff0c\u4f60\u7684\u4fee\u6539\u4f1a\u5f71\u54cd\u5230\u4ed6\u4eba\uff0c\u90a3\u4e9b\u9700\u8981 `[9,3,2,1]` \u5217\u8868\u7684\u4eba\u53ef\u4e0d\u559c\u6b22\u4f60\u8fd9\u4e48\u5e72\u3002\\n\\n\u4f46\u662f......\u5982\u679c\u6211\u786e\u5b9e\u9700\u8981\u5c06\u5143\u7d20 `3` \u53d8\u6210 `5`\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u8fd8\u662f\u7528\u8001\u65b9\u6cd5\u554a\uff1a\\n\\n```\\n                +---+    +---+\\nupdated list -> | 4 +---\x3e+ 5 +\\n                +---+    +---+\\\\    \\n                               \\\\    \\n                +---+    +---+  \\\\ +-+-+    +---+\\n  new list 1 -> | 4 +---\x3e+ 3 +---\x3e+ 2 +---\x3e+ 1 |\\n                +---+  / +---+    +---+    +---+\\n                      /    |\\n                +---+/  original\\n  new list 2 -> | 9 +\\n                +---+\\n```\\n\\n\u4f60\u770b\uff0c\u5b83\u73b0\u5728\u53ef\u4ee5\u8868\u793a\u56db\u4e2a\u5217\u8868\uff1a\\n\\n- \u6700\u521d\u7684\u7684\u5217\u8868 `[3,2,1]`\\n- list 1 `[4,3,2,1]`\\n- list 2 `[9,3,2,1]`\\n- list 2 `[4,5,2,1]`\\n\\n\u7eaf\u51fd\u6570\u6570\u636e\u7ed3\u6784\u5728\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u6765\u81ea\u4e0d\u540c\u7ebf\u7a0b\u7684\u66f4\u6539\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270\u3002\\n\\n### \u548c Git \u7684\u5173\u7cfb\\n\\n\u53ef\u662f\uff0c\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684\u4e0d\u53d8\u6027\u548c Git \u7684\u7248\u672c\u63a7\u5236\u529f\u80fd\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u90a3\u6211\u4eec\u5c31\u4e00\u8d77\u6765\u5bf9\u6bd4\u4ee5\u4e0b\u5b83\u4eec\u4fe9\u7684\u5f02\u540c\u5427\u3002\\n\\n- \u5728\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e2d\u6211\u4eec\u60f3\u8981\u5b8c\u6210\u7684\u662f\uff1a\\n    1. \u4f7f\u7528\u65b0\u7248\u672c\u7684\u6587\u4ef6\u66f4\u65b0\u6211\u4eec\u7684\u4ee3\u7801\u4ed3\u7ba1\u5e93\uff0c\u65e7\u7248\u672c\u6587\u4ef6\u4e5f\u8981\u4fdd\u7559\u3002\\n    2. \u5f53\u4f60\u548c\u4f60\u7684\u5c0f\u4f19\u4f34\u95e8\u5728\u540c\u4e00\u4e2a\u4e2a\u4ee3\u7801\u5e93\u4e0a\u8fdb\u884c\u534f\u4f5c\u65f6\uff0c\u4e0d\u4f1a\u4ee5\u4e0d\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u76f8\u4e92\u5e72\u6270\u3002\\n- \u4e0d\u53ef\u53d8\u7684\u6570\u636e\u7ed3\u53ef\u4ee5\uff1a\\n    1. \u66f4\u65b0\u6570\u636e\u7ed3\u6784\u7684\u540c\u65f6\u4fdd\u7559\u8001\u7684\u6570\u636e\u7ed3\u6784\u3002\\n    2. \u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u5bf9\u6570\u636e\u7ed3\u6784\u66f4\u6539\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u7ebf\u7a0b\\n\\n\u600e\u4e48\u6837\uff0c\u662f\u4e0d\u662f\u89c9\u5f97\u5b83\u4eec\u4fe9\u5f88\u50cf\u3002\\n\\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u95e8\u751a\u81f3\u53ef\u4ee5\u8bf4 Git \u57fa\u672c\u4e0a\u5c31\u662f\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784\uff0c\u8ba9\u4f60\u4f7f\u7528\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u5728\u5176\u4e0a\u6267\u884c\u64cd\u4f5c\u3002\\n\\n\u8981\u5b8c\u6210\u8fd9\u4e2a\u7c7b\u6bd4\uff0c\u6211\u4eec\u9700\u8981\u628a\u4e0a\u9762\u7684\u6570\u5b57\u66ff\u6362\u6210 Commit\u3002\\n\\nGit commints \u662f\u5de5\u4f5c\u5386\u53f2\u4e2d\u7279\u5b9a\u65f6\u95f4\u70b9\u7684\u5168\u90e8\u5de5\u4f5c\u72b6\u6001\u7684\u72ec\u7acb\u526f\u672c\uff0c\u5373\u5de5\u4f5c\u76ee\u5f55\u7684\u5b8c\u6574\u5feb\u7167\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u793a\u4f8b\u4e2d\u7684\u94fe\u8868\u770b\u6210\u662f Git \u4e2d\u7684\u5386\u53f2\u8bb0\u5f55\u3002\\n\\n\u6bd4\u5982\u8bf4\u6211\u4eec\u6709\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\uff0c\u5b83\u7684 `master` \u5206\u652f\u5305\u542b\u4e09\u4e2a\u6309\u987a\u5e8f\u7684 commit : `A`\uff0c`B`\uff0c`C`\u3002\u4e5f\u5c31\u662f\u6211\u4eec\u8ba9 Git \u5728\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5b8c\u6574\u5730\u5b58\u50a8\u4e86\u6211\u4eec\u7684\u5de5\u4f5c\u76ee\u5f55\u4e09\u6b21\u3002\\n\\n\u8fd9\u5c31\u662f\u5386\u53f2\u7eaa\u5f55\u554a\uff0c\u7528\u56fe\u8bf4\u8bdd\uff1a\\n\\n```\\n+---+    +---+    +---+\\n+ C +---\x3e+ B +---\x3e+ A |\\n+---+    +---+    +---+\\n  |\\nmaster\\n```\\n\\n### Git commit\\n\\n\u5f53\u6211\u4eec\u6267\u884c commit \u7684\u65f6\u5019\uff0c\u8fd9\u5c31\u53ef\u4ee5\u7c7b\u6bd4\u6210\u6211\u4eec\u5c06\u4e00\u4e2a\u6570\u636e\u63d0\u4ea4\u5230\u4e86\u8fd9\u4e2a\u5386\u53f2\u7eaa\u5f55\u7684\u5f00\u5934\u3002\u800c Git \u751a\u81f3\u7528 `HEAD` \u4ee3\u8868\u5f53\u524d\u7684 commit\u3002\\n\\n```\\n+---+    +---+    +---+    +---+\\n+ D +---\x3e+ C +---\x3e+ B +---\x3e+ A |\\n+---+    +---+    +---+    +---+\\n  |        |\\nmaster   master^\\n```\\n\\n\u5f53 Git \u6267\u884c commit \u65f6\uff0c\u5b83\u4f1a\u79fb\u52a8\u5f53\u524d\u5206\u652f\u6307\u9488\uff0c\u5c06 `master` \u6307\u5411 `[D,C,B,A]`\u3002\u6211\u4eec\u4ecd\u7136\\n\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0 `master^` \u6307\u5411 `[C,B,A]`\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u4eba\u3002\\n\\n### Git amend\\n\\n\u5982\u679c\u4f60\u4f7f\u7528\u8fc7 Git\uff0c\u4f60\u6216\u8bb8\u77e5\u9053\u53ef\u4ee5\u4f7f\u7528 `commit --amend` \u6765\u66f4\u65b0\u6700\u8fd1\u4e00\u6b21\u7684 commit  \uff0c\u4f46\u4f60\u771f\u7684\u53ef\u4ee5\u66f4\u65b0 commit \u5417\uff1f\\n\\n\u4e8b\u5b9e\u4e0a\uff0c\u4f60\u4e0d\u80fd\u3002Git \u53ea\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 commit \uff08\u4e0b\u56fe\u4e2d E\uff09\u5e76\u5c06 branch \u6307\u9488\u6307\u5411\u5b83\u3002\u4f60\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528 `git reflog` \u547d\u4ee4\u770b\u5230\u5b83\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684 hash value \u6765\u5f15\u7528\uff08\u5047\u8bbe\u4ed6\u7684 hash value \u662f ef4d34\uff09\u3002\\n\\n```\\n          +---+    +---+    +---+    +---+\\nef4d34 -> | D +--+>+ C +---\x3e+ B +---\x3e+ A |\\n          +---+ /  +---+    +---+    +---+\\n               /     |\\n          +---+    master^\\nmaster -> | E |\\n          +---+\\n```\\n\\n### Git branch\\n\\n\u5982\u4f60\u6240\u89c1\uff0c\u6bcf\u6b21\u6267\u884c `commit --amend` \u65f6\uff0c\u5b9e\u9645\u4e0a\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u5206\u652f\u3002\u5206\u652f\u7684\u552f\u4e00\u529f\u80fd\u5c31\u662f\u7ed9\u6211\u4eec\u80fd\u5f15\u7528\u7684 commit \u8d77\u4e2a\u540d\u5b57\u3002\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528 `git checkout -b branch ef3d34` \u547d\u4ee4\u5728\u90a3\u4e2a\u88ab\u4e22\u5f03\u7684 commit `ef3d34` \u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u5206\u652f\u3002\\n\\n```\\n          +---+    +---+    +---+    +---+\\nbranch -> | D +--+>+ C +---\x3e+ B +---\x3e+ A |\\n          +---+ /  +---+    +---+    +---+\\n               /     |\\n          +---+  master^\\nmaster -> | E |\\n          +---+\\n```\\n\\n\u901a\u5e38\uff0c\u6211\u4eec\u901a\u8fc7\u4e3a\u5f53\u524d\u7684\u5de5\u4f5c\u6d41 `HEAD` \u521b\u5efa\u4e00\u4e2a\u65b0\u540d\u79f0\u6765\u5728 Git \u4e2d\u8fdb\u884c\u5206\u652f\uff0c\u4f46\u662f\u5982\u679c\u4f60\u5c06 Git \u7406\u89e3\u4e3a\u4e00\u4e2a\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784\uff0c\u4f60\u5c31\u53ef\u4ee5\u968f\u5fc3\u6240\u6b32\u5730\u5728\u8fd9\u4e2a\u6811\u72b6\u56fe\u4e0a\u7684\u4efb\u4f55\u4e00\u4e2a commit \u4e0a\u521b\u5efa\u5206\u652f\u4e86\u3002\\n\\n### Git rebase\\n\\n\u5f53\u6211\u4eec\u5728\u4e0a\u8fb9\u7684\u793a\u4f8b\u5217\u8868\u4e2d\u66f4\u65b0\u4e00\u4e2a\u8282\u70b9\u65f6,\u6211\u4eec\u5fc5\u987b\u628a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0\u5230\u5728\u66f4\u65b0\u540e\u7684\u5143\u7d20\u4e4b\u524d\uff08\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u8fd9\u662f\u5355\u4e2a\u8282\u70b9 `4`\uff0c\u4f46\u53ef\u4ee5\u662f\u4efb\u610f\u6570\u91cf\u7684\u8282\u70b9\uff09\u3002\u5728 Git \u4e2d\uff0c\u8fd9\u79f0\u4e3a\u91cd\u65b0\u63d0\u4ea4\uff08replaying commits\uff09\uff0c\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u547d\u4ee4\u79f0\u4e3a\u53d8\u57fa\uff08rebase\uff09\u3002\u8981\u66f4\u65b0\u65e7\u63d0\u4ea4\uff0c\u6211\u4eec\u6dfb\u52a0 `-i` \u53c2\u6570\u6765\u6267\u884c\u4e00\u4e2a\u5728 Git \u4e2d\u79f0\u88ab\u53eb\u505a\u300c\u4ea4\u4e92\u5f0f rebase\u300d\u7684\u64cd\u4f5c\u3002\\n\\n\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u60f3\u8981\u7528\u4e00\u4e2a\u65b0\u7684 commit message \u6765\u66f4\u65b0 commit `C`\u3002\u6211\u4eec\u9700\u8981\u5207\u6362\u5230 commit `D`\uff0c\u7136\u540e\u8f93\u5165 `git rebase -i c` \u3002\\n\\n```\\n> git checkout D\\n> git rebase -i C\\n```\\n\\n\u5728\u7a97\u53e3\u4e2d\u5305\u542b\u4e00\u4e0b\u5185\u5bb9\uff1a\\n\\n```\\npick cd3ff32 <C\'s commit message>\\npick a65a671 <D\'s commit message>\\n\\n# some helpful comments from git\\n```\\n\\n\u5982\u679c\u6211\u4eec\u60f3\u7f16\u8f91 cimmit `C`\uff0cGit \u5141\u8bb8\u6211\u4eec\u5728\u91cd\u653e\u540e\u7eed\u63d0\u4ea4\u4e4b\u524d\u7f16\u8f91\u8be5\u63d0\u4ea4\u3002\\n\\n```\\nedit cd3ff32 <C\'s commit message>\\npick a65a671 <D\'s commit message>\\n```\\n\\n\u5f53\u6211\u4eec\u4fdd\u5b58\u6587\u4ef6\u5e76\u5173\u95ed\u5b83\u65f6\uff0cGit \u4f1a\u5f00\u59cb\u4e00\u4e2a rebase \u3002\u5b83\u4f1a\u5728 commit `C` \u505c\u6b62\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u5b83\u3002\\n\\n```\\nStopped at cd3ff32... <C\'s commit message>\\nYou can amend the commit now, with\\n\\n        git commit --amend\\n\\nOnce you are satisfied with your changes, run\\n\\n        git rebase --continue\\n```\\n\\n\u7a97\u53e3\u4e2d\u7684\u6d88\u606f\u8bf4\u660e\u4e86\u4e00\u5207\u3002\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u8981\u968f\u610f\u7f16\u8f91 commit \u540e\u6211\u4eec\u8c03\u7528 `commit --amend` \u521b\u5efa\u66f4\u65b0\u7684 commit\uff0c\u7136\u540e\u4f7f\u7528\u300c\u7ee7\u7eed rebase\u300d\u6307\u4ee4\uff1a `git rebase --continue`\u3002\\n\u5f53\u6211\u4eec\u9009\u62e9\u547d\u4ee4\u65f6\uff0c\u5176\u4f59\u7684 commit \u5c06\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u91cd\u653e `pick`\uff08\u9664\u975e\u6700\u7ec8\u53d1\u751f\u4e86\u5408\u5e76\u51b2\u7a81\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b Git \u4f1a\u505c\u6b62\u5e76\u5728\u4f60\u4fee\u590d\u5b83\u4e4b\u540e\u624d\u80fd\u7ee7\u7eed\uff09\u3002\u6211\u4eec\u7684\u5b8c\u6574\u5b58\u50a8\u5e93\u73b0\u5728\u5c31\u50cf\u4e0b\u8fb9\u8fd9\u6837\u3002\\n\\n```\\n          +---+    +---+\\nrebased ->| D\'+---\x3e+ C\'+\\n          +---+    +---+\\n                         \\n          +---+    +---+    +---+    +---+\\nbranch -> | D +--+>+ C +---\x3e+ B +---\x3e+ A |\\n          +---+ /  +---+    +---+    +---+\\n               /     |\\n          +---+  master^\\nmaster -> | E |\\n          +---+\\n```\\n\\n\u6211\u5e0c\u671b\u4e0a\u9762\u7684\u56fe\u4f1a\u8ba9\u4f60\u89c9\u5f97\u719f\u6089\u3002\u5e0c\u671b\u4f60\u4e5f\u80fd\u660e\u767d\u4e3a\u4ec0\u4e48 Git \u7684 rebase \u547d\u4ee4\u4f1a\u521b\u5efa\u6240\u6709\u65b0\u7684 commit\u3002Git \u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u4e0d\u5141\u8bb8\u66f4\u6539\u73b0\u6709\u7684 commit\u3002\\n\\n\u7531\u4e8e rebase \u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u63d0\u4ea4\u94fe\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u5b9a\u5e0c\u671b\u80fd\u591f\u5bf9\u8fd9\u4e2a\u65b0\u94fe\u7684\u5916\u89c2\u8fdb\u884c\u5fc5\u8981\u7684\u4e14\u4efb\u610f\u7684\u63a7\u5236\u3002\u6211\u4eec\u53ef\u4ee5\u7528 `rebase -i` \u6765\u91cd\u65b0\u6392\u5e8f\uff0c\u538b\u7f29\u6216\u5220\u9664\u63d0\u4ea4\uff0c\u6216\u8005\u968f\u610f\u62c9\u5165\u65b0\u7684\u63d0\u4ea4\uff0c\u6bd4\u5982\u628a\u4e00\u4e2a commit \u5206\u6210\u51e0\u90e8\u5206\uff0c\u6216\u8005\u4ece\u5b58\u50a8\u4ed3\u5e93\u4e2d\u7684\u5176\u4ed6\u4f4d\u7f6e\u5f00\u59cb\uff08\u4f7f\u7528 `--onto` \u53c2\u6570\uff09\u3002\\n\\n### Git merge\\n\\n\u73b0\u5728\u6211\u4eec\u6765\u8c08\u8c08\u5408\u5e76\u628a\u3002Git \u5141\u8bb8\u6211\u4eec\u5c06\u4e24\u4e2a\u5206\u652f\u5408\u5e76\u4e3a\u4e00\u4e2a\\n\\n```\\n        +---+\\n      --+ X |\\n+---+/  +---+\\n| M |\\n+---+   +---+\\n      --+ Y |\\n        +---+\\n```\\n\\n\u5408\u5e76\u7d66\u6211\u4eec\u7684\u6a21\u578b\u5e26\u6765\u4e86\u66f4\u591a\u7684\u590d\u6742\u6027\u3002\u5b83\u628a\u6211\u4eec\u7684\u5386\u53f2\u4ece\u4e00\u4e2a\u6811\u72b6\u56fe\u53d8\u6210\u4e86\u4e00\u4e2a\u975e\u5faa\u73af\u56fe\u3002\u8fd9\u5e76\u6ca1\u6709\u592a\u5927\u7684\u6539\u53d8\uff0c\u4f46\u8bf7\u6ce8\u610f\uff0c\u867d\u7136 rebase \u542c\u8d77\u6765\u590d\u6742\uff0c\u4f46\u53ea\u6709 merge \u547d\u4ee4\u5e26\u6765\u4e86\u989d\u5916\u7684\u6982\u5ff5\u590d\u6742\u6027\u3002\\n\\n\u53ef\u4ee5\u901a\u8fc7\u5728\u65b0\u65b9\u5411\u4e0a\u5e94\u7528\u65b0\u63d0\u4ea4\u6765\u7406\u89e3 Rebase \u3002\u5408\u5e76\u662f\u4e00\u79cd\u6839\u672c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u4e00\u4e2a\u4f60\u53ef\u4ee5\u5c06\u4e24\u4e2a\u90e8\u5206\u50cf\u8fd9\u6837\u7ec4\u5408\u6210\u6570\u636e\u7ed3\u6784\u4e00\u4e2a\u7279\u6b8a\u7684\u540d\u79f0\uff1a\u6211\u4eec\u79f0\u5b83 confluently persistent\u3002\uff08\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784\u4e5f\u53eb persistent\u3002\u6211\u907f\u514d\u4f7f\u7528\\n\u8fd9\u4e2a\u672f\u8bed\uff0c\u6240\u4ee5\u4f60\u4e0d\u8981\u5c06\u5b83\u4e0e\u50cf\u7269\u7406\u5149\u76d8\u8fd9\u6837\u7684\u6301\u4e45\u6027\u5a92\u4f53\u4e0a\u7684\u5b58\u50a8\u6982\u5ff5\u6df7\u6dc6\u3002\uff09\\n\\n### \u7ed3\u8bba\\n\\nGit\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u76f8\u5f53\u7b80\u5355\u7684\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784\u3002\u4e0e\u5176\u628aGit\u63cf\u8ff0\u6210\u4e00\u4e2a\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u4e0d\u5982\u8bf4\u7248\u672c\u63a7\u5236\u662f\u201c\u4e0d\u53d8\u6027\u201d\u6570\u636e\u7ed3\u6784\u7684\u4e00\u4e2a\u81ea\u7136\u5c5e\u6027\u3002\u3002\u6211\u8ba4\u4e3a\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8c08\u8bba Git \u80fd\u66f4\u51c6\u786e\u5730\u4f20\u8fbe Git \u7684\u7b80\u5355\u6027\u548c\u5a01\u529b\uff0c\u800c\u4e0d\u662f\u4e0e\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u76f8\u6bd4\u80fd\u5b8c\u6210\u4ec0\u4e48\u3002\\n\\n\u5982\u679c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6765\u601d\u8003\u7684\u8bdd\uff0cGit \u5728\u6982\u5ff5\u4e0a\u6bd4 SVN, CVS \u7b49\u8981\u7b80\u5355\u3002 \u5927\u5bb6\u8ba4\u4e3a Git \u66f4\u52a0\u590d\u6742\u53ef\u80fd\u662f\u56e0\u4e3a\u8fd9\u79cd\u590d\u6742\u6027\u80fd\u652f\u6301\u66f4\u6709\u8da3\u7684 workflow\u3002\\n\\n\u5982\u679c\u4f60\u66fe\u7ecf\u89c9\u5f97 Git \u4ee4\u4eba\u751f\u754f\uff0c\u90a3\u8bf7\u8bb0\u4f4f\u5b83\u7684\u7b80\u5355\u7ed3\u6784\uff0c\u4ee5\u53ca\u5728\u51fd\u6570\u5f0f\u7ed3\u6784\u4e2d\uff0c\\n\u63d2\u5165\u5176\u4e2d\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u4e0d\u4f1a\u771f\u6b63\u4e22\u5931\uff0c\u5e76\u4e14\u53ef\u4ee5\u88ab\u6062\u590d\u3002\uff08\u68c0\u67e5\u4f60\u7684 `reflog`\uff09"},{"id":"how-to-visually-edit-web-page-elements","metadata":{"permalink":"/blog/how-to-visually-edit-web-page-elements","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-16-how-to-visually-edit-web-page-elements/index.md","source":"@site/blog/2021-02-16-how-to-visually-edit-web-page-elements/index.md","title":"\u600e\u4e48\u76f4\u89c2\u5730\u7ed9\u7f51\u9875\u300cP \u56fe\u300d","description":"\u4f60\u80af\u5b9a\u77e5\u9053\u5728\u6d4f\u89c8\u5668\u4e2d\u6309\u4e0b F12 \u6253\u5f00\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u5728\u5176\u4e2d\u4fee\u6539\u6e90\u4ee3\u7801\u5c31\u53ef\u4ee5\u66f4\u6539\u7f51\u9875\u4e0a\u7684\u4efb\u610f\u5185\u5bb9\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u529e\u6cd5\u53ef\u4ee5\u4e0d\u770b\u6e90\u7801\uff0c\u901a\u8fc7\u300c\u6240\u89c1\u5373\u6240\u5f97\u300d\u7684\u65b9\u5f0f\u76f4\u63a5\u5728\u9875\u9762\u4e0a\u4fee\u6539\u5462","date":"2021-02-16T00:00:00.000Z","formattedDate":"2021\u5e742\u670816\u65e5","tags":[{"label":"\u6559\u7a0b","permalink":"/blog/tags/\u6559\u7a0b"}],"readingTime":1.785,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"how-to-visually-edit-web-page-elements","title":"\u600e\u4e48\u76f4\u89c2\u5730\u7ed9\u7f51\u9875\u300cP \u56fe\u300d","authors":["solidSpoon"],"tags":["\u6559\u7a0b"]},"unlisted":false,"prevItem":{"title":"Git \u662f\u7eaf\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784","permalink":"/blog/git-is-a-purely-functional-data-structure"},"nextItem":{"title":"\u5982\u4f55\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d 3 \u7684\u500d\u6570","permalink":"/blog/matching-multiples-of-3-with-regular-expressions"}},"content":"\u4f60\u80af\u5b9a\u77e5\u9053\u5728\u6d4f\u89c8\u5668\u4e2d\u6309\u4e0b F12 \u6253\u5f00\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u5728\u5176\u4e2d\u4fee\u6539\u6e90\u4ee3\u7801\u5c31\u53ef\u4ee5\u66f4\u6539\u7f51\u9875\u4e0a\u7684\u4efb\u610f\u5185\u5bb9\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u529e\u6cd5\u53ef\u4ee5\u4e0d\u770b\u6e90\u7801\uff0c\u901a\u8fc7\u300c\u6240\u89c1\u5373\u6240\u5f97\u300d\u7684\u65b9\u5f0f\u76f4\u63a5\u5728\u9875\u9762\u4e0a\u4fee\u6539\u5462\\n\\n![\u6f14\u793a](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201215204850.gif)\\n\\n\u4e0b\u9762\u8fd9\u4e24\u4e2a\u5c5e\u6027\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e00\u60f3\u6cd5\uff1a\\n\\n1. \u4f7f\u7528 `contentEditable` \u5c5e\u6027\\n1. \u4f7f\u7528 `designMode` \u5c5e\u6027\\n\\n\u8fd9\u4e24\u4e2a\u5c5e\u6027\u7528\u6765\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u521b\u5efa\u7f51\u9875\u7aef\u7684\u5bcc\u6587\u672c\u7f16\u8f91\u5668\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4eec\u5c06\u6574\u4e2a\u7f51\u9875\u90fd\u5e94\u7528\u8fd9\u4e24\u4e2a\u5c5e\u6027\uff0c\u90fd\u53ef\u4ee5\u8fbe\u5230\u53ef\u89c6\u5316\u7f16\u8f91\u7f51\u9875\u7684\u6548\u679c\u3002\\n\\n```javascript\\ndocument.body.contentEditable=\'true\';document.designMode=\'on\';\\n```\\n\\n`designMode` \u662f document \u7ea7\u522b\u7684\u5c5e\u6027\\n\\n`contentEditable` \u662f\u5143\u7d20\u7ea7\u522b\u7684\u5c5e\u6027\\n\\n\u5f53\u4e00\u4e2a HTML \u6587\u6863\u88ab\u5207\u6362\u5230 designMode \u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 `document.execCommand` \u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u5bf9\u6587\u6863\u4e2d\u7684\u5185\u5bb9\u6dfb\u52a0**\u7c97\u4f53**\u3001*\u659c\u4f53*\u3001\u7f29\u8fdb\u3001\u5bf9\u67d0\u6bb5\u6587\u5b57\u6dfb\u52a0\u4e00\u4e2a\u94fe\u63a5\u7b49\u7b49\u3002\\n\\n\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u4f1a\u7ed9\u9009\u4e2d\u7684\u6587\u672c\u52a0\u4e0a\u94fe\u63a5\\n\\n```javascript\\ndocument.execCommand(\\"CreateLink\\",false,\\"http://www.baidu.com\\");\\n```\\n\\n\u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u7528\u53ef\u89c6\u5316\u7684\u65b9\u5f0f\u6539\u7f51\u9875\u4e86\u3002\u5f53\u7136\uff0c\u4f60\u80af\u5b9a\u4e0d\u60f3\u5728\u63a7\u5236\u53f0\u6572\u8fd9\u4e48\u957f\u7684\u547d\u4ee4\uff0c\u6240\u4ee5\u627e\u4e00\u4e9b\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u8fd0\u884c\u811a\u672c\u7684\u8f6f\u4ef6\u6765\u7b80\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\\n\\n\u8fd9\u513f\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5e0c\u671b\u53ef\u4ee5\u5e2e\u52a9\u5230\u4f60\\n\\nhttps://getquicker.net/sharedaction?code=f7db1234-2681-4c6a-82a4-08d83ad18965\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201215213916.gif)"},{"id":"matching-multiples-of-3-with-regular-expressions","metadata":{"permalink":"/blog/matching-multiples-of-3-with-regular-expressions","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-16-matching-multiples-of-3-with-regular-expressions/index.md","source":"@site/blog/2021-02-16-matching-multiples-of-3-with-regular-expressions/index.md","title":"\u5982\u4f55\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d 3 \u7684\u500d\u6570","description":"\u5982\u4f55\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d3\u7684\u500d\u6570","date":"2021-02-16T00:00:00.000Z","formattedDate":"2021\u5e742\u670816\u65e5","tags":[{"label":"\u6b63\u5219","permalink":"/blog/tags/\u6b63\u5219"}],"readingTime":8.43,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"matching-multiples-of-3-with-regular-expressions","title":"\u5982\u4f55\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d 3 \u7684\u500d\u6570","authors":["solidSpoon"],"tags":["\u6b63\u5219"]},"unlisted":false,"prevItem":{"title":"\u600e\u4e48\u76f4\u89c2\u5730\u7ed9\u7f51\u9875\u300cP \u56fe\u300d","permalink":"/blog/how-to-visually-edit-web-page-elements"},"nextItem":{"title":"VsCode \u591a\u5149\u6807\u7279\u6027","permalink":"/blog/multi-cursor-feature-in-vs-code"}},"content":"\u5982\u4f55\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d3\u7684\u500d\u6570\\n\\n## \u95ee\u9898\u80cc\u666f\\n\\n\u6700\u8fd1\u5728\u77e5\u4e4e\u4e0a\u770b\u5230\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\u300e\u5982\u4f55\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d 3 \u7684\u500d\u6570\u300f\uff0c\u539f\u5e16\u7ed9\u51fa\u7684\u7b54\u6848\u975e\u5e38\u6709\u610f\u601d\uff0c\u9042\u7814\u7a76\u4e86\u4e00\u756a\\n\\n\\n\u770b\u4e00\u4e2a\u6570\u80fd\u5426\u88ab 3 \u6574\u9664\uff0c\u6700\u76f4\u63a5\u7684\u529e\u6cd5\u5c31\u662f\u5c06\u8fd9\u4e2a\u6570\u7528 3 \u9664\u4e00\u4e0b\uff0c\u5982\u679c\u4f59\u6570\u662f 0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u53ef\u4ee5\u88ab3 \u6574\u9664\u3002\u7136\u800c\u6b63\u5219\u5e76\u4e0d\u5177\u6709\u8ba1\u7b97\u7684\u529f\u80fd\uff0c\u6b63\u5219\u7b97\u6cd5\u7684\u5b9e\u73b0\u57fa\u4e8e**\u6709\u7a77\u72b6\u6001\u81ea\u52a8\u673a**\uff08finite automaton\uff09\\n\\n\\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\\n\\n\\n\u8fd9\u6b63\u5219\u8868\u8fbe\u5f0f `\u54c8+\u55dd` \u7684\u81ea\u52a8\u673a\uff0c\u8be5\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5339\u914d\u4e00\u8fde\u4e32\u7684\u300e\u54c8\u300f\u7d27\u63a5\u7740\u4e00\u4e2a\u300e\u55dd\u300f\\n\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208140036.png)\\n\\n\\n\u8be5\u81ea\u52a8\u673a\u4ece\u5de6\u5230\u53f3\u904d\u5386\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u81ea\u52a8\u673a\u521d\u59cb\u72b6\u6001\u662f s0\uff0c\u5f53\u9047\u5230\u4e00\u4e2a\u300e\u54c8\u300f\u65f6\uff0c\u5176\u72b6\u6001\u53d8\u4e3a s1\u3002\u6b64\u65f6\uff0c\u5982\u679c\u540e\u9762\u7684\u5b57\u7b26\u8fd8\u662f\u300e\u54c8\u300f\uff0c\u90a3\u4e48\u8be5\u81ea\u52a8\u673a\u7684\u72b6\u6001\u4f1a\u4e0d\u65ad\u5730\u5728 s0 \u548c s1 \u4e4b\u95f4\u8f6c\u6362\uff0c\u76f4\u5230\u9047\u5230\u4e00\u4e2a\u4e0d\u662f\u300e\u54c8\u300f\u7684\u5b57\u7b26\uff0c\u72b6\u6001\u7a33\u5b9a\u5728 s1\u3002\u6b64\u65f6\u5982\u679c\u4e0b\u4e00\u4e2a\u5b57\u7b26\u662f\u300e\u55dd\u300f\uff0c\u5219\u81ea\u52a8\u673a\u53d8\u4e3a\u72b6\u6001 s2\uff0c\u4e5f\u5c31\u662f\u8bf4\u8be5\u81ea\u52a8\u673a\u5339\u914d\u5230\u4e86\u4e00\u4e2a\u6307\u5b9a\u7684\u6587\u672c\uff1b\u5982\u679c\u662f\u5176\u4ed6\u5b57\u7b26\uff0c\u5219\u5339\u914d\u5931\u8d25\uff0c\u56de\u5230 s0\u3002\\n\\n\\n\u6211\u4eec\u5e38\u8bf4\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5230\u4e86\u6587\u672c\uff0c\u5c31\u662f\u5728\u6587\u672c\u4e2d\u5bfb\u627e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u8ba9\u8be5\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u81ea\u52a8\u673a\u4ece\u8d77\u59cb\u72b6\u6001\u8f6c\u79fb\u5230\u7ed3\u675f\u72b6\u6001\u3002\u5982\u679c\u6211\u4eec\u8981\u89e3\u51b3\u6587\u7ae0\u5f00\u5934\u63d0\u51fa\u7684\u95ee\u9898\uff0c\u5c31\u8981\u8bbe\u8ba1\u51fa\u5408\u9002\u7684\u81ea\u52a8\u673a\u3002\\n\\n\\n## \u8bbe\u8ba1\u81ea\u52a8\u673a\\n\\n\\n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u624b\u52a8\u8ba1\u7b97\u9664\u6cd5\u7684\u8fc7\u7a0b\\n\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208140046.png)\\n\\n\\n\u4ed4\u7ec6\u89c2\u5bdf\u4e0a\u56fe\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6570\u88ab 3 \u9664\uff0c\u4f59\u6570\u53ea\u6709 0\uff0c1\uff0c2 \u4e09\u79cd\u60c5\u51b5\uff0c\u6b64\u65f6\u88ab\u9664\u6570\u7684\u4e0b\u4e00\u4f4d\u53ef\u4ee5\u662f 0 ~ 9 \u7684\u4efb\u610f\u4e00\u503c\uff0c\u4e5f\u5373\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u8303\u56f4\u53ea\u6709 00 ~ 09\uff0c1029\u3002\\n\\n\\n\u6b64\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u81ea\u52a8\u673a\u7684\u96cf\u5f62\uff0c\u5b83\u5305\u62ec A\uff0cB\uff0cC \u4e09\u4e2a\u72b6\u6001\\n\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208140053.png)\\n\\n\\n\u7531\u4e8e\u6211\u4eec\u7684\u89c4\u5219\u53ea\u6709 00 ~ 09\uff0c1029\uff0c\u5171 30 \u79cd\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd9\u4e9b\u89c4\u5219\u6dfb\u52a0\u5230\u81ea\u52a8\u673a\u4e2d\u3002\u8fd9\u4e2a\u81ea\u52a8\u673a\u5f00\u59cb\u72b6\u6001\u548c\u7ed3\u675f\u72b6\u6001\u90fd\u662f A\\n\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208140100.png)\\n\\n\\n\u5bf9\u4e8e\u524d\u9762\u7684\u793a\u4f8b 522/3 ,\u5728\u72b6\u6001\u673a\u4e2d\u7ecf\u8fc7\u7684\u8def\u5f84\u5982\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u6700\u7ec8\u8fd4\u56de\u5230\u4e86\u72b6\u6001 A\uff0c\u8868\u793a 522 \u53ef\u4ee5\u88ab 3 \u6574\u9664\u3002\\n\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208140106.png)\\n\\n\\n## \u72b6\u6001\u673a\u8f6c\u6b63\u5219\u8868\u8fbe\u5f0f\\n\\n\\n\u4e0b\u9762\u6765\u770b\u770b\u5982\u4f55\u5c06\u6211\u4eec\u8bbe\u8ba1\u51fa\u7684\u8fd9\u4e2a\u72b6\u6001\u673a\u8f6c\u6362\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u7531\u4e8e\u6211\u4eec\u7684\u72b6\u6001\u673a\u8d77\u59cb\u72b6\u6001\u548c\u7ec8\u6b62\u72b6\u6001\u90fd\u4e3a A\uff0c\u5982\u679c\u5728\u5f00\u59cb\u72b6\u6001\u4ec0\u4e48\u4e8b\u90fd\u4e0d\u505a\uff0c\u5b9e\u9645\u5df2\u7ecf\u5904\u4e8e\u7ec8\u6b62\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u7684\u72b6\u6001\u673a\u53ef\u4ee5\u5339\u914d\u5230\u7a7a\u5b57\u7b26\u4e32\u3002\u5728\u4e0b\u9762\u7684\u63a8\u5bfc\u4e2d\uff0c\u6211\u5c06\u7528\u300e\xd8\u300f\u8868\u793a\u7a7a\u5b57\u7b26\u4e32\u3002\\n\\n\\n\u6211\u4eec\u5047\u5b9a A \u662f\u4e00\u4e2a\u53ef\u4ee5\u8ba9\u72b6\u6001\u673a\u7531\u7ec8\u6b62\u72b6\u6001\u8f6c\u6362\u5230\u72b6\u6001 A \u7684\u5b57\u7b26\u4e32\uff0cBC \u7c7b\u4f3c\u3002\u6839\u636e\u72b6\u6001\u673a\u53ef\u4ee5\u5217\u51fa\u5982\u4e0b\u4e09\u4e2a\u65b9\u7a0b\\n\\n\\n```\\nA = A[0369] | B[258] | C[147] | \xd8\\nB = A[147] | B[0369] | C[258]\\nC = A[258] | B[147] | C[0369]\\n```\\n\\n\\n\u8981\u4ece\u8fd9\u4e09\u4e2a\u65b9\u7a0b\u63a8\u5bfc\u51fa\u6211\u4eec\u60f3\u8981\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u4e0b\u9762\u4e24\u4e2a\u6280\u5de7\\n\\n\\n**\u6280\u5de71**\uff1a\u6839\u636e\u6b63\u5219\u8bed\u8a00\u7684\u7279\u6027\u7ed9\u5b9a\u5982\u4e0b\u5f62\u5f0f\u7684\u65b9\u7a0b\uff0c\u548c\u5b83\u7684\u89e3\uff0c\u4ee5\u4e0b\u6bcf\u4e2a\u5b57\u6bcd\u5747\u4ee3\u8868\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\\n\\n\\n```\\n   L = LU | V\\n\u89e3\uff1aL = VU*\\n```\\n\\n\\n\u6211\u4eec\u5c06\u89e3\u5e26\u5165\u539f\u65b9\u7a0b\u53ef\u9a8c\u8bc1\u5b83\u7684\u6b63\u786e\u6027\\n\\n\\n```\\nVU* = VU*U | V\\nVU* = VU+ | V\\n```\\n\\n\\n**\u6280\u5de72**\uff1a\u5206\u914d\u5f8b\\n\\n\\n```\\n(U | V) A = UA | VA\\n```\\n\\n\\n\u6839\u636e\u8fd9\u4e24\u4e2a\u6280\u5de7\uff0c\u63a8\u5bfc\u8fc7\u7a0b\u5982\u4e0b\uff0c\u4f60\u53ef\u4ee5\u6682\u65f6\u8df3\u8fc7\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\\n\\n\\n```\\n\u4e0a\u8ff0\u65b9\u7a0b\u53ef\u4ee5\u4fee\u6539\u4e3a\uff1a\\n  A = (\xd8 | B[258] | C[147])[0369]*  (1)\\n  B = (A[147] | C[258])[0369]*      (2)\\n  C = (A[258] | B[147])[0369]*      (3)\\n\\n\u5c06 (3) \u4ee3\u5165 (1)(2) \u5f97\\n  A = (\xd8 | B[258] | (A[258] | B[147])[0369]*[147])[0369]*  (4)\\n  B = (A[147] | (A[258] | B[147])[0369]*[258])[0369]*      (5)\\n\\n\u7528\u5206\u914d\u5f8b\u5c55\u5f00 (5) \u4e2d\u7684\u7ad6\u7ebf\u5f97\u5230\\n  B = A[147][0369]* | A[258][0369]*[258][0369]* | B[147][0369]*[258][0369]*\\n    = B[147][0369]*[258][0369]* | A[147][0369]* | A[258][0369]*[258][0369]*\\n    = (A[147][0369]* | A[258][0369]*[258][0369]*)([147][0369]*[258][0369]*)*\\n    = A[147][0369]*([147][0369]*[258][0369]*)* | A[258][0369]*[258][0369]*([147][0369]*[258][0369]*)*\\n\\n\u628a\u5b83\u4ee3\u5165 (4) \u5f97\\n  A = (\xd8 | B[258] | (A[258] | B[147])[0369]*[147])[0369]*\\n    = [0369]* | B[258][0369]* | (A[258] | B[147])[0369]*[147][0369]*\\n    = [0369] | B[258][0369]* | A[258][0369]*[147][0369]* | B[147][0369]*[147][0369]*  \\n    = [0369]* \\n      | B[258][0369]*\\n      | A[258][0369]*[147][0369]*\\n      | B[147][0369]*[147][0369]* \\n    = [0369]* \\n      | A[147][0369]*([147][0369]*[258][0369]*)*[258][0369]*\\n      | A[258][0369]*[258][0369]*([147][0369]*[258][0369]*)*[258][0369]*\\n      | A[258][0369]*[147][0369]*\\n      | A[147][0369]*([147][0369]*[258][0369]*)*[147][0369]*[147][0369]* \\n      | A[258][0369]*[258][0369]*([147][0369]*[258][0369]*)*[147][0369]*[147][0369]* \\n    = A[...] | [0369]*\\n    = [0369]* [...]*\\n    = [0369]* (\\n                    [147][0369]*([147][0369]*[258][0369]*)*[258][0369]*\\n      | [258][0369]*[258][0369]*([147][0369]*[258][0369]*)*[258][0369]*\\n      |             [147][0369]*([147][0369]*[258][0369]*)*[147][0369]*[147][0369]* \\n      | [258][0369]*[258][0369]*([147][0369]*[258][0369]*)*[147][0369]*[147][0369]*\\n      | [258][0369]*[147][0369]* )*\\n    = [0369]* (\\n        ([147][0369]* | [258][0369]*[258][0369]*)\\n        ([147][0369]*[258][0369]*)*\\n        ([258][0369]* | [147][0369]*[147][0369]*)\\n      | [258][0369]*[147][0369]*\\n      )*\\n```\\n\\n\\n\u4ee5\u4e0a\u5c31\u662f\u6211\u4eec\u5f97\u5230\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u53bb\u6389\u7ed3\u679c\u4e2d\u7684\u6362\u884c\u4e0e\u7a7a\u683c\uff0c\u7528 `(?:)` \u6d88\u53bb\u4e0d\u5fc5\u8981\u7684\u5b50\u7ec4\uff0c\u518d\u52a0\u4e0a\u65ad\u8a00 `(?<!\\\\d)` \u4e0e `(?!\\\\d)` \u786e\u4fdd\u5339\u914d\u6574\u4e2a\u6570\u5b57\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a\\n\\n\\n```\\n(?<!\\\\d)[0369]*(?:(?:[147][0369]*|[258][0369]*[258][0369]*)(?:[147][0369]*[258][0369]*)*(?:[258][0369]*|[147][0369]*[147][0369]*)|[258][0369]*[147][0369]*)*(?!\\\\d)\\n```\\n\\n\\n\u8fd9\u662f\u8be5\u6b63\u5219\u8868\u8fbe\u5f0f\u771f\u6b63\u7684\u81ea\u52a8\u673a\uff0c\u8be5\u81ea\u52a8\u673a\u5c06\u5f00\u59cb\u72b6\u6001\u4e0e\u7ed3\u675f\u72b6\u6001\u533a\u5206\u5f00\u4e86\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208140824.jpeg)\\n\\n\u6709\u70b9\u513f\u590d\u6742\uff0c\u4f46\u662f\u6211\u4eec\u77e5\u9053 3 \u7684\u500d\u6570\u6709\u4e00\u4e2a\u7279\u6027\uff1a\u5982\u679c\u4e00\u4e2a\u6570\u53ef\u4ee5\u88ab 3 \u6574\u9664\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5404\u4f4d\u4e4b\u548c\u4e5f\u80fd\u88ab 3 \u6574\u9664\uff0c\u53cd\u4e4b\u4e5f\u6210\u7acb\u3002\u6211\u4eec\u5728\u5404\u4f4d\u6570\u4e2d\u5254\u9664\u300e0\uff0c3\uff0c6\uff0c9\u300f\u8fd9\u4e9b\u672c\u8eab\u5c31\u662f 3 \u7684\u500d\u6570\u7684\u5143\u7d20\uff0c\u5c06\u5269\u4e0b\u5143\u7d20\u7684\u52a0\u548c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u6211\u4eec\u7684\u5224\u65ad\u3002\u5c31\u662f\u8bf4\u6b63\u5219\u4e2d\u7684 `[0369]*` \u5b9e\u9645\u4e0a\u5bf9\u7406\u6e05\u8be5\u6b63\u5219\u8868\u8fbe\u5f0f\u6ca1\u6709\u5e2e\u52a9\uff0c\u6211\u4eec\u6682\u65f6\u5ffd\u7565\u6b63\u5219\u4e2d\u6240\u6709\u7684 `[0369]*` \uff0c\u5f97\u5230\u5982\u4e0b\u72b6\u6001\u673a\\n\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208140122.png)\\n\\n\\n\u6211\u5c06\u8be5\u72b6\u6001\u673a\u4e0e\u6211\u4eec\u5f00\u5934\u6240\u8bbe\u8ba1\u7684\u72b6\u6001\u673a\u5bf9\u5e94\u7684\u72b6\u6001\u6807\u8bb0\u5728\u4e86\u56fe\u50cf\u4e0a\uff0c\u4ee5\u4fbf\u4e8e\u4f60\u7406\u89e3\u6211\u4eec\u63a8\u5bfc\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\\n\\n\\n## \u66f4\u4e00\u822c\u7684\u60c5\u51b5\\n\\n\\n\u5982\u548c\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5341\u8fdb\u5236\u4e0b\u4efb\u610f\u4e00\u4e2a\u6574\u6570\u7684\u500d\u6570\u5462\uff1f\\n\\n\\n\u5b9e\u9645\u4e0a\u524d\u9762\u8bb2\u8ff0\u7684\u601d\u8def\u53ef\u4ee5\u7528\u4e8e\u5339\u914d\u4efb\u4e00\u4e2a\u6574\u6570 n \u7684\u500d\u6570\uff0c\u6211\u4eec\u5c31\u9700\u8981\u6784\u9020\u4e00\u4e2a\u6709 n \u4e2a\u72b6\u6001\u7684\u81ea\u52a8\u673a\\n\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208140128.png)\\n\\n\\n\u5728\u8fd9\u4e2a\u72b6\u6001\u673a\u4e2d\uff0c\u8d77\u59cb\u72b6\u6001\u548c\u7ed3\u675f\u72b6\u6001\u90fd\u662f\u300eq0\u300f\uff0c\u7b2c k \u4e2a\u72b6\u6001\u300eqk\u300f\u4ee3\u8868\u5f53\u524d\u8bfb\u5165\u7684\u6570\u53ef\u4ee5\u88ab n \u9664\u4f59 k\u3002\u6211\u4eec\u5c06\u624b\u7b97\u9664\u6cd5\u6269\u5c55\u5230\u4e00\u822c\u5f62\u5f0f\uff1a\\n\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208140132.png)\\n\\n\\n\u524d\u9762\u8ba8\u8bba\u8fc7 m \u7684\u8303\u56f4\u662f [ 0 - 9 ]\uff0c\u6613\u5f97\u901a\u8fc7\u5982\u4e0b\u7684\u516c\u5f0f\u5373\u53ef\u6784\u9020\u4e00\u6761\u4ece\u300eqk\u300f\u5230\u300eqr\u300f\u7684\u8f6c\u79fb\u8fb9\\n\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208140137.png)\\n\\n\\n\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u72b6\u6001\u300eqk\u300f\u548c m \u7684\u7ec4\u5408\u90fd\u7528\u8fd9\u4e2a\u516c\u5f0f\u8ba1\u7b97\u4e00\u904d\uff0c\u8fd9\u6837\u624d\u53ef\u4ee5\u6c42\u5f97\u6240\u6709\u7684\u8f6c\u79fb\u8fb9\uff0c\u5de5\u4f5c\u91cf\u7b49\u4e8e\\n\\n\\n![](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208140141.png)\\n\\n\\n\u5f53\u7136\u5b9e\u9645\u7f16\u7a0b\u4e2d\u6211\u4eec\u5e76\u4e0d\u4f1a\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u5339\u914d\u67d0\u4e00\u4e2a\u6570\u7684\u500d\u6570\uff0c\u8fd9\u91cc\u63a2\u8ba8\u8fd9\u4e00\u95ee\u9898\u4ec5\u7528\u4e8e\u62d3\u5c55\u601d\u8def\u3002\\n\\n\\n> \u6b63\u5219\u8868\u8fbe\u5f0f\u5982\u4f55\u5339\u914d 3 \u7684\u500d\u6570\uff1f - Belleve\u7684\u56de\u7b54 - \u77e5\u4e4e [https://www.zhihu.com/question/24824487/answer/29109747](https://www.zhihu.com/question/24824487/answer/29109747)"},{"id":"multi-cursor-feature-in-vs-code","metadata":{"permalink":"/blog/multi-cursor-feature-in-vs-code","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-16-multi-cursor-feature-in-vs-code/index.md","source":"@site/blog/2021-02-16-multi-cursor-feature-in-vs-code/index.md","title":"VsCode \u591a\u5149\u6807\u7279\u6027","description":"\u4f7f\u7528 VsCode \u6216\u8005\u5176\u4ed6\u7f16\u8f91\u5668\u7684\u65f6\u5019\uff0c\u7ecf\u5e38\u4f1a\u78b0\u5230\u5982\u4e0b\u573a\u666f:","date":"2021-02-16T00:00:00.000Z","formattedDate":"2021\u5e742\u670816\u65e5","tags":[{"label":"\u6548\u7387","permalink":"/blog/tags/\u6548\u7387"}],"readingTime":2.485,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"multi-cursor-feature-in-vs-code","title":"VsCode \u591a\u5149\u6807\u7279\u6027","authors":["solidSpoon"],"tags":["\u6548\u7387"]},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d 3 \u7684\u500d\u6570","permalink":"/blog/matching-multiples-of-3-with-regular-expressions"},"nextItem":{"title":"\u4e00\u51fa\u597d\u620f\u6709\u611f","permalink":"/blog/reflections-on-movie-the-island"}},"content":"\u4f7f\u7528 VsCode \u6216\u8005\u5176\u4ed6\u7f16\u8f91\u5668\u7684\u65f6\u5019\uff0c\u7ecf\u5e38\u4f1a\u78b0\u5230\u5982\u4e0b\u573a\u666f:\\n\\n```\\n.foo {\\n  padding: 5;\\n  margin: 5;\\n  font-size: 5;\\n}\\n```\\n\\n\u5982\u4f55\u5c06\u4e0a\u9762\u7684\u4e09\u4e2a `5` \u6539\u6210 `5px` \uff1f\u7b54\u6848\u662f\u521b\u5efa\u591a\u4e2a\u5149\u6807\uff0c\u4ee5\u4e0b\u7ed9\u51fa\u4e86\u521b\u5efa\u591a\u5149\u6807\u7684\u51e0\u79cd\u65b9\u6cd5\uff1a\\n\\n## \u521b\u5efa\u591a\u4e2a\u5149\u6807\\n\\n### 1. \u4f7f\u7528\u9f20\u6807\\n\\n1. \u5148\u5c06\u5c06\u5149\u6807\u7f6e\u4e8e\u7b2c\u4e00\u4e2a\u300e5\u300f\u4e4b\u540e\\n\\n2. \u6309\u4f4f\u952e\u76d8\u4e0a\u7684 \u300ealt \u300f,\u7136\u540e\u9f20\u6807\u70b9\u5728\u7b2c\u4e8c\u4e2a\u201c5\u201d\u4e4b\u540e\u3002\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u5149\u6807\u5c31\u521b\u5efa\u597d\u4e86\u3002\\n\\n3. \u540c\u6837\u7684\u65b9\u6cd5\u521b\u5efa\u7b2c\u4e09\u4e2a\u5149\u6807\\n\\n![1](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200701163849.gif)\\n\\n### 2. \u4f7f\u7528\u952e\u76d8\\n\\n1. \u5c06\u5149\u6807\u7f6e\u4e8e\u7b2c\u4e00\u4e2a\u300e5\u300f\u7684\u90a3\u4e00\u884c\\n2. \u7136\u540e\u6309\u4e0b\u300eCtrl + Alt + \u4e0b\u65b9\u5411\u952e\u300f\u5728\u5f53\u524d\u5149\u6807\u4e0b\u521b\u5efa\u65b0\u7684\u5149\u6807\uff0c\u540c\u6837\u7684\u65b9\u6cd5\u521b\u5efa\u7684\u4e09\u4e2a\u5149\u6807\\n3. \u6309\u4e0b\u300eFn + \u53f3\u65b9\u5411\u952e\u300f\u5373\u53ef\u5207\u6362\u5230\u884c\u5c3e\uff08\u5373\u300eEnd\u300f\u952e\uff09\\n4. \u6b64\u65f6\uff0c\u6309\u4e0b\u300e\u53f3\u65b9\u5411\u952e\u300f\uff0c\u4e09\u4e2a\u5149\u6807\u90fd\u5230\u8fbe\u4e86\u6307\u5b9a\u4f4d\u7f6e\\n\\n\u6ce8\uff1a\u60f3\u8981\u4ee5\u5355\u8bcd\u4e3a\u5355\u4f4d\u8df3\u8f6c\u5149\u6807\uff0c\u53ea\u9700\u6309\u4e0b\u300eCtrl + \u65b9\u5411\u952e\u300f\\n\\n![2](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200701170211.gif)\\n\\n## \u76f8\u5173\u5feb\u6377\u952e\\n\\n\u7f16\u8f91\u5668\u4e2d\u8fd8\u6709\u5f88\u591a\u5feb\u6377\u952e\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5730\u521b\u5efa\u591a\u5149\u6807\\n\\n### 1. \u300eCtrl + D\u300f\\n\\n\u8fd9\u4e2a\u547d\u4ee4\u7684\u4f5c\u7528\u662f\uff0c\u7b2c\u4e00\u6b21\u6309\u4e0b\u65f6\uff0c\u5b83\u4f1a\u9009\u4e2d\u5149\u6807\u9644\u8fd1\u7684\u5355\u8bcd\uff1b\u7b2c\u4e8c\u6b21\u6309\u4e0b\u65f6\uff0c\u5b83\u4f1a\u627e\u5230\u8fd9\u4e2a\u5355\u8bcd\u7b2c\u4e8c\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5149\u6807\uff0c\u5e76\u4e14\u9009\u4e2d\u5b83\u3002\\n\\n\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u5149\u6807\u7f6e\u4e8e `5` \u9644\u8fd1\uff0c\u8fde\u7eed\u6309\u4e0b\u4e09\u6b21\u300eCtrl + D\u300f\u5373\u53ef\u9009\u4e2d\u6240\u6709\u7684 `5` \u3002\u6b64\u65f6\u518d\u6309\u4e0b\u300e\u53f3\u65b9\u5411\u952e\u300f\uff0c\u8f93\u5165\u201cpx\u201d\uff0c\u5373\u53ef\u5b8c\u6210\u4efb\u52a1\u3002\\n\\n![3](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200701173116.gif)\\n\\n### 2. \u300eCtrl + Shift + L\u300f\\n\\n\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u9009\u62e9\u6240\u6709\u5339\u914d\u9879\\n\\n1. \u9009\u62e9\u4e00\u4e2a `5`\\n2. \u6309\u4e0b\u300eCtrl + Shift + L\u300f\\n3. \u6309\u4e0b\u300e\u53f3\u65b9\u5411\u952e\u300f\\n\\n![5](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200701174651.gif)\\n\\n### 3. \u300eAlt + Shift + I\u300f\\n\\n1. \u9009\u62e9\u591a\u884c\u4ee3\u7801\\n2. \u7136\u540e\u6309\u4e0b\u300eAlt + Shift + i\u300f\uff0c\u8fd9\u6837\u64cd\u4f5c\u7684\u7ed3\u679c\u662f\uff1a\u6bcf\u4e00\u884c\u7684\u6700\u540e\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5149\u6807\u3002\\n\\n![4](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200701173845.gif)"},{"id":"reflections-on-movie-the-island","metadata":{"permalink":"/blog/reflections-on-movie-the-island","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-16-reflections-on-movie-the-island/index.md","source":"@site/blog/2021-02-16-reflections-on-movie-the-island/index.md","title":"\u4e00\u51fa\u597d\u620f\u6709\u611f","description":"\u300c\u4e00\u51fa\u597d\u620f\u300d\u5176\u5b9e\u5df2\u7ecf\u4e0a\u6620\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u4e4b\u524d\u65e9\u6709\u6240\u8033\u95fb\uff0c\u76f4\u5230\u6700\u8fd1\u6709\u670b\u53cb\u63a8\u8350\uff0c\u6211\u624d\u89c2\u770b\u4e86\u4e00\u4e0b\u3002\u8fd9\u90e8\u5f71\u7247\u662f\u4e00\u90e8\u559c\u5267\uff0c\u5267\u60c5\u96be\u514d\u6709\u6d6e\u5938\u548c\u4e0d\u5408\u7406\u7684\u90e8\u5206\uff0c\u4f46\u5b83\u4ecd\u7136\u503c\u5f97\u6211\u4eec\u601d\u8003\uff0c\u56e0\u4e3a\u5b83\u901a\u8fc7\u4e00\u4e2a\u5728\u8352\u5c9b\u4e2d\u5efa\u7acb\u5c0f\u578b\u793e\u4f1a\u7684\u6545\u4e8b\u53cd\u6620\u4e86\u4eba\u6027\u7684\u672c\u8d28\u3002","date":"2021-02-16T00:00:00.000Z","formattedDate":"2021\u5e742\u670816\u65e5","tags":[],"readingTime":9.84,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"reflections-on-movie-the-island","title":"\u4e00\u51fa\u597d\u620f\u6709\u611f","authors":["solidSpoon"],"tags":[]},"unlisted":false,"prevItem":{"title":"VsCode \u591a\u5149\u6807\u7279\u6027","permalink":"/blog/multi-cursor-feature-in-vs-code"},"nextItem":{"title":"\u5220\u9664\u6216\u4fee\u6539 Windows \u4e2d\u88ab\u5360\u7528\u7684\u6587\u4ef6","permalink":"/blog/removing-or-modifying-occupied-files-in-windows"}},"content":"> \u300c\u4e00\u51fa\u597d\u620f\u300d\u5176\u5b9e\u5df2\u7ecf\u4e0a\u6620\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u4e4b\u524d\u65e9\u6709\u6240\u8033\u95fb\uff0c\u76f4\u5230\u6700\u8fd1\u6709\u670b\u53cb\u63a8\u8350\uff0c\u6211\u624d\u89c2\u770b\u4e86\u4e00\u4e0b\u3002\u8fd9\u90e8\u5f71\u7247\u662f\u4e00\u90e8\u559c\u5267\uff0c\u5267\u60c5\u96be\u514d\u6709\u6d6e\u5938\u548c\u4e0d\u5408\u7406\u7684\u90e8\u5206\uff0c\u4f46\u5b83\u4ecd\u7136\u503c\u5f97\u6211\u4eec\u601d\u8003\uff0c\u56e0\u4e3a\u5b83\u901a\u8fc7\u4e00\u4e2a\u5728\u8352\u5c9b\u4e2d\u5efa\u7acb\u5c0f\u578b\u793e\u4f1a\u7684\u6545\u4e8b\u53cd\u6620\u4e86\u4eba\u6027\u7684\u672c\u8d28\u3002\\n\\n![YiChuHaoXi-1](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201208172713.jpg)\\n\\n\x3c!-- more --\x3e\\n\\n### \u6545\u4e8b\u80cc\u666f\\n\u7535\u5f71\u4e00\u5f00\u59cb\u4fbf\u4ea4\u4ee3\u4e86\u6545\u4e8b\u7684\u80cc\u666f\u2014\u2014\u4e00\u9897\u9668\u77f3\u53ef\u80fd\u4f1a\u649e\u5411\u5730\u7403\uff0c\u4e16\u754c\u53ef\u80fd\u56e0\u6b64\u706d\u4ea1\u3002\u800c\u5f20\u603b\uff08\u4e8e\u548c\u4f1f\u9970\uff09\u516c\u53f8\u7684\u5458\u5de5\u542c\u7531\u4e8e\u53d6\u4e86\u53f2\u6559\u6388\u7684\u8a00\u8f9e\u800c\u5bf9\u6b64\u4e8b\u4e0d\u4ee5\u4e3a\u7136\uff0c\u8fd8\u641e\u8d77\u4e86\u56e2\u5efa\u6d3b\u52a8\u3002\\n\\n\u6211\u4eec\u7684\u4e3b\u89d2\u540d\u5b57\u53eb\u9a6c\u8fdb\uff08\u9ec4\u6e24\u9970\uff09\uff0c\u662f\u4e00\u4e2a\u793e\u4f1a\u5e95\u5c42\u4eba\u7269\u3002\u4ed6\u6ca1\u8f66\u6ca1\u623f\uff0c\u800c\u53c8\u503a\u52a1\u7f20\u8eab\u3002\u9762\u5bf9\u559c\u6b22\u7684\u59d1\u5a18\uff0c\u4ed6\u65e0\u529b\u8868\u767d\u3002\u5728\u516c\u53f8\u56e2\u5efa\u5f53\u5929\uff0c\u4ed6\u50cf\u5f80\u5e38\u4e00\u6837\u4e70\u4e86\u4e00\u5f20\u5f69\u7968\uff0c\u5bc4\u5e0c\u671b\u4e8e\u81ea\u5df1\u80fd\u591f\u4e2d\u5927\u5956\u3002\\n\\n\u516c\u53f8\u7684\u56e2\u5efa\u5c06\u4e00\u8f86\u6c34\u9646\u4e24\u7528\u8f66\u5f00\u5230\u4e86\u6d77\u4e0a\u3002\u5728\u8f66\u4e0a\uff0c\u53f8\u673a\u5c0f\u738b\uff08\u738b\u5b9d\u5f3a\u9970\uff09\u5f97\u5230\u4e86\u4e00\u7b14\u5c0f\u8d39\uff0c\u5f20\u603b\u5ba3\u5e03\u516c\u53f8\u4e0a\u5e02\u5168\u5458\u52a0\u85aa\uff0c\u9a6c\u8fdb\u7531\u4e8e\u53d1\u73b0\u81ea\u5df1\u7684\u5f69\u7968\u4e2d\u5956\u800c\u8f7d\u6b4c\u8f7d\u821e\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u6b22\u4e50\u3002\\n\\n\u4e0d\u5e78\u7684\u662f\uff0c\u4e00\u9635\u6d77\u5578\u5c06\u4ed6\u4eec\u5e26\u5230\u4e86\u4e00\u4e2a\u8352\u5c9b\u3002\u5728\u8fd9\u4e2a\u8d44\u6e90\u6709\u9650\u7684\u5c0f\u5c9b\u4e0a\uff0c\u8fd9\u4e09\u5341\u591a\u4e2a\u4eba\u7ec4\u6210\u4e86\u4e00\u4e2a\u5c0f\u793e\u4f1a\uff0c\u5f00\u59cb\u4e86\u4e00\u6bb5\u521b\u5efa\u6587\u660e\u7684\u751f\u6d3b\u3002\\n\\n### \u56db\u79cd\u793e\u4f1a\u9636\u6bb5\\n#### 1. \u96c6\u6743\u9636\u6bb5\\n\u4f5c\u4e3a\u4eba\u7c7b\u793e\u4f1a\u7684\u7b2c\u4e00\u9636\u6bb5\uff0c\u4eba\u4eec\u7684\u9996\u8981\u4efb\u52a1\u662f\u751f\u5b58\u3002\u53f8\u673a\u5c0f\u738b\u4f5c\u4e3a\u5c9b\u4e0a\u552f\u4e00\u4e00\u4e2a\u6709\u751f\u5b58\u7ecf\u9a8c\u7684\u4eba\uff0c\u6559\u4f1a\u4e86\u5927\u5bb6\u6458\u679c\u5b50\u6293\u9c7c\uff0c\u8fd8\u627e\u5230\u4e86\u4e00\u4e2a\u5c71\u6d1e\u6765\u8ba9\u5927\u5bb6\u907f\u98ce\u96e8\uff0c\u4ed6\u6709\u80fd\u529b\u89e3\u51b3\u5927\u5bb6\u7684\u6e29\u9971\u95ee\u9898\uff0c\u81ea\u7136\u88ab\u5949\u4e3a\u4e86\u738b\uff0c\u4e8e\u662f\u5c0f\u5c9b\u4e0a\u7684\u793e\u4f1a\u4fbf\u5f62\u6210\u4e86\u96c6\u6743\u3002\u8fd9\u4e00\u5236\u5ea6\u5728\u521d\u671f\u89e3\u51b3\u4e86\u4eba\u4eec\u7684\u6e29\u9971\u95ee\u9898\uff0c\u968f\u7740\u8001\u6f58\uff08\u738b\u8fc5\u9970\uff09\u53f2\u6559\u6388\u7b49\u4eba\u7684\u963f\u8c00\u5949\u627f\uff0c\u5c0f\u738b\u5f00\u59cb\u4e0d\u53c2\u4e0e\u52b3\u52a8\uff0c\u4e00\u4e2a\u4eba\u72ec\u4eab\u7f8e\u8272\uff0c\u6709\u4eba\u7a0d\u6709\u4e0d\u6ee1\u4fbf\u62f3\u811a\u76f8\u5411\uff0c\u53d8\u6210\u4e86\u4e00\u4e2a\u66b4\u623e\u6210\u6027\u7684\u300c\u7334\u738b\u300d\u3002\\n\\n#### 2. \u8d44\u672c\u9636\u6bb5\\n\u6e29\u9971\u7684\u95ee\u9898\u5f97\u5230\u4e86\u89e3\u51b3\uff0c\u5c31\u6709\u4e00\u90e8\u5206\u4eba\u4e0d\u6ee1\u8db3\u4e8e\u7334\u738b\u7684\u7edf\u6cbb\uff0c\u5f20\u603b\u4f5c\u4e3a\u516c\u53f8\u7684\u8001\u603b\uff0c\u5f53\u7136\u5bf9\u8fd9\u65b9\u9762\u64c5\u957f\u3002\u4ed6\u5f00\u59cb\u5bf9\u5927\u5bb6\u8fdb\u884c\u6d17\u8111\uff0c\u4e00\u672c\u6b63\u7ecf\u7684\u753b\u5927\u997c\u3002\u867d\u7136\u6b64\u65f6\u5f20\u603b\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u4f46\u90a3\u4e9b\u4e0d\u6ee1\u4e8e\u751f\u6d3b\u73b0\u72b6\u7684\u4eba\u4ecd\u7136\u9009\u62e9\u4e86\u4f9d\u9644\u4ed6\u3002\u5e78\u8fd0\u7684\u662f\u4ed6\u4eec\u53d1\u73b0\u534a\u622a\u98a0\u5012\u7684\u8f6e\u8239\uff0c\u91cc\u9762\u7269\u8d44\u4e30\u5bcc\uff0c\u8fd9\u8ba9\u5927\u5bb6\u8fc7\u4e0a\u4e86\u548c\u5e73\u7684\u751f\u6d3b\u3002\u6df1\u8c19\u8d44\u672c\u8fd0\u4f5c\u4e4b\u9053\u7684\u5f20\u603b\u5f00\u59cb\u901a\u8fc7\u63a7\u5236\u8d27\u5e01\u7684\u6d41\u901a\u8ba9\u81ea\u5df1\u4e0d\u52b3\u800c\u83b7\u3002\u4eba\u4eec\u7531\u6b64\u8fdb\u5316\u4e3a\u4e86\u4ee5\u8d44\u672c\u4e3a\u4e2d\u5fc3\u7684\u9636\u6bb5\uff0c\u4e0b\u5c42\u7684\u4eba\u6c11\u6253\u5de5\u4e3a\u751f\uff0c\u4e0a\u5c42\u7684\u4eba\u6c11\u900d\u9065\u81ea\u5728\u3002\\n\\n#### 3. \u6211\u6258\u90a6\u9636\u6bb5\\n\u4e4c\u6258\u90a6\u662f\u4eba\u7c7b\u601d\u60f3\u610f\u8bc6\u4e2d\u6700\u7f8e\u597d\u7684\u793e\u4f1a\u3002\u5f69\u7968\u5927\u5956\u64e6\u80a9\u800c\u8fc7\u8ba9\u9a6c\u8fdb\u56de\u5230\u4e86\u73b0\u5b9e\uff0c\u4ed6\u901a\u8fc7\u4e0e\u81ea\u5df1\u7684\u5929\u624d\u5c0f\u5f1f\u9a6c\u5c0f\u5174\u5408\u4f5c\uff0c\u83b7\u5f97\u4e86\u66f4\u9ad8\u7ea7\u7684\u5de5\u5177\u3002\u901a\u8fc7\u5f15\u8bf1\u539f\u59cb\u90e8\u843d\u548c\u8d44\u672c\u90e8\u843d\u76f8\u4e89\uff0c\u9a6c\u8fdb\u6e14\u7fc1\u5f97\u5229\u822c\u7684\u7ad9\u5728\u4e86\u5236\u9ad8\u70b9\uff0c\u7ee7\u7eed\u4e3a\u53ef\u601c\u7684\u4eba\u4eec\u753b\u7740\u5927\u997c\uff0c\u544a\u8bc9\u4eba\u4eec\u81ea\u5df1\u624d\u6709\u80fd\u529b\u5e26\u9886\u5927\u5bb6\u56de\u5230\u5916\u9762\u7684\u4e16\u754c\u3002\u4e8c\u9a6c\u901a\u8fc7\u5148\u8fdb\u7684\u6280\u672f\u5e26\u9886\u4eba\u4eec\u8fc7\u4e0a\u4e86\u7cbe\u795e\u4e0e\u7269\u8d28\u90fd\u5bcc\u8db3\u7684\u751f\u6d3b\u3002\u8fd9\u91cc\u7684\u4eba\u4eec\u7a7f\u4e0a\u4e86\u7cbe\u795e\u75c5\u75c5\u4eba\u4e00\u822c\u7684\u8863\u670d\uff0c\u5bf9\u9a6c\u8fdb\u611f\u6069\uff0c\u5bf9\u9a6c\u5c0f\u5174\u611f\u6069\uff0c\u5bf9\u5c0f\u5c9b\u7684\u751f\u6d3b\u611f\u6069\u3002\u8fd9\u4f3c\u4e4e\u610f\u5473\u7740\u5c9b\u4e0a\u7684\u4eba\u5168\u90e8\u90fd\u662f\u75af\u5b50\uff0c\u4f17\u4eba\u7686\u6d3b\u5728\u9a6c\u8fdb\u4e8c\u4eba\u7f16\u7ec7\u7684\u4eba\u4eba\u5e73\u7b49\u3001\u900d\u9065\u81ea\u5728\u7f8e\u597d\u5e7b\u8c61\u91cc\u3002\u5373\u4f7f\u66fe\u7ecf\u7684\u7334\u738b\uff0c\u8d44\u672c\u5bb6\u4e5f\u6ca1\u80fd\u907f\u514d\u3002\\n\\n### \u9ed1\u5316\u7684\u4e16\u754c\\n\u5c0f\u5174\u7684\u9ed1\u5316\u662f\u4ece\u53d1\u73b0\u53ef\u4ee5\u633d\u6551\u5927\u5bb6\u7684\u6e38\u8f6e\u7684\u65f6\u5019\u5f00\u59cb\u3002\u5bb3\u6015\u5931\u53bb\u4e00\u5207\u7684\u9a6c\u5c0f\u5174\u5bc6\u8c0b\u4e86\u4e00\u4e2a\u5f25\u5929\u5927\u8c0e\uff0c\u4ed6\u6b3a\u9a97\u5927\u5bb6\u6e38\u8f6e\u662f\u5047\u8c61\uff0c\u5229\u7528\u5927\u5bb6\u5bf9\u4eb2\u4eba\u7684\u601d\u5ff5\u83b7\u5f97\u4e86\u5916\u9762\u7684\u4e16\u754c\u7684\u4f17\u591a\u8d22\u4ea7\uff0c\u5e76\u8ba1\u5212\u629b\u5f03\u5927\u5bb6\u548c\u9a6c\u8fdb\u4e00\u8d77\u9003\u79bb\u5c0f\u5c9b\u3002\u65e0\u77e5\u7684\u4f17\u4eba\u4f9d\u65e7\u5c06\u4e8c\u9a6c\u5949\u4e3a\u80fd\u591f\u5e26\u9886\u5927\u5bb6\u9003\u51fa\u53bb\u7684\u9886\u8896\uff0c\u4f9d\u65e7\u6bcf\u65e5\u6b22\u58f0\u7b11\u8bed\uff0c\u8f7d\u6b4c\u8f7d\u821e\u3002\\n\\n### \u9003\u79bb\\n\u5e78\u8fd0\u7684\u662f\uff0c\u6e05\u9192\u7684\u9a6c\u8fdb\u5e76\u6ca1\u6709\u542c\u4ece\u5c0f\u5174\u7684\u9634\u8c0b\u3002\u4ed6\u8868\u9762\u4e0a\u7b54\u5e94\u4e86\u5c0f\u5174\uff0c\u5b9e\u5219\u4e0e\u5c0f\u738b\u4e00\u8d77\uff0c\u5728\u6e38\u8f6e\u518d\u6b21\u5230\u6765\u7684\u65f6\u5019\u5236\u9020\u6df7\u4e71\uff0c\u70b9\u71c3\u4e86\u5e87\u62a4\u6240\uff0c\u8ba9\u5927\u5bb6\u4e58\u5750\u5927\u8239\u79bb\u5f00\u4e86\u5c0f\u5c9b\u3002\\n\\n### \u5176\u4ed6\u7684\u4e00\u4e9b\u9690\u55bb\\n#### 1. \u7eff\u8272\u7684\u8725\u8734\\n\u51b2\u6d6a\u9e2d\u88ab\u6d77\u6d6a\u6380\u5728\u8352\u5c9b\u4e0a\u65f6\u5019\uff0c\u9a6c\u8fdb\u4ee5\u7eff\u8272\u8725\u8734\u7684\u89c6\u91ce\u9192\u6765\uff0c\u610f\u8bc6\u5230\u6d41\u843d\u73b0\u72b6\u3002\u5f20\u603b\u8bf4\u51fa\uff1a\u201c\u6709\u94b1\u8fd8\u6015\u6ca1\u8239\u3002\u201d\u7684\u65f6\u5019\uff0c\u4e0d\u8fdc\u5904\u7684\u8725\u8734\u518d\u4e00\u6b21\u51fa\u73b0\u3002\u539f\u59cb\u90e8\u843d\u4e0e\u8d44\u672c\u90e8\u843d\u5175\u620e\u76f8\u89c1\uff0c\u7eff\u8272\u8725\u8734\u7684\u773c\u795e\u91cc\u4f3c\u4e4e\u5145\u6ee1\u4e86\u5bf9\u4f17\u4eba\u7684\u5632\u7b11\u3002\u4e09\u6b21\u6743\u5229\u90e8\u843d\u66f4\u8fed\u4e4b\u540e\uff0c\u4f17\u4eba\u5728\u7834\u8239\u7bdd\u706b\u524d\u72c2\u6b22\uff0c\u6240\u8c13\u6b4c\u821e\u5347\u5e73\u7684\u5e73\u5b89\u76db\u4e16\uff0c\u5728\u7eff\u8272\u8725\u8734\u7684\u89c6\u754c\u53d8\u5f97\u53c8\u7578\u5f62\u53c8\u6a21\u7cca\u3002\u9a6c\u8fdb\u5d29\u6e83\u88ab\u4f17\u4eba\u5b64\u7acb\u7684\u65f6\u5019\uff0c\u6d77\u8fb9\u4e71\u77f3\u6ee9\u5b64\u5750\u7740\u4ed6\u548c\u90a3\u53ea\u7eff\u8272\u8725\u8734\uff0c\u662f\u5728\u5206\u4e0d\u6e05\u73b0\u5b9e\u548c\u610f\u8bc6\u4e2d\u4ec5\u5b58\u7684\u7406\u667a\uff0c\u5f53\u5c0f\u738b\u51fa\u73b0\u540e\uff0c\u518d\u4e0d\u89c1\u7eff\u8272\u8725\u8734\u8eab\u5f71\u3002\u5f69\u86cb\u4e2d\u6f58\u4e3b\u4efb\u865a\u5934\u5df4\u8111\u7684\u8bb2\u8bdd\u65f6\u5019\uff0c\u8725\u8734\u5e26\u8d70\u4e86\u753b\u9762\u3002\\n\\n\u5168\u7bc7\u51fa\u73b0\u4e86\u592a\u591a\u6b21\u7eff\u8272\u8725\u8734\u7684\u955c\u5934\uff0c\u5b83\u5c31\u50cf\u662f\u4ee3\u8868\u4e86\u4e00\u79cd\u6e05\u6670\u6b63\u786e\u7684\u4e0a\u5e1d\u89c6\u89d2\uff0c\u5728\u4efb\u4f55\u753b\u9762\u4e2d\u90fd\u663e\u5f97\u7279\u522b\u7a81\u5140\u3002\\n\\n#### 2. \u73b0\u5b9e\u4e16\u754c\u6e21\u8f6e\u7684\u9e23\u7b1b\u58f0\u3002\\n\u7535\u5f71\u4e2d\u7684\u8352\u5c9b\u573a\u666f\u4e71\u77f3\u56f4\u7ed5\uff0c\u68ee\u6797\u7e41\u8302\uff0c\u8fd9\u4e2a\u58f0\u97f3\u6bcf\u6b21\u51fa\u73b0\uff0c\u90fd\u4f34\u968f\u7740\u591c\u665a\u3001\u5927\u98ce\u3001\u96fe\u6c14\u3001\u68ee\u6797\u7b49\u6e32\u67d3\u6050\u6016\u7684\u573a\u666f\u610f\u8c61\uff0c\u51fa\u73b0\u591a\u6b21\u3002\u5728\u8fd9\u671f\u95f4\uff0c\u4eba\u4eec\u5728\u5c9b\u4e0a\u5148\u540e\u7ecf\u5386\u4e86\u6050\u60e7\uff0c\u751f\u673a\uff0c\u79bb\u95f4\uff0c\u77db\u76fe\uff0c\u51b2\u7a81\uff0c\u4ee5\u53ca\u6700\u540e\u7684\u5408\u4f5c\u3002\u76f4\u5230\u7b2c132\u5929\u65f6\u5019\u624d\u6709\u80c6\u91cf\u53bb\u63a2\u67e5\u8fd9\u4e2a\u58f0\u97f3\u7684\u6765\u6e90\u3002\u4eba\u90fd\u662f\u76f4\u5230\u6240\u6709\u548c\u751f\u5b58\u6709\u5173\u7684\u5a01\u80c1\u90fd\u6d88\u9664\u4e86\u4e4b\u540e\uff0c\u624d\u4f1a\u6709\u80c6\u91cf\u53bb\u63a2\u67e5\u53cd\u590d\u51b2\u51fb\u5fc3\u7406\u9632\u7ebf\u7684\u4e1c\u897f\uff0c\u7a76\u7adf\u662f\u4ec0\u4e48\u3002\\n\\n#### 3. \u53cd\u8f6c\u7684\u8239\u3002\\n\u4ece\u5f20\u603b\u53d1\u73b0\u90a3\u8258\u98a0\u5012\u7684\u7a7f\u5f00\u59cb\uff0c\u4f17\u4eba\u5c31\u4e00\u76f4\u5c06\u5176\u4f5c\u4e3a\u4f0a\u7538\u56ed\u3002\u5c06\u8fd9\u8258\u8239\u4e0a\u4e0b\u98a0\u5012\u7684\u573a\u666f\u4e00\u5171\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u521d\u5230\u8239\u8231\u7684\u98a0\u5012\uff0c\u770b\u5230\u6700\u540e\u4f1a\u4e0d\u81ea\u89c9\u5730\u89c9\u5f97\u8fd9\u662f\u4f17\u4eba\u5373\u98a0\u8986\u6027\u751f\u6d3b\u7684\u5f00\u59cb\u3002\u7b2c\u4e8c\u6b21\u7684\u51fa\u73b0\u5374\u9887\u5177\u8bbd\u523a\u610f\u5473\uff0c\u6e05\u9192\u7684\u5c0f\u738b\u3001\u88ab\u9a6c\u5c0f\u5174\u6d17\u8111\u7684\u4f17\u4eba\u5bf9\u7acb\uff0c\u662f\u975e\u98a0\u5012\uff0c\u9ed1\u767d\u53cd\u590d\uff0c\u4e00\u7fa4\u4eba\u8ffd\u9010\u4e00\u4e2a\u7edf\u6cbb\u8005\u7ed9\u4f60\u5236\u9020\u51fa\u7684\u771f\u76f8\uff0c\u81ea\u5df1\u751f\u751f\u628a\u751f\u5b58\u7684\u5e0c\u671b\u6bc1\u706d\u6389\u3002\u6240\u6709\u4eba\u90fd\u8e29\u7740\u5929\u82b1\u677f\u5f53\u4f5c\u662f\u811a\u8e0f\u5b9e\u5730\uff0c\u771f\u76f8\u4e5f\u662f\u8981\u57fa\u4e8e\u98a0\u5012\u800c\u5b58\u5728\u7684\u3002\\n\\n### \u6700\u540e\\n\u7535\u5f71\u7ed3\u5c3e\u9a6c\u8fdb\u7684\u90a3\u53e5\u201c\u7136\u540e\u5462\uff1f\u201d\u4ee4\u4eba\u6df1\u601d\uff0c\u800c\u5f69\u86cb\u4e5f\u9887\u6709\u8da3\u5473\u3002\u5f69\u86cb\u4e2d\uff0c\u4ece\u8352\u5c9b\u56de\u6765\u7684\u4f17\u4eba\u53ea\u6709\u9a6c\u5c0f\u5174\u4e00\u4eba\u5931\u53bb\u4e86\u8bb0\u5fc6\uff0c\u800c\u7cbe\u795e\u75c5\u9662\u5728\u5eb7\u590d\u7684\u75c5\u4eba\u4e5f\u548c\u4f17\u4eba\u5728\u8352\u5c9b\u4e0a\u56f4\u7ed5\u7740\u706b\u5806\u6b4c\u821e\u5347\u5e73\u7684\u573a\u666f\u6781\u5176\u76f8\u4f3c\uff0c\u8001\u6f58\u548c\u53f2\u6559\u6388\u7ee7\u7eed\u4e3a\u4e86\u5229\u76ca\u4e3a\u6765\u8352\u5c9b\u53c2\u89c2\u6e38\u5ba2\u7f16\u9020\u865a\u5047\u7684\u6545\u4e8b\u3002\u5728\u7535\u5f71\u7684\u6700\u540e\uff0c\u5f90\u5ce5\u5ba2\u4e32\u7684\u4e00\u4e2a\u8def\u4eba\u63ed\u793a\u4e86\u4e00\u4e2a\u9053\u7406\u90a3\u4e9b\u5439\u725b\u7684\u4eba\u5341\u5206\u53ef\u6076\u3002"},{"id":"removing-or-modifying-occupied-files-in-windows","metadata":{"permalink":"/blog/removing-or-modifying-occupied-files-in-windows","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-16-removing-or-modifying-occupied-files-in-windows/index.md","source":"@site/blog/2021-02-16-removing-or-modifying-occupied-files-in-windows/index.md","title":"\u5220\u9664\u6216\u4fee\u6539 Windows \u4e2d\u88ab\u5360\u7528\u7684\u6587\u4ef6","description":"\u6709\u65f6\u5019\u6211\u4eec\u60f3\u8981\u5728 Windows \u4e2d\u4fee\u6539\u6216\u5220\u9664\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f1a\u6536\u5230\u4e00\u4e2a\u300c\u6587\u4ef6\u6b63\u5728\u4f7f\u7528\u300d\u7684\u6d88\u606f\uff0c\u800c\u6211\u4eec\u53c8\u4e0d\u77e5\u9053\u662f\u54ea\u4e2a\u7a0b\u5e8f\u5728\u4f7f\u7528\uff0c\u8fd9\u65f6\u5019\u8be5\u600e\u4e48\u529e\u5462\uff1f","date":"2021-02-16T00:00:00.000Z","formattedDate":"2021\u5e742\u670816\u65e5","tags":[],"readingTime":1.095,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"removing-or-modifying-occupied-files-in-windows","title":"\u5220\u9664\u6216\u4fee\u6539 Windows \u4e2d\u88ab\u5360\u7528\u7684\u6587\u4ef6","authors":["solidSpoon"],"tags":[]},"unlisted":false,"prevItem":{"title":"\u4e00\u51fa\u597d\u620f\u6709\u611f","permalink":"/blog/reflections-on-movie-the-island"},"nextItem":{"title":"\u67e5\u770b Docker IP \u7684\u51e0\u79cd\u65b9\u6cd5","permalink":"/blog/several-methods-to-view-docker-ip"}},"content":"\u6709\u65f6\u5019\u6211\u4eec\u60f3\u8981\u5728 Windows \u4e2d\u4fee\u6539\u6216\u5220\u9664\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f1a\u6536\u5230\u4e00\u4e2a\u300c\u6587\u4ef6\u6b63\u5728\u4f7f\u7528\u300d\u7684\u6d88\u606f\uff0c\u800c\u6211\u4eec\u53c8\u4e0d\u77e5\u9053\u662f\u54ea\u4e2a\u7a0b\u5e8f\u5728\u4f7f\u7528\uff0c\u8fd9\u65f6\u5019\u8be5\u600e\u4e48\u529e\u5462\uff1f\\n\\n\u5f53\u67d0\u4e00\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\u6301\u6709\u4e00\u4e2a\u8d44\u6e90\u7684\u53e5\u67c4\u65f6\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u4fee\u6539\u8be5\u8d44\u6e90\u3002\u89e3\u51b3\u529e\u6cd5\u662f\u7ed3\u675f\u6240\u6709\u5bf9\u8d44\u6e90\u6709\u53e5\u67c4\u7684\u8fdb\u7a0b\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u300c\u8d44\u6e90\u76d1\u89c6\u5668\u300d\u4e2d\u627e\u5230\u6301\u6709\u8be5\u53e5\u67c4\u7684\u6240\u6709\u8fdb\u7a0b\uff0c\u8d44\u6e90\u76d1\u89c6\u5668\u7684\u6253\u5f00\u65b9\u5f0f\u5982\u4e0b\\n\\n- \u65b9\u6cd5 1\uff1a\\n\\n\\\\<Win + R\\\\>\uff0c\u8fd0\u884c `resmon.exe`\\n\\n- \u65b9\u6cd5 2\uff1a\\n\\n\u5f00\u59cb\u83dc\u5355 \ud83d\udc49 \u6240\u6709\u7a0b\u5e8f \ud83d\udc49 Windiws \u7ba1\u7406\u5de5\u5177 \ud83d\udc49 \u8d44\u6e90\u76d1\u89c6\u5668\\n\\n\u6253\u5f00\u540e\u9009\u4e2d\u5c31 CPU \uff0c\u5728\u300c\u5173\u8054\u7684\u53e5\u67c4\u300d\u4e2d\u8f93\u5165\u8981\u91ca\u653e\u7684\u6587\u4ef6\uff0c\u5373\u53ef\u627e\u5230\u6301\u6709\u8be5\u6587\u4ef6\u6309\u53e5\u67c4\u7684\u6240\u6709\u8fdb\u7a0b\uff0c\u53f3\u952e\u7ed3\u675f\u5373\u53ef\\n\\n![image](https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20210216212626.png)"},{"id":"several-methods-to-view-docker-ip","metadata":{"permalink":"/blog/several-methods-to-view-docker-ip","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-16-several-methods-to-view-docker-ip/index.md","source":"@site/blog/2021-02-16-several-methods-to-view-docker-ip/index.md","title":"\u67e5\u770b Docker IP \u7684\u51e0\u79cd\u65b9\u6cd5","description":"\u4f7f\u7528 Docker \u65f6\u5e38\u5e38\u9700\u8981\u77e5\u9053\u67d0\u4e00\u5bb9\u5668\u7684 IP\uff0c\u8fd9\u662f\u4e2a\u633a\u70e6\u4eba\u7684\u4e8b\u513f\uff0c\u672c\u6587\u4ecb\u7ecd\u51e0\u79cd\u67e5\u770b Docker IP \u7684\u65b9\u6cd5","date":"2021-02-16T00:00:00.000Z","formattedDate":"2021\u5e742\u670816\u65e5","tags":[{"label":"Docker","permalink":"/blog/tags/docker"}],"readingTime":1.135,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"several-methods-to-view-docker-ip","title":"\u67e5\u770b Docker IP \u7684\u51e0\u79cd\u65b9\u6cd5","authors":["solidSpoon"],"tags":["Docker"]},"unlisted":false,"prevItem":{"title":"\u5220\u9664\u6216\u4fee\u6539 Windows \u4e2d\u88ab\u5360\u7528\u7684\u6587\u4ef6","permalink":"/blog/removing-or-modifying-occupied-files-in-windows"},"nextItem":{"title":"\u6709\u8da3\u7684\u4e09\u6b21\u63e1\u624b\u4e0e\u56db\u6b21\u6325\u624b 1","permalink":"/blog/the-intriguing-three-way-handshake-and-four-way-farewell-in-tcp-1"}},"content":"\u4f7f\u7528 Docker \u65f6\u5e38\u5e38\u9700\u8981\u77e5\u9053\u67d0\u4e00\u5bb9\u5668\u7684 IP\uff0c\u8fd9\u662f\u4e2a\u633a\u70e6\u4eba\u7684\u4e8b\u513f\uff0c\u672c\u6587\u4ecb\u7ecd\u51e0\u79cd\u67e5\u770b Docker IP \u7684\u65b9\u6cd5\\n\\n### \u5728\u5bb9\u5668\u5185\u90e8\u67e5\u770b\\n```bash\\ncat /etc/hosts\\n```\\n\u4f1a\u663e\u793a\u81ea\u5df1\u4ee5\u53ca `\u2013link` \u8f6f\u8fde\u63a5\u7684\u5bb9\u5668 IP\\n### \u4f7f\u7528 docker inspect \u547d\u4ee4\\n`inspect`\xa0\u4f1a\u5217\u51fa\u5bb9\u5668\u8be6\u7ec6\u4fe1\u606f\\n\\n\\n\u4e0b\u9762\u7684\u547d\u4ee4\u4efb\u9009\u5176\u4e00\\n```bash\\ndocker inspect --format \'{{ .NetworkSettings.IPAddress }}\' <container-ID>\\n```\\n\u4e0a\u9762\u8fd9\u4e2a\u6211\u5728 Win10-WSL2-Docker \u4e0a\u7528\u4e0d\u4e86\\n```bash\\ndocker inspect <container id>\\n```\\n```\\ndocker inspect -f \'{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\' container_name_or_id\\n```\\n### \u5728 ~/.bashrc \u4e2d\u5199\u4e00\u4e2a bash \u51fd\u6570\\n```bash\\nfunction docker_ip() {\\n    sudo docker inspect --format \'{{ .NetworkSettings.IPAddress }}\' $1\\n}\\n```\\n`source ~/.bashrc` \u7136\u540e\uff1a\\n```bash\\n$ docker_ip <container-ID>\\n```\\n### \u663e\u793a\u6240\u6709\u5bb9\u5668\u540d\u79f0\u53ca\u5176 IP \u5730\u5740\\n```bash\\ndocker inspect -f \'{{.Name}} - {{.NetworkSettings.IPAddress }}\' $(docker ps -aq)\\n```\\n\u5982\u679c\u4f7f\u7528 docker-compose \u547d\u4ee4\u5c06\u662f\\n```bash\\ndocker inspect -f \'{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\' $(docker ps -aq)\\n```\\n### \u663e\u793a\u6240\u6709\u5bb9\u5668 IP \u5730\u5740\\n```\\ndocker inspect --format=\'{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\' $(docker ps -aq)\\n```\\n\\n---\\n\\n- https://blog.csdn.net/sannerlittle/article/details/77063800"},{"id":"the-intriguing-three-way-handshake-and-four-way-farewell-in-tcp-1","metadata":{"permalink":"/blog/the-intriguing-three-way-handshake-and-four-way-farewell-in-tcp-1","editUrl":"https://github.com/solidSpoon/solidSpoon.github.io/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-16-the-intriguing-three-way-handshake-and-four-way-farewell-in-tcp-1/index.md","source":"@site/blog/2021-02-16-the-intriguing-three-way-handshake-and-four-way-farewell-in-tcp-1/index.md","title":"\u6709\u8da3\u7684\u4e09\u6b21\u63e1\u624b\u4e0e\u56db\u6b21\u6325\u624b 1","description":"\u6700\u8fd1\u7814\u7a76\u4e86\u4ee5\u4e0b TCP\\\\IP \u534f\u8bae\u4e2d\u7684\u4e09\u6b21\u63e1\u624b\u4e0e\u56db\u6b21\u6325\u624b\uff0c\u4e0b\u9762\u6211\u5c06\u6211\u7684\u6536\u83b7\u5206\u4eab\u7ed9\u5927\u5bb6\u3002","date":"2021-02-16T00:00:00.000Z","formattedDate":"2021\u5e742\u670816\u65e5","tags":[{"label":"\u8ba1\u7b97\u673a\u7f51\u7edc","permalink":"/blog/tags/\u8ba1\u7b97\u673a\u7f51\u7edc"}],"readingTime":16.435,"hasTruncateMarker":false,"authors":[{"name":"solidSpoon","title":"Maintainer of Hide","url":"https://github.com/solidSpoon","imageURL":"https://github.com/solidSpoon.png","key":"solidSpoon"}],"frontMatter":{"slug":"the-intriguing-three-way-handshake-and-four-way-farewell-in-tcp-1","title":"\u6709\u8da3\u7684\u4e09\u6b21\u63e1\u624b\u4e0e\u56db\u6b21\u6325\u624b 1","authors":["solidSpoon"],"tags":["\u8ba1\u7b97\u673a\u7f51\u7edc"]},"unlisted":false,"prevItem":{"title":"\u67e5\u770b Docker IP \u7684\u51e0\u79cd\u65b9\u6cd5","permalink":"/blog/several-methods-to-view-docker-ip"}},"content":"> \u6700\u8fd1\u7814\u7a76\u4e86\u4ee5\u4e0b TCP\\\\IP \u534f\u8bae\u4e2d\u7684\u4e09\u6b21\u63e1\u624b\u4e0e\u56db\u6b21\u6325\u624b\uff0c\u4e0b\u9762\u6211\u5c06\u6211\u7684\u6536\u83b7\u5206\u4eab\u7ed9\u5927\u5bb6\u3002\\n\\nIP \u534f\u8bae\u662f\u4e00\u79cd\u5728\u4e24\u70b9\u95f4\u5efa\u7acb\u4f20\u8f93\u7684\u57fa\u7840\u534f\u8bae\uff0c\u53ef\u4ee5\u8bf4\u51e0\u4e4e\u6240\u6709\u7684\u5176\u4ed6\u534f\u8bae\u90fd\u5efa\u7acb\u5728 IP \u6240\u63d0\u4f9b\u7684\u57fa\u7840\u670d\u52a1\u4e0a\u8fdb\u884c\u4f20\u8f93\u3002\u4f46 IP \u534f\u8bae\u662f\u4e00\u79cd\u4e0d\u53ef\u9760\u7684\u4f20\u8f93\u534f\u8bae\uff0c\u5b83\u65e2\u4e0d\u4fdd\u8bc1\u4e00\u65b9\u53d1\u9001\u7684\u6570\u636e\u5305\u5230\u8fbe\u53e6\u4e00\u65b9\u7684\u987a\u5e8f\uff0c\u4e5f\u4e0d\u4fdd\u8bc1\u53d1\u9001\u7684\u6570\u636e\u5305\u80fd\u591f\u9001\u8fbe\u5230\u53e6\u4e00\u65b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u901a\u8fc7 IP \u534f\u8bae\u4f20\u8f93\u53ef\u80fd\u4f1a\u53d1\u751f\u4e22\u5305\u548c\u5ef6\u65f6\u3002\u5728\u4e00\u4e9b\u9700\u8981\u4fdd\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u7684\u573a\u666f\u4e2d\uff0cIP \u534f\u8bae\u7684\u4e0d\u53ef\u9760\u6027\u663e\u7136\u662f\u65e0\u6cd5\u88ab\u63a5\u53d7\u7684\u3002\\n\\nTCP \u534f\u8bae\u5168\u79f0\u4e3a\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff08Transmission Control Protocol\uff09\uff0c\u5b83\u662f\u5efa\u7acb\u5728 IP \u534f\u8bae\u4e0a\u7684\u4e00\u79cd\u4f20\u8f93\u534f\u8bae\u3002\u5176\u76ee\u7684\u5c31\u662f\u5728 IP \u63d0\u4f9b\u7684\u4e0d\u53ef\u9760\u4f20\u8f93\u670d\u52a1\u4e2d\uff0c\u5728\u4e24\u70b9\u95f4\u5efa\u7acb\u4e00\u4e2a\u53ef\u9760\u7684\u4f20\u8f93\u8fde\u63a5\u3002\u5176\u53ef\u9760\u6027\u662f\u5efa\u7acb\u5728\u300c\u5931\u8d25\u91cd\u4f20\u300d\u8fd9\u4e00\u673a\u5236\u4e0a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u4efb\u4f55\u4e00\u65b9\u5411\u53e6\u4e00\u65b9\u53d1\u9001\u6570\u636e\uff0c\u90fd\u5fc5\u987b\u6536\u5230\u5bf9\u65b9\u7684\u786e\u8ba4\u56de\u5e94\uff0c\u5426\u5219\u5c31\u91cd\u65b0\u4f20\u8f93\u3002\u5728 TCP \u534f\u8bae\u4e2d\uff0c\u6700\u8457\u540d\u7684\u83ab\u8fc7\u4e8e\u5176\u5efa\u7acb\u8fde\u63a5\u65f6\u7684\u300c\u4e09\u6b21\u63e1\u624b\u300d\u4e0e\u65ad\u5f00\u8fde\u63a5\u65f6\u7684\u300c\u56db\u6b21\u6325\u624b\u300d\uff0c\u672c\u6587\u6211\u4eec\u5c31\u4e00\u8d77\u63a2\u7d22\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u3002\\n\\n\x3c!-- more --\x3e\\n\\n\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u300c\u4e09\u6b21\u63e1\u624b\u300d\u82f1\u6587\u539f\u6587\u662f three-way handshik \u6216\u8005 three-message handshake\uff0c\u5373\u901a\u8fc7\u4e09\u4e2a\u6b65\u9aa4 / \u4e09\u6761\u6d88\u606f\u624d\u80fd\u5efa\u7acb\u7684\u63e1\u624b\u673a\u5236\uff0c\u540c\u7406\u56db\u6b21\u6325\u624b\u4e5f\u662f\u5982\u6b64\u3002\\n\\n#### \u4e09\u6b21\u63e1\u624b\\n\\n\u6211\u4eec\u9996\u5148\u6765\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u624d\u80fd\u786e\u8ba4\u4e00\u4e2a\u8fde\u63a5\u662f\u53ef\u9760\u7684\uff1f\u5176\u5b9e\u5982\u679c\u4f60\u7ecf\u5e38\u901b\u77e5\u4e4e\u7684\u8bdd\uff0c\u5e94\u8be5\u4f1a\u89c1\u5230\u4e0b\u9762\u8fd9\u4e2a\u8ba8\u5de7\u5356\u840c\u7684\u89e3\u7b54\u65b9\u5f0f\uff1a\\n\\n> \u300c\u5582\uff0c\u4f60\u542c\u5f97\u5230\u5417\uff1f\u300d<br/>\\n> \u300c\u6211\u542c\u5f97\u5230\u554a\uff0c\u4f60\u80fd\u542c\u5230\u6211\u5417\uff1f\u300d<br/>\\n> \u300c\u6211\u80fd\u542c\u5230\u4f60\u3002\u300d\\n\\n\u6ca1\u9519\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u7b80\u5316\u4e86\u7684 TCP \u8fde\u63a5\u7684\u5efa\u7acb\u8fc7\u7a0b\u3002\u90a3\u4e48\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e00\u7b80\u5316\u7684\u8fc7\u7a0b\uff1b\\n\\n\u663e\u800c\u6613\u89c1\uff0c\u5982\u679c\u6211\u4eec\u60f3\u5efa\u7acb\u4e00\u4e2a\u53cc\u5411\u7684\u3001\u53ef\u9760\u7684\u901a\u8baf\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u8ba4\u5efa\u7acb\u8fde\u63a5\u65f6\u53cc\u65b9\u7684\u63a5\u6536\u548c\u53d1\u9001\u6570\u636e\u7684\u529f\u80fd\u90fd\u662f\u53ef\u7528\u7684\uff0c\u7528\u4e0a TCP \u4e2d\u7684\u672f\u8bed\uff0c\u5927\u6982\u662f\u4e0b\u9762\u8fd9\u6837\u3002\\n\\n<img src=\\"https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200630212552.jpg\\"/>\\n\\n\\n\u76f8\u4fe1\u4f60\u4e5f\u53d1\u73b0\u4e86\uff0c\u4e3a\u4e86\u51cf\u5c11\u4e00\u6b21\u901a\u8baf\u6b21\u6570\uff0c\u6211\u4eec\u4f1a\u628a\u4e0a\u56fe\u7684 \u2461 \u548c \u2462 \u5408\u5e76\u6210\u4e00\u6b21\uff0c\\n\\n<img src=\\"https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200630212517.jpg\\"/>\\n\\n\\n\u4f60\u770b\uff0c\u7ecf\u8fc7\u4e09\u6b65\uff0c\u4e00\u4e2a\u7b80\u5316\u7684 TCP \u8fde\u63a5\u5c31\u5efa\u7acb\u8d77\u6765\u4e86\uff0c\u4e4b\u540e A \u548c B \u5c31\u4f1a\u4e92\u76f8\u4f20\u8f93\u6570\u636e\u3002\u4f46\u662f\u6211\u4eec\u8bf4\u8fc7 IP \u534f\u8bae\u4f1a\u53d1\u751f\u4e22\u5305\u548c\u5ef6\u65f6\uff0c\u800c\u4e09\u6b65\u63e1\u624b\u4ec5\u4ec5\u662f\u786e\u8ba4\u4e86\u53cc\u65b9\u63a5\u53d7\u548c\u53d1\u9001\u6570\u636e\u7684\u529f\u80fd\u662f\u53ef\u7528\u7684\uff0c\u5e76\u6ca1\u6709\u89e3\u51b3 IP \u534f\u8bae\u4e22\u5305\u548c\u5ef6\u65f6\u5e26\u6765\u7684\u95ee\u9898\u3002\u90a3\u4e48 TCP \u662f\u600e\u4e48\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u5462\uff1f\\n\\n\u524d\u6587\u63d0\u5230\u8fc7\uff0cTCP \u7528\u6765\u4fdd\u8bc1\u53ef\u9760\u6027\u7684\u65b9\u6cd5\u662f\u300c\u5931\u8d25\u91cd\u4f20\u300d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece A \u673a\u5668\u5411 B \u673a\u5668\u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42\u7684\u90a3\u6761\u6d88\u606f\uff08\u5373\u4e0a\u56fe \u2460\uff09\u5f00\u59cb\uff0c\u5c06 A \u53d1\u7ed9 B \u7684\u6240\u6709\u6d88\u606f\u6309\u987a\u5e8f\u6807\u4e0a\u5e8f\u53f7\uff0c\u540c\u65f6\u4e5f\u5c06 B \u53d1\u7ed9 A \u7684\u6240\u6709\u6d88\u606f\u6309\u987a\u5e8f\u6807\u4e0a\u5e8f\u53f7\uff0c\u8fd9\u6837\u5bf9\u65b9\u6536\u5230\u53d1\u6765\u7684\u6d88\u606f\u5c31\u80fd\u6839\u636e\u5e8f\u53f7\u5206\u8fa8\u51fa\u987a\u5e8f\u548c\u4e22\u5305\uff0c\u5982\u679c\u53d1\u751f\u4e22\u5305\u5c31\u53ef\u4ee5\u8981\u6c42\u91cd\u4f20\u3002\u4f46\u5728\u5b9e\u9645\u4f20\u8f93\u4e2d\uff0c\u7531\u4e8e\u5404\u4e2a\u4e2d\u95f4\u8282\u70b9\u7684\u914d\u7f6e\u4e0d\u540c\uff0c\u4e00\u4e2a\u6570\u636e\u5305\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u88ab\u4e2d\u95f4\u8282\u70b9\u5206\u6210\u51e0\u4efd\uff0c\u6240\u4ee5\u5b9e\u9645\u4e2d\u5e8f\u53f7\u7684\u610f\u4e49\u662f\u300c\u8fd9\u662f\u6211\u4eec\u6240\u4f20\u8f93\u6570\u636e\u7684\u7b2c\u51e0\u4e2a\u5b57\u8282\u300d\u3002\u5982\u4e0b\u56fe\u6240\u793a\\n\\n<img src=\\"https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200630212441.jpg\\"/>\\n\\n\\n\u6ce8\u610f\u8fd9\u91cc\u7684\u5e8f\u53f7\u5e76\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u5176\u5b9e\u7528 0 \u8868\u793a\u521d\u59cb\u503c\u5728\u7f16\u7a0b\u4e2d\u662f\u666e\u904d\u7684\u505a\u6cd5\uff0c\u4e3a\u4ec0\u4e48\u5728\u8fd9\u91cc\u5c31\u4e0d\u662f\u8fd9\u6837\u4e86\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5f53 TCP \u672a\u80fd\u6b63\u5e38\u5efa\u7acb\u8fde\u63a5\u7684\u60c5\u51b5\u3002\\n\\n\u6211\u4eec\u5c06\u53d1\u8d77\u8bf7\u6c42\u7684 A \u673a\u5668\u79f0\u4e3a\u5ba2\u6237\u7aef\uff0c\u5c06\u63a5\u53d7\u8bf7\u6c42\u7684 B \u673a\u5668\u79f0\u4e3a\u670d\u52a1\u7aef\uff0c\u901a\u5e38\u670d\u52a1\u7aef\u901a\u8fc7\u56db\u4e2a\u6570\u636e\u8bc6\u522b\u4e00\u6761\u8fde\u63a5\uff0c\u5373\u53cc\u65b9\u7684 ip \u5730\u5740\u548c\u53cc\u65b9\u5efa\u7acb\u8fde\u63a5\u7684\u7aef\u53e3\u53f7\u3002\u5047\u8bbe\u5ba2\u6237\u7aef\u9996\u5148\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\uff0c\u7136\u540e\u53d1\u9001\u4e86\u4e00\u4e2a\u6570\u636e\u5305\uff08\u5047\u8bbe\u5e8f\u53f7\u4e3a x\uff09\u4f46\u662f\u8fd9\u4e2a\u6570\u636e\u5305\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u8f83\u5927\u7684\u5ef6\u65f6\uff0c\u5bfc\u81f4\u670d\u52a1\u7aef\u8ba4\u4e3a\u8fde\u63a5\u4e2d\u65ad\uff0c\u5173\u95ed\u4e86\u8fde\u63a5\u3002\u7d27\u63a5\u7740\u540c\u4e00\u4e2a\u5ba2\u6237\u7aef\u518d\u6b21\u53d1\u8d77\u8bf7\u6c42\uff0c\u5728\u521a\u5efa\u7acb\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u4e4b\u524d\u5ef6\u65f6\u7684\u90a3\u4e2a\u6570\u636e\u5305\u78b0\u5de7\u5230\u8fbe\u4e86\uff0c\u800c\u5982\u679c\u4e24\u6b21\u8fde\u63a5\u7684\u7aef\u53e3\u4e00\u6837\u7684\u8bdd\uff0c\u4e5f\u5c31\u662f\u8bf4\u65b0\u8fde\u63a5\u5efa\u7acb\u65f6\u53cc\u65b9\u7684 ip \u5730\u5740\u548c\u7aef\u53e3\u53f7\u90fd\u548c\u8001\u94fe\u63a5\u4e00\u6837\uff0c\u8fd9\u4e2a\u6765\u81ea\u8001\u94fe\u63a5\u7684\u6570\u636e\u5305\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u8499\u6df7\u8fc7\u5173\uff0c\u88ab\u670d\u52a1\u7aef\u63a5\u53d7\u4e0b\u6765\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002\\n\\n````\\n- \u5ba2\u6237\u7aef\uff1a\u6211\u60f3\u5efa\u7acb\u8fde\u63a5\u3002\\n- \u670d\u52a1\u7aef\uff1a\u597d\uff01\\n- \u5ba2\u6237\u7aef\uff1a\u53d1\u9001\u7b2c\u4e00\u4e2a\u6570\u636e\u5305 \u2460\\n- ......\uff08\u7b2c\u4e00\u4e2a\u6570\u636e\u5305\u53d1\u751f\u5ef6\u65f6\uff09\\n- \u670d\u52a1\u7aef\uff1a\u5947\u602a\u600e\u4e48\u6ca1\u52a8\u9759\u4e86\uff0c\u65ad\u4e86\u8fde\u63a5\u5427\\n- ...\\n\\n- \u5ba2\u6237\u7aef\uff1a\u5947\u602a\uff0c\u600e\u4e48\u65ad\u4e86\u3002\u6211\u60f3\u5efa\u7acb\u8fde\u63a5\u3002\\n- \u670d\u52a1\u7aef\uff1a\u597d\uff01\\n- \u6570\u636e\u5305 \u2460 \u7ec8\u4e8e\u5230\u4e86\uff01\\n- \u670d\u52a1\u7aef\uff1a\u6765\u6570\u636e\u4e86\uff0c\u6211\u8981\u6536\u4e0b\\n````\\n\\n\u56e0\u6b64\uff0c\u6bcf\u6b21\u5efa\u7acb\u8fde\u63a5\u7684\u8d77\u59cb\u5e8f\u53f7\u5e94\u8be5\u662f\u4e0d\u540c\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u9700\u8981\u4e00\u79cd\u968f\u673a\u6570\u7b97\u6cd5\uff0c\u4fdd\u8bc1\u751f\u6210\u7684\u968f\u673a\u6570\u5728\u4e00\u4e2a\u6570\u636e\u5305\u7684\u6700\u5927\u751f\u5b58\u5468\u671f\u5185\u4e0d\u4f1a\u91cd\u590d\u3002\u6211\u4eec\u7528\u8fd9\u4e2a\u968f\u673a\u6570\u4f5c\u4e3a\u8fde\u63a5\u7684\u8d77\u59cb\u5e8f\u53f7\uff0c\u8fd9\u6837\u7ed3\u5408\u6570\u636e\u5305\u7684\u56db\u5143\u7ec4\uff08\u53cc\u65b9\u5efa\u7acb\u94fe\u63a5\u7684 ip \u548c\u7aef\u53e3\uff09\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5728\u6570\u636e\u5305\u7684\u6700\u5927\u751f\u5b58\u5468\u671f\u5185\uff0c\u6bcf\u4e00\u4e2a\u6570\u636e\u5305\u7684\u552f\u4e00\u6027\uff0c\u4ee5\u6b64\u907f\u514d\u53d1\u751f\u6df7\u6dc6\u3002\u901a\u5e38\u8fd9\u4e2a\u8d77\u59cb\u5e8f\u53f7\u6709\u4e00\u4e2a\u4e13\u7528\u7684\u7684\u540d\u5b57\u53eb\u505a ISN (Initial Sequence Number)\u3002\\n\\n\u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u5728\u5efa\u7acb\u8fde\u63a5\u65f6\u5206\u522b\u4f1a\u751f\u6210\u81ea\u5df1\u7684 ISN\uff0c\u7136\u540e\u901a\u8fc7\u5efa\u7acb\u8fde\u63a5\u7684\u62a5\u6587\u53d1\u9001\u7ed9\u5bf9\u65b9\uff0c\u4f9b\u5bf9\u65b9\u786e\u8ba4\u662f\u5426\u4e22\u5305\u3002\\n\\n\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b TCP \u62a5\u6587\u7684\u683c\u5f0f\\n\\n<img src=\\"https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200630211944.jpg\\"/>\\n\\n\\n\u62a5\u6587\u7684\u7b2c\u4e00\u884c\u4e24\u4e2a\u7aef\u53e3\u53f7\u5404\u5360\u4e24\u4e2a\u5b57\u8282\uff0c\u5206\u522b\u8868\u793a\u4e86\u6e90\u673a\u5668\u548c\u76ee\u6807\u673a\u5668\u7684\u7aef\u53e3\u53f7\uff0c\u518d\u52a0\u4e0a IP \u62a5\u6587\u4e2d\u53cc\u65b9\u7684 IP \u5730\u5740\u5373\u53ef\u7ec4\u6210\u4e4b\u524d\u6240\u8bf4\u7684\u56db\u5143\u7ec4\u3002\u534f\u8bae\u7684\u7b2c\u56db\u884c\u5305\u62ec\u4e86 6 \u4e2a\u63a7\u5236\u4f4d\uff0c\u8fd9\u91cc\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u5176\u4e2d\u7684 SYN, ACK, FIN \u8fd9\u4e09\u4e2a\u63a7\u5236\u4f4d\u3002SYN \u5373 synchronize\uff0c\u5728\u5efa\u7acb\u8fde\u63a5\u65f6\u4f7f\u7528\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u300c\u542c\u5f97\u5230\u5417\uff1f\u300d\uff1bACK \u8868\u793a acknowledge\uff0c\u8868\u793a\u786e\u8ba4\u6536\u5230\u4e86\u6d88\u606f\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u300c\u542c\u5f97\u5230\uff01\u300d\uff1bFIN \u8868\u793a finish\uff0c\u5728\u7a0d\u540e\u8bb2\u8ff0\u65ad\u5f00\u8fde\u63a5\u65f6\u4f1a\u4f7f\u7528\u3002\\n\\n\u62a5\u6587\u7684\u7b2c\u4e8c\u884c\u548c\u7b2c\u4e09\u884c\u662f\u5e8f\u5217\u53f7\uff0c\u5404\u5360 4 \u4e2a\u5b57\u8282\u3002\u5b83\u4eec\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u8bf4\u7684\u300c\u5e8f\u53f7\u300d\uff0cseq \u662f\u6307\u6240\u53d1\u9001\u6570\u636e\u5305\u4e2d\u6570\u636e\u90e8\u5206\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u5e8f\u53f7\uff0cack \u662f\u6307\u671f\u671b\u6536\u5230\u6765\u81ea\u5bf9\u65b9\u7684\u4e0b\u4e00\u4e2a\u6570\u636e\u5305\u4e2d\u6570\u636e\u90e8\u5206\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u5e8f\u53f7\u3002TCP \u8fd8\u89c4\u5b9a\uff0c\u5982\u679c\u4e00\u65b9\u53d1\u9001\u7684 seq \u5e8f\u53f7\u4e3a x\uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u5b83\u5df2\u7ecf\u6536\u5230\u4e86\u4ece\u5efa\u7acb\u8fde\u63a5\u5f00\u59cb\u5230 x-1 \u7684\u6240\u6709\u6570\u636e\uff0c\u6709\u4e86\u8fd9\u4e00\u673a\u5236\uff0c\u5f53\u63a5\u6536\u65b9\u53d1\u9001\u7684\u786e\u8ba4\u6570\u636e\u5728\u4f20\u8f93\u7684\u8fc7\u7a0b\u4e2d\u4e22\u5931\u65f6\uff0c\u6570\u636e\u53d1\u9001\u65b9\u4e5f\u80fd\u6839\u636e\u6536\u5230\u7684\u90e8\u5206\u786e\u8ba4\u6570\u636e\u63a8\u6d4b\u51fa\u5bf9\u65b9\u6536\u5230\u4e86\u591a\u5c11\u6570\u636e\uff0c\u51cf\u5c11\u4e86\u53d1\u9001\u65b9\u7531\u4e8e\u300c\u8bef\u4f1a\u300d\u800c\u9020\u6210\u7684\u5931\u8d25\u91cd\u4f20\uff0c\u80fd\u6709\u6548\u7f13\u89e3\u7f51\u7edc\u62e5\u6324\u7684\u73b0\u8c61\u3002\\n\\n````\\n- \u670d\u52a1\u7aef\uff1a\u53d1\u9001\u4ee5 seq = 101 \u5f00\u59cb\uff0c\u957f\u5ea6\u4e3a 10 \u7684\u6570\u636e\u5305\u3002\\n- \u5ba2\u6237\u7aef\uff1a\u8bf7\u53d1\u9001\u4ee5 seq = 111 \u5f00\u59cb\u7684\u6570\u636e\u5305\u3002\\n\\n- \u670d\u52a1\u7aef\uff1a\u53d1\u9001\u4ee5 seq = 111 \u5f00\u59cb\uff0c\u957f\u5ea6\u4e3a 30 \u7684\u6570\u636e\u5305\u3002\\n- ...\u5047\u8bbe\u6570\u636e\u5305\u88ab\u4e2d\u95f4\u8282\u70b9\u62c6\u5206\u6210 3 \u4e2a\u5c0f\u5757\\n\\n- \u5ba2\u6237\u7aef\uff1a\u54a6\uff0c\u600e\u4e48\u6765\u4e86\u4e00\u4e2a seq 121 \u5f00\u59cb\u957f\u5ea6\u4e3a 10 \u7684\u6570\u636e\u5305\uff1f  \\n- \u5ba2\u6237\u7aef\uff1a\u54a6\uff0c\u600e\u4e48\u6765\u4e86\u4e00\u4e2a seq 131 \u5f00\u59cb\u957f\u5ea6\u4e3a 10 \u7684\u6570\u636e\u5305\uff1f  \\n- \u5ba2\u6237\u7aef\uff1a\u7ec8\u4e8e\u6536\u5230 seq = 111 \u5f00\u59cb\u7684\u6570\u636e\u5305\u4e86\uff0c\u957f\u5ea6\u4e3a 10\uff0c\u9700\u8981\u56de ACK = 121\u3002  \\n- \u5ba2\u6237\u7aef\uff1a\u4e0d\u5bf9\u3002seq = 121 \u5f00\u59cb\u7684\u6570\u636e\u5305\u6211\u597d\u50cf\u6536\u5230\u8fc7\uff0c\u9700\u8981\u56de ACK = 131 \u624d\u5bf9\u3002  \\n- \u5ba2\u6237\u7aef\uff1a\u8fd8\u4e0d\u5bf9\u3002seq = 131\u5f00\u59cb\u7684\u6570\u636e\u5305\u6211\u4e5f\u6536\u5230\u8fc7\uff0c\u9700\u8981\u56de ACK = 141 \u624d\u5bf9\u3002\\n\\n- \u670d\u52a1\u7aef\uff1a\u53d1\u9001\u4ee5 seq = 141 \u5f00\u59cb\uff0c\u957f\u5ea6\u4e3a 10 \u7684\u6570\u636e\u5305\u3002\\n- \u670d\u52a1\u7aef\uff1a\u53d1\u9001\u4ee5 seq = 151 \u5f00\u59cb\uff0c\u957f\u5ea6\u4e3a 10 \u7684\u6570\u636e\u5305\u3002\\n\\n- \u5ba2\u6237\u7aef\uff1aack = 151\\n- ...\u4e22\u5931\\n- \u5ba2\u6237\u7aef\uff1aack = 161\\n\\n- \u670d\u52a1\u7aef\uff1a\u53ea\u6765\u4e86\u4e2a ack = 161\uff0c\u6211\u731c seq = 151 \u90a3\u4e2a\u6570\u636e\u5305\u4e5f\u53d1\u9001\u6210\u529f\u4e86\u3002\\n````\\n\\n\u7531\u4e8e TCP \u62a5\u5934\u5b58\u5728\u4e00\u4e9b\u6269\u5c55\u5b57\u6bb5\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7\u957f\u5ea6\u4e3a\u56db\u4e2a bit \u7684\u5934\u90e8\u957f\u5ea6\u5b57\u6bb5\u8868\u793a TCP \u62a5\u5934\u7684\u5927\u5c0f\uff0c\u8fd9\u6837\u63a5\u6536\u65b9\u624d\u80fd\u51c6\u786e\u7684\u8ba1\u7b97\u51fa\u5305\u4e2d\u6570\u636e\u90e8\u5206\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002\\n\\n\u63a5\u4e0b\u6765\u95e8\u5c31\u770b\u770b\u771f\u6b63\u7684\u4e09\u6b21\u63e1\u624b\u3002\u6ce8\u610f\u5728\u8bf7\u6c42\u8fde\u63a5\u7684\u6570\u636e\u5305\u4e2d\uff0c\u7531\u4e8e\u4e0d\u4f20\u8f93\uff0cSYN ACK \u88ab\u5f53\u4f5c\u6570\u636e\u90e8\u5206\u7b2c\u4e00\u4e2a\u5b57\u8282\u3002\\n\\n- \u7b2c\u4e00\u6b65\\n    - A \u5c06\u6570\u636e\u5305\u4e2d SYN \u7f6e 1\uff0c\u8868\u793a\u5e0c\u671b\u5efa\u7acb\u8fde\u63a5\\n    - \u5e76\u751f\u6210\u7b2c\u4e00\u4e2a seq\uff08\u6b64\u65f6\u5e94\u53eb ISN\uff09\u5047\u8bbe\u4e3a x\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u6570\u636e\u5305\u53d1\u9001\u7ed9\u5bf9\u65b9\u3002\\n- \u7b2c\u4e8c\u6b65\\n    - B \u6536\u5230 A \u53d1\u6765\u7684\u6570\u636e\u5305\u540e\uff0c\u901a\u8fc7 SYN \u5f97\u77e5\u8fd9\u662f\u4e00\u4e2a\u5efa\u7acb\u8fde\u63a5\u7684\u6570\u636e\u5305\uff0c\\n    - \u4e8e\u662f\u751f\u6210\u4e00\u4e2a\u76f8\u5e94\u5305\u5c06 SYN \u548c ACK \u90fd\u7f6e 1\uff0c\u8868\u793a\u5bf9 A \u7684\u56de\u5e94\u548c\u8be2\u95ee\uff0c\\n    - \u5e76\u5c06\u786e\u8ba4\u5e8f\u53f7\uff08ack\uff09\u8bbe\u7f6e\u4e3a x+1\uff0c\u8868\u793a\u6536\u5230\u4e86 A \u673a\u5668\u300cSYN\u300d\u8fd9\u4e00\u5b57\u8282\u6570\u636e\uff0c\u671f\u671b\u6536\u5230 A \u7684\u4e0b\u4e00\u4e2a\u6570\u636e\u5305\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u8282\u5e8f\u53f7\u4e3a x+1\u3002\\n    - \u5e76\u6807\u8bb0\u4e0a\u81ea\u5df1\u7684\u7b2c\u4e00\u4e2a seq\uff08\u6b64\u65f6\u53eb ISN\uff09\uff0c\u5047\u8bbe\u4e3a y\uff0c\u7136\u540e\u53d1\u9001\u8fd9\u4e2a\u6570\u636e\u5305\u3002\\n- \u7b2c\u4e09\u6b65\\n    - A \u6536\u5230 B \u7684\u76f8\u5e94\u5305\u540e\u8fdb\u884c\u786e\u8ba4\uff0c\u5c06\u786e\u8ba4\u5305\u4e2d ACK \u7f6e\u4e3a 1 \u8868\u793a\u786e\u8ba4\uff0c\\n    - seq \u7f6e\u4e3a x+1\uff08\u5373\u5bf9\u65b9\u671f\u671b\u7684\u300c\u4e0b\u4e00\u4e2a\u5b57\u8282\u300d\uff09\uff0c\\n    - ack \u7f6e\u4e3a y+1\uff08\u6536\u5230\u5bf9\u65b9\u7b2c y \u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u671f\u671b\u6536\u5230\u4e0b\u4e00\u4e2a\u6570\u636e\u5305\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u8282\u5e8f\u53f7\u4e3a y+1\uff09.\\n\\n<img src=\\"https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200630212623.jpg\\"/>\\n\\n\\n\\n\u8bf4\u5b8c\u4e86\u4e09\u6b21\u63e1\u624b\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b TCP \u65ad\u5f00\u8fde\u63a5\u65f6\u7684\u56db\u6b21\u6325\u624b\\n\\n#### \u56db\u6b21\u6325\u624b\\n\\n\u6709\u4e86\u524d\u9762\u7684\u57fa\u7840\uff0c\u56db\u6b21\u5206\u624b\u5c31\u7b80\u5355\u7684\u591a\u4e86\u3002\u9996\u5148\u662f\u7b80\u5316\u7248\u672c\\n\\n<img src=\\"https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200630212705.jpg\\"/>\\n\\n\\n\u770b\u5230\u8fd9\u5e45\u56fe\u53ef\u80fd\u4f60\u4e5f\u660e\u767d\u4e86\uff0cTCP \u7684\u5efa\u7acb\u8fde\u63a5\u548c\u65ad\u5f00\u8fde\u63a5\u90fd\u9700\u8981\u4e24\u8f6e\u95ee\u7b54\uff0c\u53ea\u4e0d\u8fc7\u5efa\u7acb\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u2461 \u548c \u2462 \u53ef\u4ee5\u88ab\u5408\u5e76\u4e3a\u4e00\u6b21\u901a\u4fe1\u3002\u800c\u5728\u65ad\u5f00\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u7531\u4e8e A B \u4e24\u53f0\u673a\u5668\u901a\u5e38\u4e0d\u4f1a\u540c\u65f6\u53d1\u9001\u5b8c\u6570\u636e\uff0c\u6240\u4ee5\u53ea\u80fd\u7b49\u5f85\u6bcf\u4e00\u65b9\u53d1\u5b8c\u6570\u636e\u65f6\u5206\u522b\u8fdb\u884c\u4e00\u8f6e\u786e\u8ba4\u3002\u63a5\u4e0b\u6765\u770b\u770b\u5e26\u6709\u5e8f\u53f7\u7684\u300c\u6b63\u5f0f\u7248\u300d\\n\\n<img src=\\"https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200630212729.jpg\\"/>\\n\\n\\n\u5173\u4e8e\u56db\u6b21\u6325\u624b\u6211\u770b\u5230\u8fc7\u4e00\u4e2a\u5206\u624b\u7684\u7248\u672c\\n- \u7537\u751f\uff1a\u6211\u4eec\u5206\u624b\u5427\u3002\\n- \u5973\u751f\uff1a\u597d\u7684\uff0c\u6211\u7684\u5b9a\u897f\u6536\u62fe\u5b8c\uff0c\u53d1\u4fe1\u606f\u7ed9\u4f60\u3002\uff08\u6b64\u65f6\u7537\u751f\u4e0d\u80fd\u518d\u62e5\u62b1\u5973\u751f\u4e86\u3002\uff09\\n- \u4e00\u4e2a\u5c0f\u65f6\u540e...\\n- \u5973\u751f\uff1a\u6211\u6536\u62fe\u597d\u4e86\uff0c\u5206\u624b\u628a\u3002\uff08\u6b64\u65f6\uff0c\u5973\u751f\u4e5f\u4e0d\u80fd\u518d\u62e5\u62b1\u7537\u751f\u4e86\u3002\uff09\\n- \u7537\u751f\uff1a\u597d\u7684\u3002\uff08\u6b64\u65f6\uff0c\u53cc\u65b9\u7ea6\u5b9a\u7ecf\u8fc7 2 \u4e2a\u6708\u7684\u8fc7\u6e21\u671f\uff0c\u53cc\u65b9\u624d\u53ef\u4ee5\u5206\u522b\u627e\u65b0\u7684\u5bf9\u8c61\u3002\uff09\\n\\n\u53ef\u80fd\u4f60\u6ce8\u610f\u5230\u4e86\uff0c\u53cc\u65b9\u6700\u540e\u6709 2 \u4e2a\u6708\u7684\u8fc7\u6e21\u671f\uff0c\u5728\u56db\u6b21\u5206\u624b\u4e2d\u4e5f\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u8fc7\u6e21\u671f\uff0c\u5b83\u7684\u65f6\u957f\u4e3a 2MSL\u3002MSL\uff08Maximum Segment Lifetime\uff09\u4e2d\u6587\u53ef\u4ee5\u8bd1\u4e3a\u300c\u62a5\u6587\u6700\u5927\u751f\u5b58\u65f6\u95f4\u300d\uff0c\u4ed6\u662f\u4efb\u4f55\u62a5\u6587\u5728\u7f51\u7edc\u4e0a\u5b58\u5728\u7684\u6700\u957f\u65f6\u95f4\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u65f6\u95f4\u62a5\u6587\u5c06\u88ab\u4e22\u5f03\u30022MSL\u5373\u4e24\u500d\u7684MSL\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u4e3b\u52a8\u5206\u624b\u4e00\u65b9\u4f1a\u8fdb\u5165\u4e00\u4e2a\u540d\u4e3a `TIME_WAIT` \u7684\u7b49\u5f85\u72b6\u6001\uff0c\u4e5f\u79f0\u4e3a 2MSL \u7b49\u5f85\u72b6\u6001\u3002\\n\\n\u5f53 TCP \u7684\u4e00\u7aef\u53d1\u8d77\u4e3b\u52a8\u5173\u95ed\uff0c\u5728\u53d1\u51fa\u6700\u540e\u4e00\u4e2a ACK \u5305\u540e\uff0c\u5373\u7b2c3\u6b21\u6325\u624b\u5b8c\u6210\u540e\u53d1\u9001\u4e86\u7b2c\u56db\u6b21\u6325\u624b\u7684 ACK \u5305\u540e\u5c31\u8fdb\u5165\u4e86 `TIME_WAIT` \u72b6\u6001\uff0c\u5fc5\u987b\u5728\u6b64\u72b6\u6001\u4e0a\u505c\u7559\u4e24\u500d\u7684 MSL \u65f6\u95f4\uff0c\u7b49\u5f85 2MSL \u65f6\u95f4\u4e3b\u8981\u76ee\u7684\u662f\u6015\u6700\u540e\u4e00\u4e2a ACK \u5305\u5bf9\u65b9\u6ca1\u6536\u5230\uff0c\u90a3\u4e48\u5bf9\u65b9\u5728\u8d85\u65f6\u540e\u5c06\u91cd\u53d1\u7b2c\u4e09\u6b21\u6325\u624b\u7684 FIN+ACK \u5305\uff0c\u4e3b\u52a8\u5173\u95ed\u7aef\u63a5\u5230\u91cd\u53d1\u7684 FIN \u5305\u540e\u53ef\u4ee5\u518d\u53d1\u4e00\u4e2a ACK \u5e94\u7b54\u5305\uff0c\u5e76\u4e14\u4f1a\u91cd\u65b0\u8ba1\u65f6\u3002\u5728 `TIME_WAIT` \u72b6\u6001\u65f6\u4e24\u7aef\u7684\u7aef\u53e3\u4e0d\u80fd\u4f7f\u7528\uff0c\u8981\u7b49\u5230 2MSL \u65f6\u95f4\u7ed3\u675f\u624d\u53ef\u7ee7\u7eed\u4f7f\u7528\u3002\u5f53\u8fde\u63a5\u5904\u4e8e 2MSL \u7b49\u5f85\u9636\u6bb5\u65f6\u4efb\u4f55\u8fdf\u5230\u7684\u62a5\u6587\u6bb5\u90fd\u5c06\u88ab\u4e22\u5f03,\u56e0\u6b64 2MSL \u7b49\u5f85\u72b6\u6001\u7684\u53e6\u4e00\u4e2a\u7528\u5904\u662f\u9632\u6b62\u5df2\u5931\u6548\u8fde\u63a5\u7684\u8bf7\u6c42\u6570\u636e\u5305\u4e0e\u6b63\u5e38\u8fde\u63a5\u7684\u8bf7\u6c42\u6570\u636e\u5305\u6df7\u6dc6\u800c\u53d1\u751f\u5f02\u5e38\u3002\\n\\n\u81f3\u6b64\u6211\u4eec\u5df2\u7ecf\u5bf9 TCP \u7684\u4e09\u6b21\u63e1\u624b\u4e0e\u56db\u6b21\u6325\u624b\u6709\u4e86\u521d\u6b65\u7684\u7406\u89e3\uff0c\u540e\u6587\u4f1a\u66f4\u52a0\u8be6\u7ec6\u7684\u8bf4\u660e\u5728 TCP \u7684\u63e1\u624b\u4e0e\u6325\u624b\u65f6\u53cc\u65b9\u7684\u72b6\u6001\u8f6c\u6362\u3002"}]}')}}]);