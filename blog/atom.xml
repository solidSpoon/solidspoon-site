<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://solidspoon.xyz/blog</id>
    <title>solidSpoon's site Blog</title>
    <updated>2022-06-16T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://solidspoon.xyz/blog"/>
    <subtitle>solidSpoon's site Blog</subtitle>
    <icon>https://solidspoon.xyz/img/logoo.svg</icon>
    <entry>
        <title type="html"><![CDATA[锁库大师]]></title>
        <id>https://solidspoon.xyz/blog/inventory-lock-master</id>
        <link href="https://solidspoon.xyz/blog/inventory-lock-master"/>
        <updated>2022-06-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[背景]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="背景">背景<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E8%83%8C%E6%99%AF" class="hash-link" aria-label="背景的直接链接" title="背景的直接链接">​</a></h2>
<p>希望在顾客下单时对库存明细表中的商品进行库存锁定，库存明细表简化后如下所示：</p>
<p><img loading="lazy" src="https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/202206130943348.png" alt="背景" class="img_ev3q"></p>
<p>可见一条产品编码有可能存在多条库存明细，客户的订单大致会锁定几十行的库存，要求如下：</p>
<ul>
<li>尽可能快，并发也高，支持多节点</li>
<li>为了数据的一致性，最好不用 redis 扣减的方案</li>
<li>锁库同时在锁库流水表中插入锁库记录</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="优化方案">优化方案<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88" class="hash-link" aria-label="优化方案的直接链接" title="优化方案的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="分析">分析<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E5%88%86%E6%9E%90" class="hash-link" aria-label="分析的直接链接" title="分析的直接链接">​</a></h3>
<p>通过分析系统现有的方案，发现锁库操作时间主要浪费在更新库存明细的锁库数量上，为了防止超卖，每一条更新必须加上库存校验（如下所示），一旦失败就要回滚，在加之 MySQL 并没有提供原生批量更新方法，只能每行库存执行一条 SQL，导致锁库时间较长。</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">stock_quantity </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> locking_quantity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="提高锁库速度">提高锁库速度<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E6%8F%90%E9%AB%98%E9%94%81%E5%BA%93%E9%80%9F%E5%BA%A6" class="hash-link" aria-label="提高锁库速度的直接链接" title="提高锁库速度的直接链接">​</a></h3>
<p>优化的第一步就是想要提高批量锁库的速度，有没有方法能够在 MySQL 中模拟批量更新呢？</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="when-语句">WHEN 语句<a href="https://solidspoon.xyz/blog/inventory-lock-master#when-%E8%AF%AD%E5%8F%A5" class="hash-link" aria-label="WHEN 语句的直接链接" title="WHEN 语句的直接链接">​</a></h4>
<p>答案就是使用 SQL 的 <code>when</code> 语句，在程序中拼接出如下的 SQL</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">UPDATE</span><span class="token plain"> p_stock_instance a  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SET</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">CASE</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             </span><span class="token keyword" style="color:#00009f">WHEN</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'027dbba9c04a4ef0baab3983c64bc0b31123'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">THEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             </span><span class="token keyword" style="color:#00009f">WHEN</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'025d4574cd934b69993703e7e99e8ca43'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">THEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             </span><span class="token keyword" style="color:#00009f">WHEN</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'027dbba9c04a4ef0baab3983c64bc0b313'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">THEN</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">update_date      </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">now</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">CASE</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">WHEN</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'027dbba9c04a4ef0baab3983c64bc0b31123'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">THEN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_quantity </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">WHEN</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'025d4574cd934b69993703e7e99e8ca43'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">THEN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_quantity </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">WHEN</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'027dbba9c04a4ef0baab3983c64bc0b313'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">THEN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_quantity </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">ELSE</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>SQL 执行完毕后会返回更新行数，在程序中判断更新行数是否与预期相符即可判断是否更新成功，程序示意如下：</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Integer num = pStockInstanceDao.operationStockSmallData(operationMapping);  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if (num != operationMapping.size()) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    throw new RuntimeException("操作失败");  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这种方法的更新速度很快，在我的测试中，更新两万行库存记录的耗时大约 17 秒。但其实还有更快的方法。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="临时表">临时表<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E4%B8%B4%E6%97%B6%E8%A1%A8" class="hash-link" aria-label="临时表的直接链接" title="临时表的直接链接">​</a></h4>
<p>使用<strong>临时表更新库存</strong>的方法在数据量比较大的情况下比 WHEN 语句的性能好很多，测试条件下更新两万行库存记录耗时大约 1 秒</p>
<p>临时表是 MySQL 中的一种特殊表，他有如下几个特征：</p>
<ul>
<li>临时表是线程内可见，线程之间看不到其他线程创建的临时表</li>
<li>线程推出后临时表就被销毁</li>
<li>临时表与普通表重名时 MySQL 优先选择临时表操作</li>
</ul>
<p>本案例中创建临时表的语句如下：</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">temporary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> temp_stock_operation  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    stock_instance_id </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">64</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">unique</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">not</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">null</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">comment</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'库存实例ID'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    op_num            </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain">                  </span><span class="token operator" style="color:#393A34">not</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">null</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">comment</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'操作数量'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    success           </span><span class="token keyword" style="color:#00009f">tinyint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">default</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">not</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">null</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">comment</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'是否成功'</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>stock_instance_id</code> 就是库存明细表中的 <code>id</code></p>
<p><strong>更新库存时</strong>：</p>
<ol>
<li>创建临时表</li>
<li>先将每一行库存明细要锁定的库存数量插入到临时表中</li>
<li>然后通过 UPDATE JOIN 语句批量更新库存，同时将是否更新成功的信息保存在临时表的 <code>success</code> 字段中</li>
<li>统计 <code>success</code> 字段，判断是否回滚</li>
<li>删除临时表</li>
</ol>
<p>使用的 UPDATE 语句如下：</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">update</span><span class="token plain"> temp_stock_operation o </span><span class="token keyword" style="color:#00009f">inner</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> p_stock_instance s  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_instance_id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">set</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">success          </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">op_num  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_quantity </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">op_num  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">success </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>检查是否成功，该语句返回值为 0 或 1 。</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> success  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> temp_stock_operation  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> success </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>最后删除临时表：</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">drop</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">temporary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> temp_stock_operation</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="将二者结合">将二者结合<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E5%B0%86%E4%BA%8C%E8%80%85%E7%BB%93%E5%90%88" class="hash-link" aria-label="将二者结合的直接链接" title="将二者结合的直接链接">​</a></h4>
<p>虽然使用临时表的方案更新大量数据时很快，但是如果使用这个方法来更新几十条库存时就会发现速度又变慢了，在我的测试中，更新三四十条的耗时几乎与更新两万条相等。</p>
<p>就是说这条更新语句在数量少的时候性能会下降</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">update</span><span class="token plain"> temp_stock_operation o </span><span class="token keyword" style="color:#00009f">inner</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> p_stock_instance s  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_instance_id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">set</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">success          </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">op_num  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_quantity </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">op_num  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">success </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>分析它的执行计划，发现当更新行数小于 45 时，JOIN 操作便不会走索引，而是全表扫描，导致性能下降。这时候即使使用下面的 SQL 语句强制索引也是<strong>没用的</strong>。</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">update</span><span class="token plain"> temp_stock_operation o </span><span class="token keyword" style="color:#00009f">force</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">index</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">stock_instance_id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">inner</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> p_stock_instance s  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_instance_id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">set</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">success          </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">op_num  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_quantity </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">locking_quantity </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">op_num  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">success </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>所以我们要将这两种方法结合，来获得最佳的性能</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">if (operationMapping.size() &lt; 45) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // WHEN 语句方案</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Integer num = pStockInstanceDao.operationStockSmallData(operationMapping);  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (num != operationMapping.size()) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        throw new RuntimeException("操作失败");  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} else {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 临时表方案</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Boolean success = pStockInstanceDao.operationStockBigData(operationMapping);  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (!success) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        throw new RuntimeException("操作失败");  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="提高并发量">提高并发量<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E6%8F%90%E9%AB%98%E5%B9%B6%E5%8F%91%E9%87%8F" class="hash-link" aria-label="提高并发量的直接链接" title="提高并发量的直接链接">​</a></h3>
<p>由于并发时多个线程间存在竞态条件，可能导致库存扣减失败，而前面说到库存明细表中一件商品可能对应多条库存明细，就是说如果并发导致有一条库存明细扣减失败的话很可能这个商品在其他的库存明细中还有库存。而且由于无论更没更新成功，线程都会占有数据库行的写锁，这就要求我们更新失败时最好能够快速释放锁，这又会导致接口会误报库存不足。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="商品编码锁">商品编码锁<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E5%95%86%E5%93%81%E7%BC%96%E7%A0%81%E9%94%81" class="hash-link" aria-label="商品编码锁的直接链接" title="商品�编码锁的直接链接">​</a></h4>
<p>一个解决办法如下</p>
<ol>
<li>线程在执行库存数量查询前为订单中的每个商品编码获取一个分布式锁，只有获得全部商品编码的锁时才进行库存的查询操作</li>
<li>线程在更新完库存后释放所持有的商品编码锁</li>
</ol>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">RLock[] locks = productSids.seream()  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .distinct()  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .map(key -&gt; "ced:pStockInstance:" + key)  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .sorted()  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .map(key -&gt; redissonClient.getLock(key))  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .toArray(RLock[]::new);  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RLock skuLock = redissonClient.getMultiLock(locks);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 加锁</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">skuLock.lock();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 解锁</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">skuLock.unlockAsync();</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这种方法当所有的订单都锁定同一个商品时就会导致程序退化成串行执行，效率很慢。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="和并请求">和并请求<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E5%92%8C%E5%B9%B6%E8%AF%B7%E6%B1%82" class="hash-link" aria-label="和并请求的直接链接" title="和并请求的直接链接">​</a></h4>
<p>由于前文我们已经将库存更新的方法优化的足够快，因此想高效地解决竞态条件的问题，可以将各个请求的参数在应用程序中合并在一起，然后使用一个线程批量扣减，从而避免线程间扣减冲突。</p>
<p><img loading="lazy" src="https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/202206130944601.png" alt="合并请求" class="img_ev3q"></p>
<p>使线程阻塞并被唤醒的关键代码如下</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class GuardedObject&lt;T, K&gt; {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //受保护的对象  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    T obj;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    final Lock lock = new ReentrantLock();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    final Condition done = lock.newCondition();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    final int timeout = 60;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //保存所有GuardedObject  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    final static Map&lt;Object, GuardedObject&gt; gos = new ConcurrentHashMap&lt;&gt;();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public GuardedObject(K key) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        this.key = key;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    K key;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 1. 被请求线程通过唯一 key 获得阻塞对象，然后将 key 存入消息，发送到扣减中心  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static &lt;K&gt; GuardedObject create(K key) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        GuardedObject go = new GuardedObject(key.toString());  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        gos.put(key, go);  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return go;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 2. 被请求线程稍后调用阻塞对象的该方法，阻塞，等待被唤醒</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public Optional&lt;T&gt; get(Predicate&lt;T&gt; p) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        lock.lock();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Long start = System.currentTimeMillis();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            while (!p.test(obj)) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                done.await(timeout, TimeUnit.SECONDS);  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (System.currentTimeMillis() - start &gt;= timeout * 1000) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    gos.remove(key);  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    break;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return Optional.ofNullable(obj);  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (InterruptedException e) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throw new RuntimeException(e);  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } finally {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            lock.unlock();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 3. 结果监听器根据结果消息中的 key 找到对应阻塞对象，传入结果并唤醒对应线程</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static &lt;K, T&gt; void fireEvent(K key, T obj) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        GuardedObject go = gos.remove(key);  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (go != null) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            go.onChanged(obj);  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //事件通知方法  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    void onChanged(T obj) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        lock.lock();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.obj = obj;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            done.signalAll();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } finally {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            lock.unlock();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="性能测试">性能测试<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95" class="hash-link" aria-label="性能测��试的直接链接" title="性能测试的直接链接">​</a></h2>
<p>实验环境为了获得最坏情况下的性能，在库存明细中存入了两万五千条同一商品，并将每一条的数据的库存数量设置为 1</p>
<p>在我的电脑中启动两个服务接收请求，启动若干线程对该商品进行扣减，结果如下</p>
<table><thead><tr><th>请求线程数量</th><th>总计锁库行数</th><th>全部处理耗时</th></tr></thead><tbody><tr><td>100</td><td>1000</td><td>1 S</td></tr><tr><td>500</td><td>5000</td><td>3 S</td></tr><tr><td>1000</td><td>10000</td><td>4 S</td></tr><tr><td>2000</td><td>20000</td><td>8 S</td></tr><tr><td>3000</td><td>25000</td><td>12 S</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="注意事项">注意事项<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9" class="hash-link" aria-label="注意事项的直接链接" title="注意事项的直接链接">​</a></h2>
<p>以下是我在编写代码时发现的一些需要注意的点：</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="唯一索引">唯一索引<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95" class="hash-link" aria-label="唯一索引的直接链接" title="唯一索引的直接链接">​</a></h3>
<p>在创建临时表时 <code>stock_instance_id</code> 要创建唯一索引，因为这个字段要充当 JOIN 语句的条件，实测不加唯一索引性能会很差。</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">temporary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> temp_stock_operation  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    stock_instance_id </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">64</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">unique</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">not</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">null</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">comment</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'库存实例ID'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="加快消息队列读取">加快消息队列读取<a href="https://solidspoon.xyz/blog/inventory-lock-master#%E5%8A%A0%E5%BF%AB%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E8%AF%BB%E5%8F%96" class="hash-link" aria-label="加快消息队列读取的直接链接" title="加快消息队列读��取的直接链接">​</a></h3>
<p>扣减中心的库存扣减线程直接从消息队列读取消息效率较低，在本案例中，可以新建一个本地队列，用其他线程将消息队列中的消息搬运到本地队列，让扣减线程操作本地队列而不是消息队列，这样可以大幅提高扣减效率。</p>
<hr>
<p>源码请见：<a href="https://github.com/solidSpoon/inventory-lock-master" target="_blank" rel="noopener noreferrer">https://github.com/solidSpoon/inventory-lock-master</a></p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spring 事务传播特性]]></title>
        <id>https://solidspoon.xyz/blog/spring-transaction-propagation-characteristics</id>
        <link href="https://solidspoon.xyz/blog/spring-transaction-propagation-characteristics"/>
        <updated>2022-06-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[问题]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题">问题<a href="https://solidspoon.xyz/blog/spring-transaction-propagation-characteristics#%E9%97%AE%E9%A2%98" class="hash-link" aria-label="问题的直接链接" title="问题的直接链接">​</a></h2>
<p>在项目中写出了如下模式的代码</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@Override  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Transactional  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void parent() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 期望：parent() 不回滚</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    balabalaService.child();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Override    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void child() {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        balabalaService.grandChild();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } catch (Exception ignore) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 忽略异常  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Override  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Transactional  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void grandChild() {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 通过抛出异常回滚当前事务  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    throw new RuntimeException("grandChild");  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上面的代码在 <code>parent()</code> 方法中通过 <code>child()</code> 调用了 <code>grandChild()</code> ，期望 <code>grandChild()</code> 回滚时 <code>parent()</code> 不会回滚。</p>
<p>这段代码实际上是不会按照预期工作的，<code>parent()</code> 方法也会跟着回滚。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解释">解释<a href="https://solidspoon.xyz/blog/spring-transaction-propagation-characteristics#%E8%A7%A3%E9%87%8A" class="hash-link" aria-label="解释的直接链接" title="解释的直接链接">​</a></h2>
<p>当 <code>grandChild()</code> 抛出异常时，会将当前事务标记为回滚，虽然 <code>child()</code> 中捕获了异常，看似 <code>parent()</code> 不会因为异常而回滚，但由于事务的传播特性，现在 <code>grandChild()</code> 与 <code>parent()</code> 处于一个事务中，因此实际上是 <code>parent()</code> 的事务被 <code>grandChild()</code> 标记为了回滚，导致 <code>parent()</code> 发生回滚。</p>
<h1>解决</h1>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="nested">NESTED<a href="https://solidspoon.xyz/blog/spring-transaction-propagation-characteristics#nested" class="hash-link" aria-label="NESTED的直接链接" title="NESTED的直接链接">​</a></h2>
<p>既然 <code>parent()</code> 和 <code>grandChild()</code> 两个方法处在一个事务中，我就想能不能在 <code>child()</code> 方法上新建一个嵌套事务，这样 <code>grandChild()</code> 便与 <code>child()</code> 处于同一个事物，因此 <code>grandChild()</code> 回滚时就不会导致 <code>parent()</code> 回滚。</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@Override  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Transactional  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void parent() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 期望：parent() 不回滚</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    balabalaService.child();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 开启嵌套事务</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Transactional(propagation = Propagation.NESTED)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void child() {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        balabalaService.grandChild();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } catch (Exception ignore) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 忽略异常  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Override  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Transactional  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void grandChild() {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 通过抛出异常回滚当前事务  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    throw new RuntimeException("grandChild");  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这段代码看起来没啥问题，<code>grandChild()</code> 与  <code>child()</code> 处于同一个嵌套事务中，嵌套事务的回滚不会影响外层事务的回滚，同时又在 <code>child()</code> 捕获了所有的异常，因此外部事物也不会因为接收到异常而回滚，然而事实也不是这样的。</p>
<p><code>grandChild()</code> 方法的事务传播特性为默认值 <code>REQUIRED</code> ，他的特性之一是「支持当前事务」，那么当前事务是什么呢？</p>
<p>通过[[Spring Boot 打印事务日志]]等方式发现当前事务是 <code>parent()</code> 方法的事务，也就是说 <code>Propagation.NESTED</code> 方式创建的事务不是真正的事务，实际上他只是 MySQL 中的一个「savepoint」，导致 <code>grandChild()</code> 仍然与  <code>child()</code> 处在同一个事物中。</p>
<blockquote>
<p>The SAVEPOINT in MySQL is used for dividing (or) breaking a transaction into multiple units so that the user has a chance of roll backing the transaction up to a specified point. That means using Save Point we can roll back a part of a transaction instead of the entire transaction.</p>
</blockquote>
<p>可见：<strong>NESTED 中调用带事务的方法可能导致外层事务回滚</strong></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="requires_new">REQUIRES_NEW<a href="https://solidspoon.xyz/blog/spring-transaction-propagation-characteristics#requires_new" class="hash-link" aria-label="REQUIRES_NEW的直接链接" title="REQUIRES_NEW的直接链接">​</a></h2>
<p>解决办法就是使用 <code>Propagation.REQUIRES_NEW</code> 创建一个真正的事务。</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@Override  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Transactional  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void parent() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 期望：parent() 不回滚</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    balabalaService.child();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 开启嵌套事务</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Transactional(propagation = Propagation.Propagation.REQUIRES_NEW)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void child() {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        balabalaService.grandChild();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } catch (Exception ignore) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 忽略异常  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Override  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Transactional  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void grandChild() {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 通过抛出异常回滚当前事务  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    throw new RuntimeException("grandChild");  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这种情况下，Spring 会暂停当前的事务链接，使用一个新的链接启动一个新的事务，也就是说 <code>REQUIRES_NEW</code> 的事务跟普通的事务是完全一样的。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="catch-exception">Catch Exception<a href="https://solidspoon.xyz/blog/spring-transaction-propagation-characteristics#catch-exception" class="hash-link" aria-label="Catch Exception的直接链接" title="Catch Exception的直接链接">​</a></h2>
<p>此时再运行代码，会发现 <code>child()</code> 方法抛出了一个异常，描述为「Transaction rolled back because it has been marked as rollback-only」，很明显我们已经在 <code>child()</code> 中捕获了所有的异常，那这个异常就不是我们抛出的。由此得知，当事务被标记为 rollback-only 的时候，Spring 会在事务的方法上抛出一个异常。</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@Override  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Transactional  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void parent() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 期望：parent() 不回滚</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        balabalaService.child();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } catch (Exception e) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        e.printStackTrace();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 开启嵌套事务</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Transactional(propagation = Propagation.Propagation.REQUIRES_NEW)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void child() {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        balabalaService.grandChild();  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } catch (Exception ignore) {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 忽略异常  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Override  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Transactional  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void grandChild() {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 通过抛出异常回滚当前事务  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    throw new RuntimeException("grandChild");  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在 <code>parent()</code> 方法中捕获异常后，这段代码终于工作了。</p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[MongoDB 初探]]></title>
        <id>https://solidspoon.xyz/blog/exploring-mongodb</id>
        <link href="https://solidspoon.xyz/blog/exploring-mongodb"/>
        <updated>2022-04-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[对于已经熟悉 MySQL 的同学来说，初次接触 MongoDB 可能会不习惯它的语法，本篇文章将通过一个简单的示例带你入门 MongoDB。]]></summary>
        <content type="html"><![CDATA[<p>对于已经熟悉 MySQL 的同学来说，初次接触 MongoDB 可能会不习惯它的语法，本篇文章将通过一个简单的示例带你入门 MongoDB。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="准备">准备<a href="https://solidspoon.xyz/blog/exploring-mongodb#%E5%87%86%E5%A4%87" class="hash-link" aria-label="准备的直接链接" title="准备的直接链接">​</a></h2>
<p>对于 MongoDB 新手，可以借助 DataGrip 来学习MongoDB 语法。在 MongoDB 中实现准备好两个表 "old" 和 "new"，并随意插入一些数据</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">db</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">createCollection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"new"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">createCollection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"old"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">old</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">insertOne</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> old  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">new</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">insertOne</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">13</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token literal-property property" style="color:#36acaa">goods</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 随意插入数据</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在 DataGrip 中输入如下的 SQL 语句</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"new"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> aleft </span><span class="token keyword" style="color:#00009f">left</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">join</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"old"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> bright </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> aleft</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> bright</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后在这条语句上「右键」，选择 「Show JS Script」，会发现 DataGrip 会帮助我们将 SQL 语句转为 MongoDB 语句，接下来我们通过研究这个语句来体会 MongoDB 的基本思想</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">db</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getSiblingDB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"test"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getCollection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"new"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">aggregate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">$project</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">"aleft"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$$ROOT"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-property property" style="color:#36acaa">"_id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">$lookup</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">localField</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"aleft.id"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword module" style="color:#00009f">from</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"old"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">foreignField</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"id"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword module" style="color:#00009f">as</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"bright"</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">$unwind</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">path</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$bright"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">preserveNullAndEmptyArrays</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">$replaceRoot</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">newRoot</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">$mergeObjects</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"$aleft"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$bright"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$$ROOT"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">$project</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">"aleft"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-property property" style="color:#36acaa">"bright"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="分析">分析<a href="https://solidspoon.xyz/blog/exploring-mongodb#%E5%88%86%E6%9E%90" class="hash-link" aria-label="分析的直接链接" title="分析的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="aggregate">aggregate<a href="https://solidspoon.xyz/blog/exploring-mongodb#aggregate" class="hash-link" aria-label="aggregate的直接链接" title="aggregate的直接链接">​</a></h3>
<p><code>db.collection.aggregate(管道，选项)</code> 方法参数接收一个包含了若干操作的数组，类似于 Linux 中的管道一样，对集合依次进行操作。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="project">project<a href="https://solidspoon.xyz/blog/exploring-mongodb#project" class="hash-link" aria-label="project的直接链接" title="project的直接链接">​</a></h3>
<p>第一个操作为 <code>$project</code> ，这是一个映射操作</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $project: {"aleft": "$$ROOT", "_id": 0}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>其中 <code>$$ROOT</code> 即引用顶级文档，效果是将当前文档（行）的所有数据放到 <code>aleft</code> 字段下。<code>"_id": 0</code> 代表隐藏 <code>_id</code> 行，当设定为 <code>"_id": 1</code> 时会展示 <code>_id</code> 行，（<code>_id</code> 由 MongoDB 自动生成）结果示意如下：</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "aleft": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "6247f1e253a1be11c3b88d8b"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": 12  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "_id": {"$oid": "624ce445b67f62529d94a83e"}, // 当 _id: 1 时会展示 id </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "aleft": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "624ce445b67f62529d94a83e"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 2,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": 13,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "goods": 1  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="lookup">lookup<a href="https://solidspoon.xyz/blog/exploring-mongodb#lookup" class="hash-link" aria-label="lookup的直接链接" title="lookup的直接链接">​</a></h3>
<p>第二个操作为</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $lookup: {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      localField: "aleft.id",  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      from: "old",  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      foreignField: "id",  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      as: "bright" </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>顾名思义，这是一个查找操作，它根据第一步结果中的 <code>aleft.id</code> 字段，在 <code>old</code> 表中查找 <code>id</code> 与之相等的文档（行），并将所有匹配的结果以数组方式放在 <code>bright</code> 字段下，结果示意如下：</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "aleft": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "6247f1e253a1be11c3b88d8b"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": 12  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     },  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "bright": [  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "_id": {"$oid": "624ce82ab67f62529d94a84c"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "name": "haha"  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "_id": {"$oid": "624ce867b67f62529d94a84e"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "vbsss": "haha"  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ]  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="unwind">unwind<a href="https://solidspoon.xyz/blog/exploring-mongodb#unwind" class="hash-link" aria-label="unwind的直接链接" title="unwind的直接链接">​</a></h3>
<p>第三个操作为</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $unwind: {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      path: "$bright",  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      preserveNullAndEmptyArrays: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  } </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个操作指明了使用 <code>$bright</code> 字段，这个字段是一个数组，<code>$unwind</code> 操作会将 <code>$bright</code> 中的每一个元素与 <code>aleft</code> 组合</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "aleft": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "6247f1e253a1be11c3b88d8b"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": 12  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "bright": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "624ce82ab67f62529d94a84c"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": "haha"  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "aleft": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "6247f1e253a1be11c3b88d8b"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": 12  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     },  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "bright": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "624ce867b67f62529d94a84e"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "vbsss": "haha"  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>至此，我们已经将两个表中关联的行组合在了一起，接下来需要将这个结构简化一下</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="replaceroot">replaceRoot<a href="https://solidspoon.xyz/blog/exploring-mongodb#replaceroot" class="hash-link" aria-label="replaceRoot的直接链接" title="replaceRoot的直接链接">​</a></h3>
<p>第四个操作为</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $replaceRoot: {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      newRoot: {$mergeObjects: ["$aleft", "$bright", "$$ROOT"]}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="mergeobjects">mergeObjects<a href="https://solidspoon.xyz/blog/exploring-mongodb#mergeobjects" class="hash-link" aria-label="mergeObjects的直接链接" title="mergeObjects的直接链接">​</a></h3>
<p><code>$mergeObjects</code> 操作会将参数中元素的内容进行合并，如果有重复，后面的值会覆盖前面的值，比如下面的这个文档</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "aleft": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "6247f1e253a1be11c3b88d8b"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": 12  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "bright": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "624ce82ab67f62529d94a84c"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": "haha"  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>执行 <code>$mergeObjects: ["$aleft", "$bright", "$$ROOT"]</code> 操作后结果如下</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "_id": {"$oid": "6247f1e253a1be11c3b88d8b"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "aleft": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "6247f1e253a1be11c3b88d8b"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": 12  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "bright": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "624ce82ab67f62529d94a84c"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": "haha"  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "name": "haha"  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="replaceroot-1">replaceRoot<a href="https://solidspoon.xyz/blog/exploring-mongodb#replaceroot-1" class="hash-link" aria-label="replaceRoot的直接链接" title="replaceRoot的直接链接">​</a></h3>
<p><code>$replaceRoot</code> 将指定的文档提升到顶层，并丢弃顶层所有其他字段。</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "_id": {"$oid": "6247f1e253a1be11c3b88d8b"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "aleft": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "6247f1e253a1be11c3b88d8b"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": 12  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "bright": {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "_id": {"$oid": "624ce82ab67f62529d94a84c"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": "haha"  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "name": "haha"  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>至此，只要将 <code>aleft</code> 和 <code>bright</code> 两个参数删掉就得到了最后的结果，操作为</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $project: {"aleft": 0, "bright": 0}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>结果示意如下</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "_id": {"$oid": "6247f1e253a1be11c3b88d8b"},  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "id": 1,  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "name": "haha"  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他">其他<a href="https://solidspoon.xyz/blog/exploring-mongodb#%E5%85%B6%E4%BB%96" class="hash-link" aria-label="其他的直接链接" title="其他的直接链接">​</a></h2>
<p>MongoDB 中的 JOIN 操作还是十分复杂的，与 MySQL 不同， MongoDB 中的文档结构并没有限制，所以可以采用<a href="https://www.mongodb.com/docs/v4.2/tutorial/query-embedded-documents/" target="_blank" rel="noopener noreferrer">嵌套文档</a>的方式将本来需要关联的数据保存在一起，从而避免 JOIN 操作</p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="MongoDB" term="MongoDB"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ClashForWindows tap 模式无法正常连接网络]]></title>
        <id>https://solidspoon.xyz/blog/clash-for-windows-tap-mode-cannot-connect-to-network-normally</id>
        <link href="https://solidspoon.xyz/blog/clash-for-windows-tap-mode-cannot-connect-to-network-normally"/>
        <updated>2022-02-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[ClashForWindows 正常情况下只能代理通过 Http 或 Socks 代理工作。这两种协议工作在网络模型中的较高层级，可能无法代理系统全部的流量，比如对 SSH 或 WSL 等不起作用，使用时需要对这些应用单独配置。其实下面这几个选项可以让 ClashForWindows 有能力在 TCP/IP 层级工作，从而代理系统全部流量，具体的教程参见官方文档]]></summary>
        <content type="html"><![CDATA[<p>ClashForWindows 正常情况下只能代理通过 Http 或 Socks 代理工作。这两种协议工作在网络模型中的较高层级，可能无法代理系统全部的流量，比如对 SSH 或 WSL 等不起作用，使用时需要对这些应用单独配置。其实下面这几个选项可以让 ClashForWindows 有能力在 TCP/IP 层级工作，从而代理系统全部流量，具体的教程参见<a href="https://docs.cfw.lbyczf.com/contents/tun.html#windows" target="_blank" rel="noopener noreferrer">官方文档</a></p>
<p><img loading="lazy" src="https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/2021/12/02/20211202-230605.png" alt="image-20211202230604161" class="img_ev3q"></p>
<p>这里主要提一下通过官方文档操作之后无法正常代理的情况，这种情况 GitHub 的 issue 上已经有了解决方案，<a href="https://github.com/Fndroid/clash_for_windows_pkg/issues/1243" target="_blank" rel="noopener noreferrer">链接</a>。如果你也连不上网，不妨排查一下网卡的驱动或相关应用</p>
<p><img loading="lazy" src="https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/2021/12/02/20211202-231144.png" alt="image-20211202231142928" class="img_ev3q"></p>
<p>使用上述方法代理系统全部流量时，可以关闭 ClashForWindows 的 System Proxy 开关，也会正常工作。</p>
<p>需要提及一下，这种方法虽然可以代理全部系统流量，看起来十分强大，但它的性能不如直接使用 Http 或 Socks 代理，所以还是要看情况使用不同的代理方案。</p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="教程" term="教程"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java 函数式编程详解]]></title>
        <id>https://solidspoon.xyz/blog/java-functional-programming-explained</id>
        <link href="https://solidspoon.xyz/blog/java-functional-programming-explained"/>
        <updated>2021-09-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[概要]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="概要">概要<a href="https://solidspoon.xyz/blog/java-functional-programming-explained#%E6%A6%82%E8%A6%81" class="hash-link" aria-label="概要的直接链接" title="概要的直接链接">​</a></h2>
<p>首先一个简单的示例展示一下什么是函数式编程</p>
<p>假设我们有一个「Person」列表</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">List&lt;Person&gt; people = List.of(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new Person("John", MALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new Person("Maria", FEMALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new Person("Aisha", FEMALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new Person("Alex", MALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new Person("Alice", FEMALE)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>「Person」的定义如下</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">private record Person(String name, Gender gender) {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enum Gender {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MALE, FEMALE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果我们想在列表中找到 FEMALE，我们可以使用这样的命令式方法</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">List&lt;Person&gt; females = new ArrayList&lt;&gt;();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">for (Person person : people) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (FEMALE.equals(person.gender)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        females.add(person);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">for (Person female : females) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    System.out.println(female);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>但它在声明式方法中更简洁</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Predicate&lt;Person&gt; personPredicate = person -&gt; FEMALE.equals(person.gender);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var females2 = people.stream().filter(personPredicate)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .collect(Collectors.toList());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//          .forEach(System.out::println);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">females2.forEach(System.out::println);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<p>完整代码如下：</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class Main {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        List&lt;Person&gt; people = List.of(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new Person("John", MALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new Person("Maria", FEMALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new Person("Aisha", FEMALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new Person("Alex", MALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new Person("Alice", FEMALE)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println("Imperative approach");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // Imperative approach</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        List&lt;Person&gt; females = new ArrayList&lt;&gt;();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for (Person person : people) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (FEMALE.equals(person.gender)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                females.add(person);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for (Person female : females) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println(female);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // Declarative approach</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println("Declarative approach");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Predicate&lt;Person&gt; personPredicate = person -&gt; FEMALE.equals(person.gender);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var females2 = people.stream().filter(personPredicate)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .collect(Collectors.toList());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                .forEach(System.out::println);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        females2.forEach(System.out::println);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private record Person(String name, Gender gender) {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    enum Gender {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        MALE, FEMALE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="function-and-bifunction">Function and BiFunction<a href="https://solidspoon.xyz/blog/java-functional-programming-explained#function-and-bifunction" class="hash-link" aria-label="Function and BiFunction的直接链接" title="Function and BiFunction的直接链接">​</a></h2>
<p><code>Function</code> 表示接受一个参数 &lt;T&gt; 并产生结果 &lt;R&gt; 的函数。</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Function&lt;T, R&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以下是 <code>Function</code> 的一些例子</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static Function&lt;Integer, Integer&gt; incrementByOneFunction = number -&gt; number + 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">static Function&lt;Integer, Integer&gt; multiplyBy10Function = number -&gt; number * 10;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var increment2 = incrementByOneFunction.apply(1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var multiply = multiplyBy10Function.apply(increment2);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>酷，如果你看不懂，那么我们之前用命令式编程是这么写的</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static int incrementByOne(int number) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return number + 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var increment = incrementByOne(1);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>更进一步，我们可以结合两个 Function</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">var addBy1AndThenMultiplyBy10 = incrementByOneFunction.andThen(multiplyBy10Function);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var ans = addBy1AndThenMultiplyBy10.apply(4);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>BiFunction</code> 表示一个接受两个参数并产生结果的函数。</p>
<p>作为对比，这是一个传统的二参数方法</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static int incrementByOneAndMultiply(int number, int numberToMultiplyBy) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return (number + 1) * numberToMultiplyBy;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">incrementByOneAndMultiply(4, 100);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在函数式编程中，我们这样写</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static BiFunction&lt;Integer, Integer, Integer&gt; incrementByOneAndMultiplyBiFunction =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        (numberToIncrementByOne, numberToMultiplyBy)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                -&gt; (numberToIncrementByOne + 1) * numberToMultiplyBy;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">incrementByOneAndMultiplyBiFunction.apply(4, 100);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<p>完整代码</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class _Function {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // Function takes 1 argument and produce 1 result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var increment = incrementByOne(1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(increment);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var increment2 = incrementByOneFunction.apply(1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(increment2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var multiply = multiplyBy10Function.apply(increment2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(multiply);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var addBy1AndThenMultiplyBy10 = incrementByOneFunction.andThen(multiplyBy10Function);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var ans = addBy1AndThenMultiplyBy10.apply(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(ans);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // BiFunction takes 2 argument and produce 1 result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(incrementByOneAndMultiply(4, 100));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(incrementByOneAndMultiplyBiFunction.apply(4, 100));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static Function&lt;Integer, Integer&gt; incrementByOneFunction = number -&gt; number + 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static Function&lt;Integer, Integer&gt; multiplyBy10Function = number -&gt; number * 10;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static int incrementByOne(int number) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return number + 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static BiFunction&lt;Integer, Integer, Integer&gt; incrementByOneAndMultiplyBiFunction =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            (numberToIncrementByOne, numberToMultiplyBy)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    -&gt; (numberToIncrementByOne + 1) * numberToMultiplyBy;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static int incrementByOneAndMultiply(int number, int numberToMultiplyBy) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return (number + 1) * numberToMultiplyBy;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="consumer-and-biconsumer">Consumer and BiConsumer<a href="https://solidspoon.xyz/blog/java-functional-programming-explained#consumer-and-biconsumer" class="hash-link" aria-label="Consumer and BiConsumer的直接链接" title="Consumer and BiConsumer的直接链接">​</a></h2>
<p><code>Consumer</code> 表示接受单个输入参数并且不返回结果的操作。与大多数其他 Functional interface 不同，<strong><code>Consumer</code> 预计通过副作用进行操作</strong>。</p>
<p>我们的 <code>Customer</code> 定义如下</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static record Customer(String customerName, String customerPhoneNumber) {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var maria = new Customer("Maria", "99999");</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在命令式编程中，我们这样编写代码</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static void greetConsumer(Customer customer) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    System.out.println("Hello" + customer.customerName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            + ", thanks for registering phone number "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            + customer.customerPhoneNumber);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">greetConsumer(maria);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在函数式编程中，我们这样编写代码</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static Consumer&lt;Customer&gt; greetCustomerConsumer = customer -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println("Hello" + customer.customerName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                + ", thanks for registering phone number "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                + customer.customerPhoneNumber);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">greetCustomerConsumer.accept(maria);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>BiConsumer</code> 是 <code>Consumer</code> 的二参数版本，它表示一个接受两个输入参数并且不返回结果的操作。</p>
<p>我们通常编写下面这种命令式编程方法</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static void greetConsumerV2(Customer customer, boolean showPhoneNumber) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    System.out.println("Hello" + customer.customerName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            + ", thanks for registering phone number "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            + (showPhoneNumber ? customer.customerPhoneNumber : "*********"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">greetConsumerV2(maria, false);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这是函数式编程版本</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static BiConsumer&lt;Customer, Boolean&gt; greetCustomerConsumerV2 = (customer, showPhoneNumber) -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println("Hello" + customer.customerName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                + ", thanks for registering phone number "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                + (showPhoneNumber ? customer.customerPhoneNumber : "*********"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">greetCustomerConsumerV2.accept(maria, false);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<p>全部代码</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class _Consumer {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var maria = new Customer("Maria", "99999");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // Normal java function</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        greetConsumer(maria);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // Consumer Functional interface</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        greetCustomerConsumer.accept(maria);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        greetCustomerConsumerV2.accept(maria, false);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        greetConsumerV2(maria, false);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static BiConsumer&lt;Customer, Boolean&gt; greetCustomerConsumerV2 = (customer, showPhoneNumber) -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("Hello" + customer.customerName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    + ", thanks for registering phone number "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    + (showPhoneNumber ? customer.customerPhoneNumber : "*********"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static Consumer&lt;Customer&gt; greetCustomerConsumer = customer -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("Hello" + customer.customerName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    + ", thanks for registering phone number "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    + customer.customerPhoneNumber);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static void greetConsumer(Customer customer) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println("Hello" + customer.customerName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                + ", thanks for registering phone number "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                + customer.customerPhoneNumber);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static void greetConsumerV2(Customer customer, boolean showPhoneNumber) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println("Hello" + customer.customerName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                + ", thanks for registering phone number "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                + (showPhoneNumber ? customer.customerPhoneNumber : "*********"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static record Customer(String customerName, String customerPhoneNumber) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="predicate">Predicate<a href="https://solidspoon.xyz/blog/java-functional-programming-explained#predicate" class="hash-link" aria-label="Predicate的直接链接" title="Predicate的直接链接">​</a></h2>
<p><code>Predicate</code> 表示一个布尔值函数</p>
<p>在命令式编程中通过这样写达到相同目的</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static boolean isPhoneNumberValid(String phoneNumber) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return phoneNumber.startsWith("07") &amp;&amp; phoneNumber.length() == 11;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var phoneNumberValid = isPhoneNumberValid("07000000000");</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在函数式编程中，你可以这样写</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static Predicate&lt;String&gt; isPhoneNumberValidPredicate = phoneNumber -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        phoneNumber.startsWith("07") &amp;&amp; phoneNumber.length() == 11;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">static Predicate&lt;String&gt; containsNumber3 = phoneNumber -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        phoneNumber.contains("3");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println(isPhoneNumberValidPredicate.test("09009877300"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "Is phone number valid and contains number 3 = " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                isPhoneNumberValidPredicate.and(containsNumber3).test("07009877300")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var isPhoneNumberValidAndContainsNumber3 = isPhoneNumberValidPredicate.or(containsNumber3);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "Is phone number valid or contains number 3 = " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                isPhoneNumberValidAndContainsNumber3.test("07000000000")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>还记得我们在概要中写的代码 <code>stream().filter()</code> 吗？</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">var females2 = people.stream().filter(person -&gt; FEMALE.equals(person.gender))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .collect(Collectors.toList());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>filter</code> 接收的参数就是 <code>Predicate</code> ，在 idea 中使用快捷键 「Ctrl + Alt + V」将它的参数提取成变量，我们就会看到 <code>Predicate</code></p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Predicate&lt;Person&gt; personPredicate = person -&gt; FEMALE.equals(person.gender);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var females2 = people.stream().filter(personPredicate)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .collect(Collectors.toList());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<p>完整代码</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class _Predicate {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println("Without predicate");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var phoneNumberValid = isPhoneNumberValid("07000000000");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(phoneNumberValid);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(isPhoneNumberValid("0700000000"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(isPhoneNumberValid("09009877300"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println("With Predicate");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(isPhoneNumberValidPredicate.test("07000000000"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(isPhoneNumberValidPredicate.test("0700000000"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(isPhoneNumberValidPredicate.test("09009877300"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "Is phone number valid and contains number 3 = " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        isPhoneNumberValidPredicate.and(containsNumber3).test("07009877300")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var isPhoneNumberValidAndContainsNumber3 = isPhoneNumberValidPredicate.or(containsNumber3);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "Is phone number valid or contains number 3 = " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        isPhoneNumberValidAndContainsNumber3.test("07000000000")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static boolean isPhoneNumberValid(String phoneNumber) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return phoneNumber.startsWith("07") &amp;&amp; phoneNumber.length() == 11;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static Predicate&lt;String&gt; isPhoneNumberValidPredicate = phoneNumber -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            phoneNumber.startsWith("07") &amp;&amp; phoneNumber.length() == 11;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static Predicate&lt;String&gt; containsNumber3 = phoneNumber -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            phoneNumber.contains("3");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="supplier">Supplier<a href="https://solidspoon.xyz/blog/java-functional-programming-explained#supplier" class="hash-link" aria-label="Supplier的直接链接" title="Supplier的直接链接">​</a></h2>
<p><code>Supplier</code> 不接收任何参数并提供一个结果</p>
<p>在命令式编程中我们可以这样写</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static String getDbConnectionUrl() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return "jdbc://localhost:5432/users";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println(getDbConnectionUrl());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>函数式编程的版本</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static Supplier&lt;String&gt; getDbConnectionUrlSupplier = () -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "jdbc://localhost:5432/users";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">static Supplier&lt;List&lt;String&gt;&gt; getDbConnectionListUrlSupplier = () -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        List.of(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "jdbc://localhost:5432/users",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "jdbc://localhost:5432/customer"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println(getDbConnectionUrlSupplier.get());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println(getDbConnectionListUrlSupplier.get());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<p>完整代码</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class _Supplier {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(getDbConnectionUrl());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(getDbConnectionUrlSupplier.get());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(getDbConnectionListUrlSupplier.get());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static String getDbConnectionUrl() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return "jdbc://localhost:5432/users";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static Supplier&lt;String&gt; getDbConnectionUrlSupplier = () -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "jdbc://localhost:5432/users";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static Supplier&lt;List&lt;String&gt;&gt; getDbConnectionListUrlSupplier = () -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            List.of(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "jdbc://localhost:5432/users",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "jdbc://localhost:5432/customer"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="stream">Stream<a href="https://solidspoon.xyz/blog/java-functional-programming-explained#stream" class="hash-link" aria-label="Stream的直接链接" title="Stream的直接链接">​</a></h2>
<p>首先将前文的定义 Persion 的代码复制过来</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">private record Person(String name, Gender gender) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enum Gender {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MALE, FEMALE, PREFER_NOT_TO_SAY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">List&lt;Person&gt; people = List.of(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new Person("John", MALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new Person("Maria", FEMALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new Person("Aisha", FEMALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new Person("Alex", MALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new Person("Alice", FEMALE),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new Person("Bob", PREFER_NOT_TO_SAY)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>通过 Stream 来调用</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">people.stream()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .map(Person::name)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .mapToInt(String::length)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//        .collect(Collectors.toSet())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .forEach(System.out::println);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>我们可以把每一步的参数提取成变量，方便观察它们的类型</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Function&lt;Person, String&gt; personStringFunction = Person::name;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ToIntFunction&lt;String&gt; length = String::length;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        IntConsumer println = System.out::println;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        people.stream()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .map(personStringFunction)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .mapToInt(length)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                .collect(Collectors.toSet())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .forEach(println);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Stream 的其他用法</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Predicate&lt;Person&gt; personPredicate = person -&gt; FEMALE.equals(person.gender);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var containOnlyFemales = people.stream()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .allMatch(personPredicate);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println(containOnlyFemales);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var personHaveFemales = people.stream()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .anyMatch(personPredicate);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//      .noneMatch(personPredicate);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println(personHaveFemales);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="optional">Optional<a href="https://solidspoon.xyz/blog/java-functional-programming-explained#optional" class="hash-link" aria-label="Optional的直接链接" title="Optional的直接链接">​</a></h2>
<p><code>Optional</code> 会改变你处理空指针的方式</p>
<p>示例：</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">var value = Optional.ofNullable(null)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .orElseGet(() -&gt; "default value");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var value2 = Optional.ofNullable("hello")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .orElseGet(() -&gt; "default value");</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>示例2：</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Supplier&lt;IllegalStateException&gt; exception = () -&gt; new IllegalStateException("exception");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var value3 = Optional.ofNullable("hello")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .orElseThrow(exception);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>示例3：</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Optional.ofNullable("john.gmail.com")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .ifPresent(email -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                System.out.println("Sending email to " + email));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Optional.ofNullable(null)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .ifPresentOrElse(email -&gt; System.out.println("Sending email to " + email),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                () -&gt; System.out.println("Can not send email"));</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<p>完整代码</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class Main {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var value = Optional.ofNullable(null)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .orElseGet(() -&gt; "default value");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var value2 = Optional.ofNullable("hello")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .orElseGet(() -&gt; "default value");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(value2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Supplier&lt;IllegalStateException&gt; exception = () -&gt; new IllegalStateException("exception");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var value3 = Optional.ofNullable("hello")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .orElseThrow(exception);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Optional.ofNullable("john.gmail.com")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .ifPresent(email -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        System.out.println("Sending email to " + email));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Optional.ofNullable(null)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .ifPresentOrElse(email -&gt; System.out.println("Sending email to " + email),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        () -&gt; System.out.println("Can not send email"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="combinator-pattern">Combinator Pattern<a href="https://solidspoon.xyz/blog/java-functional-programming-explained#combinator-pattern" class="hash-link" aria-label="Combinator Pattern的直接链接" title="Combinator Pattern的直接链接">​</a></h2>
<p>我们有一个 Customer 类定义如下</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public record Customer(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String name,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String email,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String phoneNumber,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        LocalDate dob</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">) {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Customer customer = new Customer(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "Alice",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "alice@gmail.com",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "+089998879",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        LocalDate.of(2000, 1, 1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>我们想验证此人的信息是否合法。在命令式编程中，我们可以这样验证</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class CustomerValidatorService {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private boolean isEmailValid(String email) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return email.contains("@");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private boolean isPhoneNumberValid(String phoneNumber) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return phoneNumber.startsWith("+0");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private boolean isAdult(LocalDate dob) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return Period.between(dob, LocalDate.now()).getYears() &gt; 16;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public boolean isValid(Customer customer) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return isEmailValid(customer.email())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &amp;&amp; isPhoneNumberValid(customer.phoneNumber())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &amp;&amp; isAdult(customer.dob());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println(new CustomerValidatorService().isValid(customer));</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以看到，当我们需要添加验证项或者需要根据不同的用户启用不同的验证策略时，上面的方法需要改动太多的代码。这种方法的另一个缺点是：当验证失败时，我们无法知道对象的哪个属性没有通过验证，该方法只是返回一个失败的结果，这个结果并不包含细节。</p>
<p>我这里介绍的解决方案叫做 Combinator Pattern</p>
<p>为了能够返回方法的详细信息，我们首先定义一个枚举类</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">enum ValidationResult {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    SUCCESS,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PHONE_NUMBER_NOT_VALID,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    EMAIL_NOT_VALID,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    IS_NOT_AN_ADULT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>我们使用 <code>CustomerRegistrationValidator interface</code> 扩展 <code>Functional interface</code></p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public interface CustomerRegistrationValidator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        extends Function&lt;Customer, ValidationResult&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static CustomerRegistrationValidator isEmailValid() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return customer -&gt; customer.email().contains("@") ?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                SUCCESS : EMAIL_NOT_VALID;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static CustomerRegistrationValidator isPhoneNumberValid() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return customer -&gt; customer.phoneNumber().startsWith("+0") ?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                SUCCESS : PHONE_NUMBER_NOT_VALID;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static CustomerRegistrationValidator isAnAdult() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return customer -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Period.between(customer.dob(), LocalDate.now()).getYears() &gt; 16 ?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        SUCCESS : IS_NOT_AN_ADULT;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * test lazy load</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static CustomerRegistrationValidator printSomething() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return customer -&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("print something");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return SUCCESS;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    default CustomerRegistrationValidator and (CustomerRegistrationValidator other) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return customer -&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ValidationResult result = this.apply(customer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return result.equals(SUCCESS) ? other.apply(customer) : result;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    enum ValidationResult {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SUCCESS,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        PHONE_NUMBER_NOT_VALID,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        EMAIL_NOT_VALID,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        IS_NOT_AN_ADULT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>用法很简单</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">var result = isEmailValid()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .and(isPhoneNumberValid())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .and(isAnAdult())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .apply(customer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println(result);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if (result != ValidationResult.SUCCESS) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    throw new IllegalStateException(result.name());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>使用这种方法，我们可以灵活地组合多个验证。当验证失败时，该方法会返回失败的原因</p>
<p>此外，它是延迟加载，也就是直到调用 <code>apply()</code> 时才会真正执行</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">var result2 = isEmailValid()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .and(isPhoneNumberValid())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .and(isAnAdult())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .and(printSomething());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println("not load before apply()");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">result2.apply(customer);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<p>完整代码</p>
<p>调用方法</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class Main {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Customer customer = new Customer(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "Alice",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "alice@gmail.com",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "+089998879",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                LocalDate.of(2000, 1, 1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(new CustomerValidatorService().isValid(customer));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // If valid we can store customer in db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // Using combinator pattern</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var result = isEmailValid()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .and(isPhoneNumberValid())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .and(isAnAdult())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .apply(customer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(result);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (result != ValidationResult.SUCCESS) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throw new IllegalStateException(result.name());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // Lazy lode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var result2 = isEmailValid()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .and(isPhoneNumberValid())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .and(isAnAdult())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .and(printSomething());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println("not load before apply()");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        result2.apply(customer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>命令式编程</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class CustomerValidatorService {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private boolean isEmailValid(String email) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return email.contains("@");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private boolean isPhoneNumberValid(String phoneNumber) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return phoneNumber.startsWith("+0");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private boolean isAdult(LocalDate dob) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return Period.between(dob, LocalDate.now()).getYears() &gt; 16;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public boolean isValid(Customer customer) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return isEmailValid(customer.email())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &amp;&amp; isPhoneNumberValid(customer.phoneNumber())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &amp;&amp; isAdult(customer.dob());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>函数式编程</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public interface CustomerRegistrationValidator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        extends Function&lt;Customer, ValidationResult&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static CustomerRegistrationValidator isEmailValid() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return customer -&gt; customer.email().contains("@") ?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                SUCCESS : EMAIL_NOT_VALID;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static CustomerRegistrationValidator isPhoneNumberValid() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return customer -&gt; customer.phoneNumber().startsWith("+0") ?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                SUCCESS : PHONE_NUMBER_NOT_VALID;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static CustomerRegistrationValidator isAnAdult() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return customer -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Period.between(customer.dob(), LocalDate.now()).getYears() &gt; 16 ?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        SUCCESS : IS_NOT_AN_ADULT;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * test lazy load</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static CustomerRegistrationValidator printSomething() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return customer -&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("print something");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return SUCCESS;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    default CustomerRegistrationValidator and (CustomerRegistrationValidator other) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return customer -&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ValidationResult result = this.apply(customer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return result.equals(SUCCESS) ? other.apply(customer) : result;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    enum ValidationResult {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SUCCESS,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        PHONE_NUMBER_NOT_VALID,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        EMAIL_NOT_VALID,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        IS_NOT_AN_ADULT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>entity</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public record Customer(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String name,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String email,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String phoneNumber,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        LocalDate dob</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">) {}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="callbacks">Callbacks<a href="https://solidspoon.xyz/blog/java-functional-programming-explained#callbacks" class="hash-link" aria-label="Callbacks的直接链接" title="Callbacks的直接链接">​</a></h2>
<p>由于 Java 的函数式接口，我们现在可以像 JavaScript 一样使用 callback</p>
<p>在 JavaScript 中，我们像这样定义带有回调的函数</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">hello</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">firstName</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> lastName</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter">callback</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">firstName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lastName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lastName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">callback</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>我们可以在 Chrome 控制台中调用它</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">hello</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"john"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"no lastname provided"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>现在我们可以在 Java 中做同样的事情</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">static void hello(String firstName, String lastName, Consumer&lt;String&gt; callback) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    System.out.println(firstName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (lastName != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(lastName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        callback.accept(firstName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">static void hello2(String firstName, String lastName, Runnable callback) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    System.out.println(firstName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (lastName != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(lastName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        callback.run();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>usage</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">hello("John", "Montana", null);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hello("John", null, value -&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    System.out.println("no lastName provided for " + value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">});</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hello2("John", null,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        () -&gt; System.out.println("no lastName provided"));</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<p>完整代码</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class Callbacks {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hello("John", "Montana", null);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hello("John", null, value -&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("no lastName provided for " + value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hello2("John", null,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                () -&gt; System.out.println("no lastName provided"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static void hello(String firstName, String lastName, Consumer&lt;String&gt; callback) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(firstName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (lastName != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println(lastName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            callback.accept(firstName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static void hello2(String firstName, String lastName, Runnable callback) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(firstName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (lastName != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println(lastName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            callback.run();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Callback function in js:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function hello(firstName, lastName,callback) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        console.log(firstName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (lastName) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            console.log(lastName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            callback();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Invoke it:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hello("john", null, function(){console.log("no lastname provided")})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="函数式编程的特性">函数式编程的特性<a href="https://solidspoon.xyz/blog/java-functional-programming-explained#%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E7%9A%84%E7%89%B9%E6%80%A7" class="hash-link" aria-label="函数式编程的特性的直接链接" title="函数式编程的特性的直接链接">​</a></h2>
<ul>
<li>无状态</li>
<li>纯函数</li>
<li>无副作用</li>
<li>高阶特性<!-- -->
<ul>
<li>函数将一个或多个函数作为参数。</li>
<li>函数返回另一个函数作为结果。</li>
</ul>
</li>
</ul>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[自定义 ClassLoader 加载一个加密 class 文件]]></title>
        <id>https://solidspoon.xyz/blog/custom-class-loader-loads-encrypted-class-file</id>
        <link href="https://solidspoon.xyz/blog/custom-class-loader-loads-encrypted-class-file"/>
        <updated>2021-03-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[跟着我体验一下传说中非常厉害的类加载器吧！]]></summary>
        <content type="html"><![CDATA[<p>跟着我体验一下传说中非常厉害的类加载器吧！</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="制作加密-class">制作加密 class<a href="https://solidspoon.xyz/blog/custom-class-loader-loads-encrypted-class-file#%E5%88%B6%E4%BD%9C%E5%8A%A0%E5%AF%86-class" class="hash-link" aria-label="制作加密 class的直接链接" title="制作加密 class的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="目标类">目标类<a href="https://solidspoon.xyz/blog/custom-class-loader-loads-encrypted-class-file#%E7%9B%AE%E6%A0%87%E7%B1%BB" class="hash-link" aria-label="目标类的直接链接" title="目标类的直接链接">​</a></h3>
<p>我们要加载的类很简单，它只有一个 <code>hello()</code> 方法。编译这个类生成 class 文件，待会要用</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package ClassLoader;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class Hello {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void hello(){ </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println("Hello, classLoader!"); </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="加密">加密<a href="https://solidspoon.xyz/blog/custom-class-loader-loads-encrypted-class-file#%E5%8A%A0%E5%AF%86" class="hash-link" aria-label="加密的直接链接" title="加密的直接链接">​</a></h3>
<p>下面这段代码读取了刚才生成的 Hello.class ，加密之后保存为 Hello.xlass</p>
<p><code>encode()</code> 实现了一个简单的加密，加载类的时候使用同样的方法就可以解密</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package ClassLoader;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.io.File;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.io.FileInputStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.io.FileOutputStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.io.IOException;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @author : solidSpoon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @date : 2021/3/5 1:57</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class EncodeFile {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String name = "Hello";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        EncodeFile ef = new EncodeFile();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        byte[] fileByteArray = ef.loadFile(name);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fileByteArray = ef.encode(fileByteArray);;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ef.storeFile(fileByteArray, name);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public byte[] loadFile(String name){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        File f = new File(this.getClass().getResource(name + ".class").getPath());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        byte[] fileByteArray = new byte[(int)f.length()];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            new FileInputStream(f).read(fileByteArray);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (Exception e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            e.printStackTrace();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return fileByteArray;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    void storeFile(byte[] fileByteArray, String name) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String p = this.getClass().getResource("").getPath();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        File file = new File(p + "/" + name + ".xlass");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try (FileOutputStream fop = new FileOutputStream(file)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (!file.exists()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                file.createNewFile();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            fop.write(fileByteArray);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            fop.flush();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (IOException e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            e.printStackTrace();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public byte[] encode (byte[] fileToEncode){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for(int i=0; i&lt; fileToEncode.length; i++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            fileToEncode[i] = (byte) (255 - fileToEncode[i]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return fileToEncode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="加载">加载<a href="https://solidspoon.xyz/blog/custom-class-loader-loads-encrypted-class-file#%E5%8A%A0%E8%BD%BD" class="hash-link" aria-label="加载的直接链接" title="加载的直接链接">​</a></h2>
<p>接下来我们定义自己的加载器，把刚才的 xlass 文件解密之后加载到 JVM 中，并反射运行它的 <code>hello()</code> 方法。</p>
<p>具体方法是继承 <code>ClassLoader</code> 类，覆盖它的 <code>findClass()</code> 方法，在该方法中使用 <code>defineClass()</code> 将字节流转成 <code>Class</code></p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package ClassLoader;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.io.File;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.io.FileInputStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.lang.reflect.Method;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @author : solidSpoon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @date : 2021/3/5 1:30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class MyClassLoader extends ClassLoader{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Class&lt;?&gt; clazz = new  MyClassLoader().findClass("Hello");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Object obj = clazz.getConstructor().newInstance();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Method method = clazz.getMethod("hello");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            method.invoke(obj);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (Exception e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            e.printStackTrace();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    protected Class&lt;?&gt; findClass(String name) throws ClassNotFoundException {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        File f = new File(this.getClass().getResource(name + ".xlass").getPath());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        byte[] fileByteArray = new byte[(int)f.length()];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            new FileInputStream(f).read(fileByteArray);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (Exception e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            e.printStackTrace();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fileByteArray = decode(fileByteArray);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String pack = this.getClass().getPackage().getName();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return defineClass(pack + "." + name, fileByteArray, 0, fileByteArray.length);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * 将编码过的字节数组解码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param fileToDecode 要解码的字节数组</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @return 解码的字节数组</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public byte[] decode (byte[] fileToDecode){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for(int i=0; i&lt; fileToDecode.length; i++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            fileToDecode[i] = (byte) (255 - fileToDecode[i]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return fileToDecode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="运行结果">运行结果<a href="https://solidspoon.xyz/blog/custom-class-loader-loads-encrypted-class-file#%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C" class="hash-link" aria-label="运行结果的直接链接" title="运行结果的直接链接">​</a></h2>
<p>我们的类加载器解密了 xlass 并将它加载到了 JVM 中</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Hello, classLoader!</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="原理">原理<a href="https://solidspoon.xyz/blog/custom-class-loader-loads-encrypted-class-file#%E5%8E%9F%E7%90%86" class="hash-link" aria-label="原理的直接链接" title="原理的直接链接">​</a></h2>
<p>类加载的原则是双亲委派模型：如果一个类加载器收到了类加载的请求，它首先会把这个请求委派给父类加载器去完成，每一个层次的类加载器都是如此，因此所有的加载请求最终都应该传送到最顶层的启动类加载器中，只有当父加载器反馈自己无法完成这个加载请求（它的搜索范围中没有找到所需的类）时，子加载器才会尝试自己去完成加载。</p>
<p>我们定义的这个 <code>findClass()</code> 方法会在下面这个地方调用，如代码所示，如果该类还没有被加载并且父加载器无法加载个类（当然肯定不能加载），就会调用我们定义的 <code>findClass()</code> 去加载这个类</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// java.lang ClassLoader</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	protected Class&lt;?&gt; loadClass(String name, boolean resolve)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        throws ClassNotFoundException</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        synchronized (getClassLoadingLock(name)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // First, check if the class has already been loaded</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Class&lt;?&gt; c = findLoadedClass(name);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (c == null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                long t0 = System.nanoTime();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if (parent != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        c = parent.loadClass(name, false);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        c = findBootstrapClassOrNull(name);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } catch (ClassNotFoundException e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // ClassNotFoundException thrown if class not found</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // from the non-null parent class loader</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (c == null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // If still not found, then invoke findClass in order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // to find the class.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    long t1 = System.nanoTime();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    c = findClass(name);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // this is the defining class loader; record the stats</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    PerfCounter.getParentDelegationTime().addTime(t1 - t0);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    PerfCounter.getFindClassTime().addElapsedTimeFrom(t1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    PerfCounter.getFindClasses().increment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (resolve) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                resolveClass(c);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return c;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="Java" term="Java"/>
        <category label="JVM" term="JVM"/>
        <category label="类加载器" term="类加载器"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[手把手教你读一个 Java 文件的字节码]]></title>
        <id>https://solidspoon.xyz/blog/step-by-step-guide-to-reading-bytecode-of-a-java-file</id>
        <link href="https://solidspoon.xyz/blog/step-by-step-guide-to-reading-bytecode-of-a-java-file"/>
        <updated>2021-03-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[想要读懂 Java 的字节码其实没那么难。当然，如果你有汇编语言的经验就会更好上手。本文手把手教你阅读一个简单 Java 文件的字节码。]]></summary>
        <content type="html"><![CDATA[<p>想要读懂 Java 的字节码其实没那么难。当然，如果你有汇编语言的经验就会更好上手。本文手把手教你阅读一个简单 Java 文件的字节码。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="如何得到字节码">如何得到字节码？<a href="https://solidspoon.xyz/blog/step-by-step-guide-to-reading-bytecode-of-a-java-file#%E5%A6%82%E4%BD%95%E5%BE%97%E5%88%B0%E5%AD%97%E8%8A%82%E7%A0%81" class="hash-link" aria-label="如何得到字节码？的直接链接" title="如何得到字节码？的直接链接">​</a></h2>
<p>以下面这段示例代码为例，他存放在一个包中：</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package demo.a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class B{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>通过下面这几个方法就可以查看代码的字节码：</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="方法-1-命令行">方法 1 、命令行<a href="https://solidspoon.xyz/blog/step-by-step-guide-to-reading-bytecode-of-a-java-file#%E6%96%B9%E6%B3%95-1-%E5%91%BD%E4%BB%A4%E8%A1%8C" class="hash-link" aria-label="方法 1 、命令行的直接链接" title="方法 1 、命令行的直接链接">​</a></h3>
<p>相关命令如下</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">javac demo/a/B.java // 编译</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jvavp -c demo.a.B   // 输出字节码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">javap -c -verbose demo.a.B // 详细输出</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="方法-2-idea-插件">方法 2 、idea 插件<a href="https://solidspoon.xyz/blog/step-by-step-guide-to-reading-bytecode-of-a-java-file#%E6%96%B9%E6%B3%95-2-idea-%E6%8F%92%E4%BB%B6" class="hash-link" aria-label="方法 2 、idea 插件的直接链接" title="方法 2 、idea 插件的直接链接">​</a></h3>
<p>下载个插件：「jclasslib Bytecode Viewer」，网址如下</p>
<blockquote>
<p><a href="https://plugins.jetbrains.com/plugin/9248-jclasslib-bytecode-viewer" target="_blank" rel="noopener noreferrer">https://plugins.jetbrains.com/plugin/9248-jclasslib-bytecode-viewer</a></p>
</blockquote>
<p>安装该插件后，首先编译代码，然后
菜单 👉 「view」 👉 「Show Bytecode With jclasslib」
结果如下：
<img loading="lazy" src="https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20210402103711.png" alt="" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="实验代码">实验代码<a href="https://solidspoon.xyz/blog/step-by-step-guide-to-reading-bytecode-of-a-java-file#%E5%AE%9E%E9%AA%8C%E4%BB%A3%E7%A0%81" class="hash-link" aria-label="实验代码的直接链接" title="实验代码的直接链接">​</a></h2>
<p>我们使用下面这段代码，你可以将其输入 IDE 中</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.ArrayList;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.List;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class Hello {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num1 = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num2 = 130;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num3 = num1 + num2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num4 = num2 - num1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num5 = num1 * num2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num6 = num2 / num1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        final int num7 = 5;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Integer num88 = 6;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //看装箱指令</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(num88 == 0){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println(num1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        List&lt;Integer&gt; nums = new ArrayList&lt;&gt;();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nums.add(1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nums.add(2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for (int num : nums){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println(num);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (nums.size() == num2) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println(num2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>下面是由 idea 反编译得到的代码，可以观察到 <code>for</code> 循环被改成了 <code>while</code></p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Source code recreated from a .class file by IntelliJ IDEA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// (powered by FernFlower decompiler)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.ArrayList;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.Iterator;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.List;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class Hello {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public Hello() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num1 = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num2 = 130;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int var10000 = num1 + num2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var10000 = num2 - num1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var10000 = num1 * num2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var10000 = num2 / num1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num7 = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Integer num88 = 6;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (num88 == 0) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println(num1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        List&lt;Integer&gt; nums = new ArrayList();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nums.add(1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nums.add(2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Iterator var10 = nums.iterator();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        while(var10.hasNext()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            int num = (Integer)var10.next();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println(num);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (nums.size() == num2) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println(num2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="阅读字节码">阅读字节码<a href="https://solidspoon.xyz/blog/step-by-step-guide-to-reading-bytecode-of-a-java-file#%E9%98%85%E8%AF%BB%E5%AD%97%E8%8A%82%E7%A0%81" class="hash-link" aria-label="阅读字节码的直接链接" title="阅读字节码的直接链接">​</a></h2>
<p>为了方便解释，我将字节码文件拆成小段，首先使用下面这个命令输出字节码</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">PS C:\Users\cedar\Desktop\ReadBytecode\code\target\classes&gt; javap -c .\Hello.class</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>一开始就说明了这是「Hello.java」的字节码</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Compiled from "Hello.java"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class Hello {</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>紧接着自动创建了无参构造方法，调用了父类 <code>Object</code> 的初始化函数。 <code>aload_0</code> 是说把本地变亮表位置 0 的对象加载出来，而这个位置保存的是对自身的引用。</p>
<p>你会发现字节码每条命令前面也有一个数字，比如 <code>0: aload_0</code> 前面有一个 <code>0</code> ，它代表 <code>aload_0</code> 这条指令在第 0 个位置。接着观察 <code>4: return</code>，它的位置怎么突然变成 4 了？那是因为 <code>invokespecial</code> 这个指令还有两个输入参数，一共占用三个字节</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">-- 字节码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> public Hello();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Code:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       0: aload_0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       1: invokespecial #1                  // Method java/lang/Object."&lt;init&gt;":()V</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       4: return</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>1: invokespecial #1</code> 的 <code>#1</code>，代表常量池位置 1.常量池通过 <code>javap -c -verbose demo.a.B</code> 就可以显示出来，如下所示</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Constant pool:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   #1 = Methodref          #15.#48        // java/lang/Object."&lt;init&gt;":()V</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   #2 = Methodref          #12.#49        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   #3 = Methodref          #12.#50        // java/lang/Integer.intValue:()I</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   ......</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>接下来就是 <code>main</code> 方法了，还记得我们在 <code>main</code> 方法中干了什么吗</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// 源码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num1 = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num2 = 130;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num3 = num1 + num2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num4 = num2 - num1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num5 = num1 * num2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num6 = num2 / num1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        final int num7 = 5;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Integer num88 = 6;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>它对应的字节码是下面这样的，具体内容我已经标注出来了，稍微解释一下 <code>iconst_1</code> ，代表常量 <code>int 1</code> ，也就是代码中有个常量 「1」加载到栈顶</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  public static void main(java.lang.String[]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Code:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 初始化 num1 = 1;保存到变量表 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       0: iconst_1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       1: istore_1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 初始化 num2 = 130; 保存到 变量表2，以下同理</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       2: sipush        130</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       5: istore_2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 计算 num3(匿名了) = num1 + num2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       6: iload_1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       7: iload_2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       8: iadd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       9: istore_3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 计算 num4(匿名了) = num2 - num1;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      10: iload_2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      11: iload_1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      12: isub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      13: istore        4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 计算 num5(匿名了) = num1 * num2; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      15: iload_1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      16: iload_2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      17: imul</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      18: istore        5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 计算 num6(匿名了) = num2 / num1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      20: iload_2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      21: iload_1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      22: idiv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      23: istore        6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- final int num7 = 5;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      25: iconst_5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      26: istore        7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- Integer num88 = 6;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      28: bipush        6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      30: invokestatic  #2                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      33: astore        8</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后是这个 <code>if</code> 语句</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        if (num88 == 0) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println(num1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>注意上文 <code>num88</code> 被保存到变量表位置 8，所以此处把位置 8 加载出来</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">-- 字节码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      35: aload         8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      37: invokevirtual #3                  // Method java/lang/Integer.intValue:()I</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      40: ifne          50 -- 如果不等于 0 就跳转到 50</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      43: getstatic     #4                  // Field java/lang/System.out:Ljava/io/PrintStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      46: iload_1          -- 存储 num1 的地方</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      47: invokevirtual #5                  // Method java/io/PrintStream.println:(I)V</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后我们操作了一个 <code>List</code></p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// 源码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        List&lt;Integer&gt; nums = new ArrayList&lt;&gt;();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nums.add(1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nums.add(2);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    -- 初始化 List 对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      50: new           #6                  // class java/util/ArrayList</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      53: dup              -- 把栈顶的值复制一份再压回去，此时栈顶有两份一样的值，分别被 54 和 57 指令消耗了</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      54: invokespecial #7                  // Method java/util/ArrayList."&lt;init&gt;":()V</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      57: astore        9 -- 将初始化的对象存到寄存器 9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- list -&gt; add(1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      59: aload         9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      61: iconst_1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      62: invokestatic  #2                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      65: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      70: pop           -- 丢弃了 add 返回值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- list -&gt; add(2)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      71: aload         9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      73: iconst_2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      74: invokestatic  #2                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      77: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      82: pop           -- 丢弃了 add 返回值</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>遍历 <code>List</code> ，这里 JVM 把 <code>for</code> 改成了 <code>while</code></p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// 源代码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for (int num : nums){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(num);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//被 JVM 该成如下代码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Iterator var10 = nums.iterator();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    while(var11.hasNext()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int num = (Integer)var11.next();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(num);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    -- 获取迭代器</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      83: aload         9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      85: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      90: astore        10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      92: aload         10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      94: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      99: ifeq          128 -- 如果等于 0，跳转到 128</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 获取 next() 并打印</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     102: aload         10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     104: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     109: checkcast     #12                 // class java/lang/Integer  -- 检查对象是否为给定类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     112: invokevirtual #3                  // Method java/lang/Integer.intValue:()I</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     115: istore        11</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     117: getstatic     #4                  // Field java/lang/System.out:Ljava/io/PrintStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     120: iload         11</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     122: invokevirtual #5                  // Method java/io/PrintStream.println:(I)V</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     125: goto          92</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>最后我们写了个 if</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// 源码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (nums.size() == num2) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println(num2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    -- 如果 list.size() == num2; 打印 num2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     128: aload         9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     130: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     135: iload_2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     136: if_icmpne     146</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     139: getstatic     #4                  // Field java/lang/System.out:Ljava/io/PrintStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     142: iload_2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     143: invokevirtual #5                  // Method java/io/PrintStream.println:(I)V</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     146: return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="小结">小结<a href="https://solidspoon.xyz/blog/step-by-step-guide-to-reading-bytecode-of-a-java-file#%E5%B0%8F%E7%BB%93" class="hash-link" aria-label="小结的直接链接" title="小结的直接链接">​</a></h2>
<p>Java 的字节码还是要比汇编简单一些。</p>
<p>这里再提一点，当要初始化一个 int 时（在 JVM 中：bool，byte，char，short 都是 int），根据不同的数字所占的位数不同，分别需要如下几个命令，方括号中给出了命令适用的范围</p>
<ul>
<li>iconst: [-1, 5]</li>
<li>bipush: [-128, 127]</li>
<li>sipush: [-32768, 32767]</li>
<li>idc: any int value</li>
</ul>
<hr>
<ul>
<li><a href="https://tech.meituan.com/2019/09/05/java-bytecode-enhancement.html" target="_blank" rel="noopener noreferrer">https://tech.meituan.com/2019/09/05/java-bytecode-enhancement.html</a></li>
</ul>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="字节码" term="字节码"/>
        <category label="Java" term="Java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[初识 JShell]]></title>
        <id>https://solidspoon.xyz/blog/getting-started-with-jshell</id>
        <link href="https://solidspoon.xyz/blog/getting-started-with-jshell"/>
        <updated>2021-02-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[初识 JShell]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="初识-jshell">初识 JShell<a href="https://solidspoon.xyz/blog/getting-started-with-jshell#%E5%88%9D%E8%AF%86-jshell" class="hash-link" aria-label="初识 JShell的直接链接" title="初识 JShell的直接链接">​</a></h2>
<p>升级到 Java 11 后，有了 JShell 这个工具（其实 Java 9 就有了），它让 Java 可以像脚本语言一样直接在命令行交互，听起来好神奇，快来体验一下！！</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="启动与退出">启动与退出<a href="https://solidspoon.xyz/blog/getting-started-with-jshell#%E5%90%AF%E5%8A%A8%E4%B8%8E%E9%80%80%E5%87%BA" class="hash-link" aria-label="启动与退出的直接链接" title="启动与退出的直接链接">​</a></h2>
<p>保险起见，得先弄明白启动与退出</p>
<p>直接在命令行输入 <code>jshell</code> 就启动了</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">➜  ~cedar jshell</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  Welcome to JShell -- Version 11.0.9.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  For an introduction type: /help intro</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>退出方式稍微有一些特别，命令是 <code>/exit</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; /exit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  Goodbye</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>jshell -h</code> 可以发现提供了几个选项，这仨比较有意思</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    -q                    Quiet feedback.  Same as: --feedback concise</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -s                    Really quiet feedback.  Same as: --feedback silent</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -v                    Verbose feedback.  Same as: --feedback verbose</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>试了一下 <code>-s</code> 非常安静的反馈，看起来真的清爽</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">➜  ~cedar jshell -s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-&gt; int a = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-&gt; int b = 2;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>初学者还是别整这么安静了，使用 <code>-v</code> 开启详细反馈吧</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">➜  ~cedar jshell -v</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  Welcome to JShell -- Version 11.0.9.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  For an introduction type: /help intro</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="简单使用">简单使用<a href="https://solidspoon.xyz/blog/getting-started-with-jshell#%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8" class="hash-link" aria-label="简单使用的直接链接" title="简单使用的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="变量赋值">变量赋值<a href="https://solidspoon.xyz/blog/getting-started-with-jshell#%E5%8F%98%E9%87%8F%E8%B5%8B%E5%80%BC" class="hash-link" aria-label="变量赋值的直接链接" title="变量赋值的直接链接">​</a></h3>
<p>赋几个值看看</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; int a = 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a ==&gt; 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  created variable a : int</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; a + 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$2 ==&gt; 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  created scratch variable $2 : int</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; $2 + a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$3 ==&gt; 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  created scratch variable $3 : int</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可见：没有指定变量的数字会自动赋值给临时变量，我们也可以使用这个临时变量</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="方法与类">方法与类<a href="https://solidspoon.xyz/blog/getting-started-with-jshell#%E6%96%B9%E6%B3%95%E4%B8%8E%E7%B1%BB" class="hash-link" aria-label="方法与类的直接链接" title="方法与类的直接链接">​</a></h3>
<p>那创建方法呢？</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; String addMark(Word word) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   ...&gt; return word.val + "!";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   ...&gt; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  created method addMark(Word), however, it cannot be referenced until class Word is declared</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里方法传入了一个不存在的类，他告诉我们要定义这个类才能使用这个方法，那定义一下吧</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; class Word {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   ...&gt; String val;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   ...&gt; public Word() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   ...&gt; val = "hello word";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   ...&gt; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   ...&gt; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  created class Word</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|    update replaced method addMark(Word)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>创建个对象调用一下</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; Word words = new Word()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">words ==&gt; Word@2ef1e4fa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  created variable words : Word</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; addMark(words)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$4 ==&gt; "hello word!"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  created scratch variable $4 : String</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="内置命令">内置命令<a href="https://solidspoon.xyz/blog/getting-started-with-jshell#%E5%86%85%E7%BD%AE%E5%91%BD%E4%BB%A4" class="hash-link" aria-label="内置命令的直接链接" title="内置命令的直接链接">​</a></h3>
<p>输入 <code>/help</code> 就能看到所有可以使用的命令，例如列出所有变量</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; /vars</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|    Word words = Word@2ef1e4fa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|    String $4 = "hello word!"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="外部编辑器">外部编辑器<a href="https://solidspoon.xyz/blog/getting-started-with-jshell#%E5%A4%96%E9%83%A8%E7%BC%96%E8%BE%91%E5%99%A8" class="hash-link" aria-label="外部编辑器的直接链接" title="外部编辑器的直接链接">​</a></h2>
<p>有没有觉得在命令行定义类或者方法啥的太费事了，其实 JShell 支持使用编辑器</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用默认编辑器">使用默认编辑器<a href="https://solidspoon.xyz/blog/getting-started-with-jshell#%E4%BD%BF%E7%94%A8%E9%BB%98%E8%AE%A4%E7%BC%96%E8%BE%91%E5%99%A8" class="hash-link" aria-label="使用默认编辑器的直接链接" title="使用默认编辑器的直接链接">​</a></h3>
<p>先定义一个类</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; class Friend{}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  已创建 类 Friend</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>调用自带的编辑器</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; /edit Friend</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如下图，点击 Accept 就行</p>
<p><img loading="lazy" src="https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20210223013703.png" alt="img" class="img_ev3q"></p>
<p>注意一定是之前定义好的片段，如下：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; /list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1 : int a = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   2 : int b = 2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   3 : int c = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   6 : class Friend{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       String val = "No Friend !!!";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>否则会报错</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; /edit Dog</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  没有此类片段: Dog</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="自定义编辑器">自定义编辑器<a href="https://solidspoon.xyz/blog/getting-started-with-jshell#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BC%96%E8%BE%91%E5%99%A8" class="hash-link" aria-label="自定义编辑器的直接链接" title="自定义编辑器的直接链接">​</a></h3>
<p>如果想自定义编辑器呢，自带的太不好用</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; /set editor vim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  编辑器设置为: vim</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; /set editor "C:\\Users\\cedar\\AppData\\Local\\Programs\\Microsoft VS Code\\code" -w</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|  编辑器设置为: C:\Users\cedar\AppData\Local\Programs\Microsoft VS Code\code -w</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>该 <code>-w</code> 选项设置等待文件关闭后再返回</p>
<p>上述设置是一次性的，想永久设置的话，使用 <code>-retain</code> 选项</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jshell&gt; /set editor -retain vim</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="Java" term="Java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker 诊断神器 BusyBox]]></title>
        <id>https://solidspoon.xyz/blog/docker-diagnostic-tool-busybox</id>
        <link href="https://solidspoon.xyz/blog/docker-diagnostic-tool-busybox"/>
        <updated>2021-02-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[BusyBox 是一个集成了一百多个最常用 Linux 命令和工具（如 cat、echo、grep、mount、telnet 、ping、ifconfig 等）的精简工具箱，它只需要几 MB 的大小，很方便进行各种快速验证，被誉为“Linux 系统的瑞士军刀”。]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>BusyBox 是一个集成了一百多个最常用 Linux 命令和工具（如 cat、echo、grep、mount、telnet 、ping、ifconfig 等）的精简工具箱，它只需要几 MB 的大小，很方便进行各种快速验证，被誉为“Linux 系统的瑞士军刀”。</p>
</blockquote>
<p>BusyBox 容器镜像可以帮助我们快速测试容器网络</p>
<p>直接运行并进入命令行：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker run --name &lt;my-docker-name&gt; -it --rm busybox sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>--rm</code>&nbsp;参数可以让我们在退出容器时自动销毁该容器</p>
<p>创建时指定网络</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker run -it --rm --name &lt;my-docker-name&gt; --network &lt;my-net&gt; busybox sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>将一个容器连接到网络</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker network connect &lt;my-net&gt; &lt;my-docker-name&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>将容器从网络断开</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker network disconnect &lt;my-net&gt; &lt;my-docker-name&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="Docker" term="Docker"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker 网络设置]]></title>
        <id>https://solidspoon.xyz/blog/docker-network-configuration</id>
        <link href="https://solidspoon.xyz/blog/docker-network-configuration"/>
        <updated>2021-02-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[这里列出 Docker 配置网络的常用命令]]></summary>
        <content type="html"><![CDATA[<p>这里列出 Docker 配置网络的常用命令</p>
<blockquote>
<ul>
<li>docker network create</li>
<li>docker network connect</li>
<li>docker network ls</li>
<li>docker network rm</li>
<li>docker network disconnect</li>
<li>docker network inspect</li>
</ul>
</blockquote>
<p>列出所有网络</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker network ls</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>创建网络</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker network create &lt;my-net&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>查看网络信息</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker network inspect &lt;my-net&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>查看容器的信息</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker network inspect &lt;my-docker-name&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>将一个容器连接到网络</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker network connect &lt;my-net&gt; &lt;my-docker-name&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>创建容器时就指定网络，以 busybox 为例</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker run -it --rm --name busybox1 --network &lt;my-net&gt; busybox sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>给容器在指定网络中起一个别名，网络中的容器可以通过别名访问</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker run --net &lt;my-net&gt; -itd --name &lt;my-docker-name&gt; --net-alias &lt;alias-name&gt; busybox</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>多个容器起一个别名时第一个起的有效，第一个下线后第二个有效</p>
<p>将容器从网络断开</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker network disconnect &lt;my-net&gt; &lt;my-docker-name&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>删除创建的网络</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker network rm &lt;my-net&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到�剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>需要保证该网络没有容器链接</p>
<hr>
<p>参考链接</p>
<ul>
<li><a href="https://blog.csdn.net/gezhonglei2007/article/details/51627821" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/gezhonglei2007/article/details/51627821</a></li>
<li><a href="https://www.cnkirito.moe/docker-network-bridge/" target="_blank" rel="noopener noreferrer">https://www.cnkirito.moe/docker-network-bridge/</a></li>
</ul>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="Docker" term="Docker"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL 8.0 搭建半同步复制]]></title>
        <id>https://solidspoon.xyz/blog/mysql-8-0-building-semi-synchronous-replication</id>
        <link href="https://solidspoon.xyz/blog/mysql-8-0-building-semi-synchronous-replication"/>
        <updated>2021-02-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[说明：搭建半同步复制需要预先有基本的主从复制环境，具体可以看我之前的文章：]]></summary>
        <content type="html"><![CDATA[<p>说明：搭建半同步复制需要预先有基本的主从复制环境，具体可以看我之前的文章：</p>
<blockquote>
<p><a href="https://github.com/solidSpoon/solidSpoon.github.io/wiki" target="_blank" rel="noopener noreferrer">https://github.com/solidSpoon/solidSpoon.github.io/wiki</a></p>
</blockquote>
<p>半同步超时的时候，会自动降为异步工作。当Slave开启半同步后，或者当主从之间网络延迟恢复正常的时候，半同步复制会自动从异步复制又转为半同步复制，还是相当智能的。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="master-配置">Master 配置<a href="https://solidspoon.xyz/blog/mysql-8-0-building-semi-synchronous-replication#master-%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="Master 配置的直接链接" title="Master 配置的直接链接">​</a></h2>
<p>安装半同步模块并启动</p>
<p>这里 Windows 版本有个坑</p>
<p>对于 Linux 来说：此模块位置在 <code>/usr/local/mysql/lib/plugin/semisync_master.so</code>
对于 Windows Zip 版本来说：插件的位置本来在 <code>..\lib\semisync_master.dll</code> ，但是 MySQL 默认的位置是 <code>\bin\lib\plugin\semisync_master.so</code>&nbsp;</p>
<p>要解决这个问题，我们把 lib 目录复制一份过去就好了。</p>
<p>也可以在配置文件中指定插件目录：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[mysqld]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">plugin_dir=/path/to/plugin/directory</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果 <a href="https://www.docs4dev.com/docs/zh/mysql/5.7/reference/server-system-variables.html#sysvar_plugin_dir" target="_blank" rel="noopener noreferrer">plugin_dir</a> 的值是相对路径名，则将其视为相对于 MySQL 基本目录（ <a href="https://www.docs4dev.com/docs/zh/mysql/5.7/reference/server-system-variables.html#sysvar_basedir" target="_blank" rel="noopener noreferrer">basedir</a> 系统变量的值）。</p>
<p>下面是安装模块的命令：</p>
<p>Linux：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; install plugin rpl_semi_sync_master soname 'semisync_master.so';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Windows：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; install plugin rpl_semi_sync_master soname 'semisync_master.dll';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>安装完后：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show global variables like '%semi%';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show global variables like '%semi%';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-------------------------------------------+------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Variable_name                             | Value      |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-------------------------------------------+------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_enabled              | OFF        | -&gt; 是否启用半同步协议</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_timeout              | 10000      | -&gt; 链接 Slave 超时时间</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_trace_level          | 32         |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_wait_for_slave_count | 1          |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_wait_no_slave        | ON         |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_wait_point           | AFTER_SYNC | -&gt; MySQL 5.7 之后默认值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-------------------------------------------+------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">6 rows in set, 1 warning (0.02 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; set global rpl_semi_sync_master_enabled = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; set global rpl_semi_sync_master_timeout = 2000;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="��复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>安装后启动和定制主从连接错误的超时时间默认是 10s 可改为 2s，一旦有一次超时自动降级为异步。（以上内容要想永久有效需要写到配置文件中）</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# cat /etc/my.cnf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[mysqld]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rpl_semi_sync_master_enabled = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rpl_semi_sync_master_timeout = 2000;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="slave-配置">Slave 配置<a href="https://solidspoon.xyz/blog/mysql-8-0-building-semi-synchronous-replication#slave-%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="Slave 配置的直接链接" title="Slave 配置的直接链接">​</a></h2>
<p>1）安装半同步模块并启动</p>
<p>Linux：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; install plugin rpl_semi_sync_slave soname 'semisync_slave.so';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>WIndows：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; install plugin rpl_semi_sync_slave soname 'semisync_slave.dll';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪��贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>同样，如果报错就把插件目录移动一下</p>
<p><code>lib</code> -&gt; <code>bin\lib</code></p>
<p>接着执行</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; set global rpl_semi_sync_slave_enabled = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show global variables like '%semi%';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-------------------------------------------+------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Variable_name                             | Value      |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-------------------------------------------+------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_enabled              | ON         |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_timeout              | 10000      |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_trace_level          | 32         |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_wait_for_slave_count | 1          |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_wait_no_slave        | ON         |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_master_wait_point           | AFTER_SYNC |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_slave_enabled               | ON         |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| rpl_semi_sync_slave_trace_level           | 32         |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-------------------------------------------+------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">8 rows in set, 1 warning (0.00 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>2）从节点需要重新连接主服务器半同步才会生效</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; stop slave io_thread;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; start slave io_thread;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>PS：如果想卸载异步模块就使用 uninstall 即可。</p>
<p>Master 上查看是否启用了半同步</p>
<p><img loading="lazy" src="https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20210203214530.png" alt="" class="img_ev3q"></p>
<p>现在半同步已经正常工作了，主要看 <code>Rpl_semi_sync_master_clients</code> 是否不为 0，<code>Rpl_semi_sync_master_status</code> 是否为 ON。如果 <code>Rpl_semi_sync_master_status</code> 为 OFF，说明出现了网络延迟或 Slave IO 线程延迟。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="验证">验证<a href="https://solidspoon.xyz/blog/mysql-8-0-building-semi-synchronous-replication#%E9%AA%8C%E8%AF%81" class="hash-link" aria-label="验证的直接链接" title="验证的直接链接">​</a></h2>
<p>半同步超时，是否会自动降为异步工作</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="slave">Slave<a href="https://solidspoon.xyz/blog/mysql-8-0-building-semi-synchronous-replication#slave" class="hash-link" aria-label="Slave的直接链接" title="Slave的直接链接">​</a></h3>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="关闭半同步">关闭半同步;<a href="https://solidspoon.xyz/blog/mysql-8-0-building-semi-synchronous-replication#%E5%85%B3%E9%97%AD%E5%8D%8A%E5%90%8C%E6%AD%A5" class="hash-link" aria-label="关闭半同步;�的直接链接" title="关闭半同步;的直接链接">​</a></h2>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; set global rpl_semi_sync_slave_enabled = 0 ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; stop slave io_thread;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; start slave io_thread;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="master">Master<a href="https://solidspoon.xyz/blog/mysql-8-0-building-semi-synchronous-replication#master" class="hash-link" aria-label="Master的直接链接" title="Master的直接链接">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; insert into t1(id) values(5),(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 2 rows affected (10.06 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; insert into t1(id) values(6),(7);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 2 rows affected (0.03 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="教程" term="教程"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Win10 - MySQL 5.7 - Docker 搭建主从复制]]></title>
        <id>https://solidspoon.xyz/blog/win10-mysql-5-7-docker-building-master-slave-replication</id>
        <link href="https://solidspoon.xyz/blog/win10-mysql-5-7-docker-building-master-slave-replication"/>
        <updated>2021-02-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[搭建环境：Windows 10 Docker Desktop WSL 2 based engine]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>搭建环境：Windows 10 Docker Desktop WSL 2 based engine</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建">创建<a href="https://solidspoon.xyz/blog/win10-mysql-5-7-docker-building-master-slave-replication#%E5%88%9B%E5%BB%BA" class="hash-link" aria-label="创建的直接链接" title="创建的直接链接">​</a></h2>
<p>首先创建两个数据库，一个作为主库，另一个作为从库</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="编写-docker-conpose-文件">编写 docker-conpose 文件<a href="https://solidspoon.xyz/blog/win10-mysql-5-7-docker-building-master-slave-replication#%E7%BC%96%E5%86%99-docker-conpose-%E6%96%87%E4%BB%B6" class="hash-link" aria-label="编写 docker-conpose 文件的直接链接" title="编写 docker-conpose 文件的直接链接">​</a></h3>
<p>首先安装 docker，docker-compose
一般安装了 docker 都会安装 docker-compose，可以使用 <code>docker-compose -verison</code> 查看是否安装</p>
<p><code>docker pull mysql:5.7</code> 拉取 mysql5.7 镜像</p>
<p>编写 docker-compose 文件「docker-compose.yaml」</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'2'</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">byfn</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">                                       </span><span class="token comment" style="color:#999988;font-style:italic">#配置byfn网络</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">services</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">master</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">                                     </span><span class="token comment" style="color:#999988;font-style:italic">#配置master服务</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mysql:5.7'</span><span class="token plain">                        </span><span class="token comment" style="color:#999988;font-style:italic">#使用刚才pull下来的镜像</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">restart</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> always</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">master              </span><span class="token comment" style="color:#999988;font-style:italic">#容器起名 mysql-master</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_USER</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> admin123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_ROOT_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> admin123           </span><span class="token comment" style="color:#999988;font-style:italic">#配置root的密码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'3316:3306'</span><span class="token plain">                           </span><span class="token comment" style="color:#999988;font-style:italic">#配置端口映射</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./master/my.cnf:/etc/mysql/my.cnf"</span><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">#配置my.cnf文件挂载，</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> byfn                                  </span><span class="token comment" style="color:#999988;font-style:italic">#配置当前servie挂载的网络</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">slave</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">                                      </span><span class="token comment" style="color:#999988;font-style:italic">#配置slave服务</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mysql:5.7'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">restart</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> always</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">slave</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_USER</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> admin123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_ROOT_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> admin123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'3326:3306'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./slave/my.cnf:/etc/mysql/my.cnf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> byfn</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="编写-cnf-文件">编写 cnf 文件<a href="https://solidspoon.xyz/blog/win10-mysql-5-7-docker-building-master-slave-replication#%E7%BC%96%E5%86%99-cnf-%E6%96%87%E4%BB%B6" class="hash-link" aria-label="编写 cnf 文件的直接链接" title="编写 cnf 文件的直接链接">​</a></h3>
<p>在 <code>docker-compose.yaml</code> 当前目录下，建立两个文件夹，master 和 slave，里面分别写入文件「my.cnf」</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mater/my.cnf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">mysqld</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">id=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">bin=/var/lib/mysql/mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">slave/my.cnf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">mysqld</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">id=2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>分别保存后退出</p>
<p>然后在当前 docker-compose.yaml 文件目录下执行</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker-compose -f docker-compse.yaml up -d</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>此时两个数据库创建成功</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置">配置<a href="https://solidspoon.xyz/blog/win10-mysql-5-7-docker-building-master-slave-replication#%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="配置的直接链接" title="配置的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="master">Master<a href="https://solidspoon.xyz/blog/win10-mysql-5-7-docker-building-master-slave-replication#master" class="hash-link" aria-label="Master的直接链接" title="Master的直接链接">​</a></h3>
<p>启动之后进入 master 容器</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker exec -it mysql-master /bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql -uroot -padmin123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">进入 mysql 终端之后</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; create user 'repl'@'%' identified by 'admin123';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'repl'@'%'; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; flush privileges;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show master status;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>最后的 <code>show master status;</code></p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show master status;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| mysql-bin.000003 |      767 |              |                  |                   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 row in set (0.00 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>需要记住 File 名字，和 Position 偏移位置</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="slave">Slave<a href="https://solidspoon.xyz/blog/win10-mysql-5-7-docker-building-master-slave-replication#slave" class="hash-link" aria-label="Slave的直接链接" title="Slave的直接链接">​</a></h3>
<p>另起一个终端进入 slave 容器</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker exec -it mysql-slave /bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql -uroot -padmin123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">进入 mysql 终端之后</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; CHANGE MASTER TO MASTER_HOST='mysql-master', MASTER_PORT=3306,  MASTER_USER='repl', MASTER_PASSWORD='admin123', MASTER_LOG_FILE='mysql-bin.000003', MASTER_LOG_POS=767;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; start slave;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里两个参数 MASTER_LOG_FILE 和 MASTER_LOG_POS 就是前面 master 上最后查询出来的；</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show slave status\G</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*************************** 1. row ***************************</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               Slave_IO_State: Waiting for master to send event</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  Master_Host: mysql-master</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  Master_User: repl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  Master_Port: 3306</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Connect_Retry: 60</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              Master_Log_File: mysql-bin.000003</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          Read_Master_Log_Pos: 1116</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               Relay_Log_File: eefecaed2964-relay-bin.000002</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Relay_Log_Pos: 320</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Relay_Master_Log_File: mysql-bin.000003</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             Slave_IO_Running: Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Slave_SQL_Running: Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              Replicate_Do_DB:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          Replicate_Ignore_DB:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           Replicate_Do_Table:</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>查询 slave 的状态，看到 Slave_IO_Running 和 Slave_SQL_Running 都是 yes 即为同步成功</p>
<p>可以登录 master 上创建数据库，表，然后在 slave 这边查看数据是否同步</p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="教程" term="教程"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Win10 - MySQL 8.0 - Docker 搭建主从复制]]></title>
        <id>https://solidspoon.xyz/blog/win10-mysql-8-0-docker-building-master-slave-replication</id>
        <link href="https://solidspoon.xyz/blog/win10-mysql-8-0-docker-building-master-slave-replication"/>
        <updated>2021-02-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[搭建环境：Windows 10 Docker Desktop WSL 2 based engine]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>搭建环境：Windows 10 Docker Desktop WSL 2 based engine</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建">创建<a href="https://solidspoon.xyz/blog/win10-mysql-8-0-docker-building-master-slave-replication#%E5%88%9B%E5%BB%BA" class="hash-link" aria-label="创建的直接链接" title="创建的直接链接">​</a></h2>
<p>首先创建两个数据库，一个作为主库，另一个作为从库</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="编写-docker-conpose-文件">编写 docker-conpose 文件<a href="https://solidspoon.xyz/blog/win10-mysql-8-0-docker-building-master-slave-replication#%E7%BC%96%E5%86%99-docker-conpose-%E6%96%87%E4%BB%B6" class="hash-link" aria-label="编写 docker-conpose 文件的直接链接" title="编写 docker-conpose 文件的直接链接">​</a></h3>
<p>一般安装了 docker 都会安装 docker-compose，可以使用 <code>docker-compose -verison</code> 查看是否安装</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">➜  ~ docker-compose -verison</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker-compose version 1.27.4, build 40524192</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>新建一个文件夹「mysqlms」用于存放本次搭建的文件
在 「mysqlms」 文件夹新建 dokcer-compose 文件，文件名为 「docker-compose.yaml」</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'2'</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">byfn</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">                                       </span><span class="token comment" style="color:#999988;font-style:italic">#配置byfn网络</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">services</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">master</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">                                     </span><span class="token comment" style="color:#999988;font-style:italic">#配置master服务</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mysql:latest'</span><span class="token plain">                        </span><span class="token comment" style="color:#999988;font-style:italic">#使用刚才pull下来的镜像</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">restart</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> on</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">failure</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">master              </span><span class="token comment" style="color:#999988;font-style:italic">#容器起名 mysql-master</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_USER</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> admin123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_ROOT_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> admin123           </span><span class="token comment" style="color:#999988;font-style:italic">#配置root的密码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'3316:3306'</span><span class="token plain">                           </span><span class="token comment" style="color:#999988;font-style:italic">#配置端口映射</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./master/my.cnf:/etc/mysql/my.cnf"</span><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">#配置my.cnf文件挂载，</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./master/mysql-files:/var/lib/mysql-files"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">#MySQL 8.0 不加这一行会报错</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> byfn                                  </span><span class="token comment" style="color:#999988;font-style:italic">#配置当前servie挂载的网络</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">slave</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">                                      </span><span class="token comment" style="color:#999988;font-style:italic">#配置slave服务</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mysql:latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">restart</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> on</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">failure</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">slave</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_USER</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> admin123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_ROOT_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> admin123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'3326:3306'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./slave/my.cnf:/etc/mysql/my.cnf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./master/mysql-files:/var/lib/mysql-files"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">#MySQL 8.0 不加这一行会报错</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> byfn</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>- "./master/mysql-files:/var/lib/mysql-files"</code> 这一行的目的详见下面链接</p>
<blockquote>
<p><a href="https://github.com/docker-library/mysql/issues/541" target="_blank" rel="noopener noreferrer">https://github.com/docker-library/mysql/issues/541</a></p>
</blockquote>
<p>如果想明确指定 MySQL 版本，如： <code>image: 'mysql:8'</code></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="编写-cnf-文件">编写 cnf 文件<a href="https://solidspoon.xyz/blog/win10-mysql-8-0-docker-building-master-slave-replication#%E7%BC%96%E5%86%99-cnf-%E6%96%87%E4%BB%B6" class="hash-link" aria-label="编写 cnf 文件的直接链接" title="编写 cnf 文件的直接链接">​</a></h3>
<p>在 「mysqlms」新建两个文件夹 「master」 和 「slave」，在其中分别写入文件「my.cnf」</p>
<ul>
<li>mysqlms/master/my.cnf 内容如下：</li>
</ul>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[mysqld]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server-id=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log-bin=/var/lib/mysql/mysql-bin</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>mysqlms/slave/my.cnf 内容如下</li>
</ul>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[mysqld]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server-id=2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在「mysqlms」目录下执行如下命令</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker-compose -f docker-compose.yaml up -d</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>此时两个主从数据库创建成功</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置">配置<a href="https://solidspoon.xyz/blog/win10-mysql-8-0-docker-building-master-slave-replication#%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="配置的直接链接" title="配置的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="master">Master<a href="https://solidspoon.xyz/blog/win10-mysql-8-0-docker-building-master-slave-replication#master" class="hash-link" aria-label="Master的直接链接" title="Master的直接链接">​</a></h3>
<p>启动之后进入 master 容器</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker exec -it mysql-master /bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql -uroot -padmin123</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="��复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>此时进入了 MySql 终端，创建用于主从复制的用户</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">create user 'repl'@'%' identified with 'mysql_native_password' by 'admin123';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'repl'@'%'; </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里有一个需要注意的地方，应该是 MySQL 5.0 与 MySQL 8.0 的一个验证身份的比较大的区别：</p>
<p>MySql 8.0 默认指定使用需要 SSL 的身份验证插件 「caching_sha2_password」，意味着我们从库必须使用安全链接来连接到主库才可以，否则从库链接的时候会报错，错误代码为 2061，因此这里选择绕过这个插件，改为使用「mysql_native_password」来验证。有机会可以尝试以下使用安全连接。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">flush privileges;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show master status;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show master status;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| mysql-bin.000003 |      767 |              |                  |                   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 row in set (0.00 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>需要记住 File 名字，和 Position 偏移位置</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="slave">Slave<a href="https://solidspoon.xyz/blog/win10-mysql-8-0-docker-building-master-slave-replication#slave" class="hash-link" aria-label="Slave的直接链接" title="Slave的直接链接">​</a></h3>
<p>在另一个终端进入 slave  容器</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker exec -it mysql-slave /bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql -uroot -padmin123</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>进入 MySQL 终端之后</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; CHANGE MASTER TO MASTER_HOST='mysql-master', MASTER_PORT=3306,  MASTER_USER='repl', MASTER_PASSWORD='admin123', MASTER_LOG_FILE='mysql-bin.000003', MASTER_LOG_POS=767;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; start slave;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里两个参数 <code>MASTER_LOG_FILE</code> 和 <code>MASTER_LOG_POS</code> 就是前面 master 上最后查询出来的</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show slave status\G</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*************************** 1. row ***************************</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               Slave_IO_State: Waiting for master to send event</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  Master_Host: mysql-master</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  Master_User: repl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  Master_Port: 3306</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Connect_Retry: 60</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              Master_Log_File: mysql-bin.000003</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          Read_Master_Log_Pos: 1116</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               Relay_Log_File: eefecaed2964-relay-bin.000002</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Relay_Log_Pos: 320</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Relay_Master_Log_File: mysql-bin.000003</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             Slave_IO_Running: Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Slave_SQL_Running: Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              Replicate_Do_DB:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          Replicate_Ignore_DB:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           Replicate_Do_Table</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以从中看到一些信息：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">             Slave_IO_Running: Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Slave_SQL_Running: Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可见主从配置成功</p>
<hr>
<p>参考链接</p>
<ul>
<li><a href="https://blog.csdn.net/wawa8899/article/details/86689618" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/wawa8899/article/details/86689618</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/replication-howto-repuser.html" target="_blank" rel="noopener noreferrer">https://dev.mysql.com/doc/refman/8.0/en/replication-howto-repuser.html</a></li>
<li><a href="https://github.com/docker-library/mysql/issues/541" target="_blank" rel="noopener noreferrer">https://github.com/docker-library/mysql/issues/541</a></li>
<li><a href="https://blog.csdn.net/wangxiaotongfan/article/details/81870258" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/wangxiaotongfan/article/details/81870258</a></li>
</ul>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="教程" term="教程"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Win10 - MySQL 8 Zip 版 - 搭建基于 GTID 的主从复制]]></title>
        <id>https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication</id>
        <link href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication"/>
        <updated>2021-02-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[配置环境：Windows 10 - MySQL 压缩版]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>配置环境：Windows 10 - MySQL 压缩版</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="前言">前言<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E5%89%8D%E8%A8%80" class="hash-link" aria-label="前言的直接链接" title="前言的直接链接">​</a></h2>
<p>GTID 是干嘛的？</p>
<blockquote>
<p>GTID (Global Transaction IDentifier) 是全局事务标识。它具有全局唯一性，一个事务对应一个GTID。唯一性不仅限于主服务器，GTID在所有的从服务器上也是唯一的。一个GTID在一个服务器上只执行一次，从而避免重复执行导致数据混乱或主从不一致。</p>
<p>在传统的复制里面，当发生故障需要主从切换时，服务器需要找到binlog和pos点，然后将其设定为新的主节点开启复制。相对来说比较麻烦，也容易出错。在MySQL 5.6里面，MySQL会通过内部机制自动匹配GTID断点，不再寻找binlog和pos点。我们只需要知道主节点的ip，端口，以及账号密码就可以自动复制。
<a href="http://mysql.taobao.org/monthly/2020/05/09/" target="_blank" rel="noopener noreferrer">http://mysql.taobao.org/monthly/2020/05/09/</a></p>
</blockquote>
<p>在传统的主从复制中，我们需要在从库中指定主库的 Log 文件与 Position ，在基于 DTID 的主从复制中，不需要这一步骤。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="准备两个-mysql-服务实例">准备两个 MySQL 服务实例<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E5%87%86%E5%A4%87%E4%B8%A4%E4%B8%AA-mysql-%E6%9C%8D%E5%8A%A1%E5%AE%9E%E4%BE%8B" class="hash-link" aria-label="准备两个 MySQL 服务实例的直接链接" title="准备两个 MySQL 服务实例的直接链接">​</a></h2>
<p>8.0 压缩版下载地址：</p>
<blockquote>
<p><a href="https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.16-winx64.zip" target="_blank" rel="noopener noreferrer">https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.16-winx64.zip</a></p>
</blockquote>
<p>解压后再复制一份，假设命名为 <code>mysql-8.0.16-winx64</code> 和 <code>mysql-8.0.16-winx64-2</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="修改主-mysql-8的-myini">修改主 MySQL-8的 <code>my.ini</code><a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E4%BF%AE%E6%94%B9%E4%B8%BB-mysql-8%E7%9A%84-myini" class="hash-link" aria-label="修改主-mysql-8的-myini的直接链接" title="修改主-mysql-8的-myini的直接链接">​</a></h2>
<p>在 <code>mysql-8.0.16-winx64</code> 目录下添加 my.ini 文件，内容如下：</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">mysqld</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">basedir = ./</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">datadir = ./data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">port = 3306</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server_id = 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gtid_mode=ON</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enforce</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">gtid</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">consistency</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sql_mode=NO_ENGINE_SUBSTITUTION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">STRICT_TRANS_TABLES </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log_bin=mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">binlog</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">format=Row</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="修改从-mysql-8的-myini">修改从 MySQL-8的 <code>my.ini</code><a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E4%BF%AE%E6%94%B9%E4%BB%8E-mysql-8%E7%9A%84-myini" class="hash-link" aria-label="修改从-mysql-8的-myini的直接链接" title="修改从-mysql-8的-myini的直接链接">​</a></h2>
<p>在从 <code>mysql-8.0.16-winx64-2</code> 目录下添加 my.ini 文件，内容如下：</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">mysqld</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">basedir = ./</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">datadir = ./data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">port = 3316</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server_id = 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gtid_mode=ON</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enforce</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">gtid</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">consistency</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sql_mode=NO_ENGINE_SUBSTITUTION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">STRICT_TRANS_TABLES </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log_bin=mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">binlog</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">format=Row</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="初始化和启动数据库">初始化和启动数据库<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E5%90%AF%E5%8A%A8%E6%95%B0%E6%8D%AE%E5%BA%93" class="hash-link" aria-label="初始化和启动数据库的直接链接" title="初始化和启动数据库的直接链接">​</a></h2>
<p>空数据库需要初始化，分别在两个数据库的 <code>\bin</code> 目录下执行 <code>mysqld --initialize-insecure</code> 进行初始化。</p>
<p>分别启动主和从，在两个数据库的 <code>\bin</code> 目录下直接执行 <code>mysqld</code> 或 <code>start mysqld</code> 命令即可。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置主节点">配置主节点<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E9%85%8D%E7%BD%AE%E4%B8%BB%E8%8A%82%E7%82%B9" class="hash-link" aria-label="配置主节点的直接链接" title="配置主节点的直接链接">​</a></h2>
<p>用 <code>mysql</code> 命令登录到主节点：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql -uroot -P3306</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>进入后执行下面命令</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; CREATE USER 'repl'@'%' IDENTIFIED BY '123456';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 0 rows affected (0.11 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 0 rows affected (0.12 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; flush privileges;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 0 rows affected (0.10 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>创建数据库：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">create schema db;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="主节点证书文件">主节点证书文件<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E4%B8%BB%E8%8A%82%E7%82%B9%E8%AF%81%E4%B9%A6%E6%96%87%E4%BB%B6" class="hash-link" aria-label="主节点证书文件的直接链接" title="主节点证书文件的直接链接">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; SHOW GLOBAL VARIABLES LIKE 'caching_sha2_password_public_key_path';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---------------------------------------+----------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Variable_name                         | Value          |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---------------------------------------+----------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| caching_sha2_password_public_key_path | public_key.pem |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---------------------------------------+----------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 row in set (0.00 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个文件在初始化后位于 <code>\bin\data</code> 下</p>
<p>因为 MySQL 8 默认是用 <code>caching_sha2_password</code> 做认证插件，这点与 MySQL 5 不同：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">error connecting to master 'repl@localhost:3306' - retry-time: 60 retries: 18 message: Authentication plugin 'caching_sha2_password' reported error: Authentication requires secure connection.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个文件就是基于默认设置 <code>caching_sha2_password</code> 下的通讯公钥文件。默认情况服务器不会给客户端发送，所以需要拷贝到从节点的目录下。</p>
<p>如果不想拷贝的话 ：</p>
<p>MySQL 8.0 的版本要在<strong>从数据库</strong>初始设置（CHANGE MASTER TO）加：</p>
<p><code>MASTER_PUBLIC_KEY_PATH = 'key_file_name'</code></p>
<p>或者</p>
<p><code>GET_MASTER_PUBLIC_KEY = {0|1}</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置从节点">配置从节点<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E9%85%8D%E7%BD%AE%E4%BB%8E%E8%8A%82%E7%82%B9" class="hash-link" aria-label="配置从节点的直接链接" title="配置从节点的直接链接">​</a></h2>
<p>把刚才的 <code>public_key.pem</code> 文件改名为 <code>master_public_key.pem</code> 然后拷贝到从服务器的 <code>\bin\data</code> 文件夹中，这个文件夹在用上面的命令初始化之后才有。</p>
<p><code>mysql</code> 命令登录到从节点：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql -uroot -P3316</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CHANGE MASTER TO</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_HOST='localhost',  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_PORT = 3306,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_USER='repl',      </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_PASSWORD='123456',   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_PUBLIC_KEY_PATH='master_public_key.pem',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_AUTO_POSITION = 1;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里有个问题，MySQL 8 下面不需要创建 db 。否则会报错说已经存在 db 。
--创建数据库：create schema db;--</p>
<p>直接开始执行同步
<code>start/stop slave;</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="验证操作">验证操作<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E9%AA%8C%E8%AF%81%E6%93%8D%E4%BD%9C" class="hash-link" aria-label="验证操作的直接链接" title="验证操作的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="主库">主库<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E4%B8%BB%E5%BA%93" class="hash-link" aria-label="主库的直接链接" title="主库的直接链接">​</a></h3>
<p>在主库执行：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; use db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Database changed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; create table t1(id int);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 0 rows affected (0.17 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; insert into t1(id) values(1),(2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 2 rows affected (0.04 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="从库">从库<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E4%BB%8E%E5%BA%93" class="hash-link" aria-label="从库的直接链接" title="从库的直接链接">​</a></h3>
<p>在从库查看数据同步情况</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; use db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Database changed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show tables;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Tables_in_db |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| t1           |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 row in set (0.00 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; select * from t1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| id   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|    1 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|    2 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2 rows in set (0.00 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="查看命令">查看命令<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-gtid-based-master-slave-replication#%E6%9F%A5%E7%9C%8B%E5%91%BD%E4%BB%A4" class="hash-link" aria-label="查看命令的直接链接" title="查看命令的直接链接">​</a></h2>
<p>可以通过 <code>show master status\G</code>，<code>show slave status\G</code> 查看状态，或定位一些问题</p>
<p>可以能改过 <code>stop slave;</code> &nbsp;<code>start slave;</code> 来停止复制。</p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="教程" term="教程"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Win10 - MySQL 8 Zip 版 - 搭建主从复制]]></title>
        <id>https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication</id>
        <link href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication"/>
        <updated>2021-02-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Win10 - MySQL 8 压缩版 - 主从复制]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="win10---mysql-8-压缩版---主从复制">Win10 - MySQL 8 压缩版 - 主从复制<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#win10---mysql-8-%E5%8E%8B%E7%BC%A9%E7%89%88---%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6" class="hash-link" aria-label="Win10 - MySQL 8 压缩版 - 主从复制的直接链接" title="Win10 - MySQL 8 压缩版 - 主从复制的直接链接">​</a></h2>
<blockquote>
<p>配置环境：Windows 10 - MySQL 压缩版</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="准备两个-mysql-服务实例">准备两个 MySQL 服务实例<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#%E5%87%86%E5%A4%87%E4%B8%A4%E4%B8%AA-mysql-%E6%9C%8D%E5%8A%A1%E5%AE%9E%E4%BE%8B" class="hash-link" aria-label="准备两个 MySQL 服务实例的直接链接" title="准备两个 MySQL 服务实例的直接链接">​</a></h2>
<p>8.0 压缩版下载地址：</p>
<blockquote>
<p><a href="https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.16-winx64.zip" target="_blank" rel="noopener noreferrer">https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.16-winx64.zip</a></p>
</blockquote>
<p>解压后再复制一份，假设命名为 <code>mysql-8.0.16-winx64</code> 和 <code>mysql-8.0.16-winx64-2</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="修改主-mysql-8的-myini">修改主 MySQL-8的 <code>my.ini</code><a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#%E4%BF%AE%E6%94%B9%E4%B8%BB-mysql-8%E7%9A%84-myini" class="hash-link" aria-label="修改主-mysql-8的-myini的直接链接" title="修改主-mysql-8的-myini的直接链接">​</a></h2>
<p>在 <code>mysql-8.0.16-winx64</code> 目录下添加 my.ini 文件，内容如下：</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">mysqld</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">basedir = ./</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">datadir = ./data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">port = 3306</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server_id = 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sql_mode=NO_ENGINE_SUBSTITUTION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">STRICT_TRANS_TABLES </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log_bin=mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">binlog</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">format=Row</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="修改从-mysql-8的-myini">修改从 MySQL-8的 <code>my.ini</code><a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#%E4%BF%AE%E6%94%B9%E4%BB%8E-mysql-8%E7%9A%84-myini" class="hash-link" aria-label="修改从-mysql-8的-myini的直接链接" title="修改从-mysql-8的-myini的直接链接">​</a></h2>
<p>在从 <code>mysql-8.0.16-winx64-2</code> 目录下添加 my.ini 文件，内容如下：</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">mysqld</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">basedir = ./</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">datadir = ./data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">port = 3316</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server_id = 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sql_mode=NO_ENGINE_SUBSTITUTION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">STRICT_TRANS_TABLES </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log_bin=mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">binlog</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">format=Row</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="初始化和启动数据库">初始化和启动数据库<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E5%90%AF%E5%8A%A8%E6%95%B0%E6%8D%AE%E5%BA%93" class="hash-link" aria-label="初始化和启动数据库的直接链接" title="初始化和启动数据库的直接链接">​</a></h2>
<p>空数据库需要初始化，分别在两个数据库的 <code>\bin</code> 目录下执行 <code>mysqld --initialize-insecure</code> 进行初始化。</p>
<p>分别启动主和从，在两个数据库的 <code>\bin</code> 目录下直接执行 <code>mysqld</code> 或 <code>start mysqld</code> 命令即可。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置主节点">配置主节点<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#%E9%85%8D%E7%BD%AE%E4%B8%BB%E8%8A%82%E7%82%B9" class="hash-link" aria-label="配置主节点的直接链接" title="配置主节点的直接链接">​</a></h2>
<p>用 <code>mysql</code> 命令登录到主节点：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql -uroot -P3306</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>进入后执行下面命令</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; CREATE USER 'repl'@'%' IDENTIFIED BY '123456';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 0 rows affected (0.11 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 0 rows affected (0.12 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; flush privileges;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 0 rows affected (0.10 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show master status;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| mysql-bin.000003 |      305 |              |                  |                   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 row in set (0.00 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>创建数据库：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">create schema db;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="主节点证书文件">主节点证书文件<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#%E4%B8%BB%E8%8A%82%E7%82%B9%E8%AF%81%E4%B9%A6%E6%96%87%E4%BB%B6" class="hash-link" aria-label="主节点证书文件的直接链接" title="主节点证书文件的直接链接">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; SHOW GLOBAL VARIABLES LIKE 'caching_sha2_password_public_key_path';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---------------------------------------+----------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Variable_name                         | Value          |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---------------------------------------+----------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| caching_sha2_password_public_key_path | public_key.pem |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---------------------------------------+----------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 row in set (0.00 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个文件在初始化之后位于 <code>\bin\data</code> 下</p>
<p>因为 MySQL 8 默认是用 <code>caching_sha2_password</code> 做认证插件，这点与 MySQL 5 不同：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">error connecting to master 'repl@localhost:3306' - retry-time: 60 retries: 18 message: Authentication plugin 'caching_sha2_password' reported error: Authentication requires secure connection.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个文件就是基于默认设置 <code>caching_sha2_password</code> 下的通讯公钥文件。默认情况服务器不会给客户端发送，所以需要拷贝到从节点的目录下。</p>
<p>如果不想拷贝的话 ：
MySQL 8.0 的版本要在<strong>从数据库</strong>初始设置（CHANGE MASTER TO）加：
<code>MASTER_PUBLIC_KEY_PATH = 'key_file_name'</code>
或者
<code>GET_MASTER_PUBLIC_KEY = {0|1}</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置从节点">配置从节点<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#%E9%85%8D%E7%BD%AE%E4%BB%8E%E8%8A%82%E7%82%B9" class="hash-link" aria-label="配置从节点的直接链接" title="配置从节点的直接链接">​</a></h2>
<p>把刚才的 <code>public_key.pem</code> 文件改名为 <code>master_public_key.pem</code> 然后拷贝到从服务器的 <code>\bin\data</code> 文件夹中，注意这个文件夹用上面的那个命令初始化之后才有。</p>
<p><code>mysql</code> 命令登录到从节点：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql -uroot -P3316</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>还记得刚刚在主库查看的表格吗？</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show master status;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| mysql-bin.000003 |      305 |              |                  |                   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------------------+----------+--------------+------------------+-------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 row in set (0.00 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>注意以下的 MASTER_LOG_POS 需要改成这个表格上 Position 的数值</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CHANGE MASTER TO</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_HOST='localhost',  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_PORT = 3306,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_USER='repl',      </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_PASSWORD='123456',   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_LOG_FILE='mysql-bin.000002',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_LOG_POS=855,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MASTER_PUBLIC_KEY_PATH='master_public_key.pem';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //MASTER_AUTO_POSITION = 1;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里有个问题，MySQL 8 下面不需要创建 db 。否则会报错说已经存在 db 。
--创建数据库：create schema db;--</p>
<p>直接开始执行同步
<code>start/stop slave;</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="验证操作">验证操作<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#%E9%AA%8C%E8%AF%81%E6%93%8D%E4%BD%9C" class="hash-link" aria-label="验证操作的直接链接" title="验证操作的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="主库">主库<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#%E4%B8%BB%E5%BA%93" class="hash-link" aria-label="主库的直接链接" title="主库的直接链接">​</a></h3>
<p>在主库执行：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; use db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Database changed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; create table t1(id int);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 0 rows affected (0.17 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; insert into t1(id) values(1),(2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 2 rows affected (0.04 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="从库">从库<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#%E4%BB%8E%E5%BA%93" class="hash-link" aria-label="从库的直接链接" title="从库的直接链接">​</a></h3>
<p>在从库查看数据同步情况</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; use db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Database changed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; show tables;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Tables_in_db |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| t1           |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 row in set (0.00 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; select * from t1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| id   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|    1 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|    2 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2 rows in set (0.00 sec)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="查看命令">查看命令<a href="https://solidspoon.xyz/blog/win10-mysql-8-zip-version-building-master-slave-replication#%E6%9F%A5%E7%9C%8B%E5%91%BD%E4%BB%A4" class="hash-link" aria-label="查看命令的直接链接" title="查看命令的直接链接">​</a></h2>
<p>可以通过 <code>show master status\G</code>，<code>show slave status\G</code> 查看状态，或定位一些问题</p>
<p>可以能改过 <code>stop slave;</code>  <code>start slave;</code> 来停止复制。</p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="教程" term="教程"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[一篇散文]]></title>
        <id>https://solidspoon.xyz/blog/an-essay</id>
        <link href="https://solidspoon.xyz/blog/an-essay"/>
        <updated>2021-02-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[樱花烂漫时节，一身利落的轻装，踏着新发的嫩草，悠悠的散步。]]></summary>
        <content type="html"><![CDATA[<p>樱花烂漫时节，一身利落的轻装，踏着新发的嫩草，悠悠的散步。</p>
<p>不知方向，不知目标，就只是静静的，慢慢的体会生活的美好，感悟生命的意义。听过一句话:人生总是太匆忙。的确，忙忙碌碌中，我们忽视了很多生活的美好。</p>
<p>草长莺飞,万物轮回。时间一点一滴，带走了我们的年少时光，回顾往昔，我们拥有什么?我们曾经拥有什么?跌跌撞撞的小学生活，恍恍惚惚的初中时代，坎坎坷坷的高中炼狱，仿佛都成为了泡沫，在阳光下消弭。现在的现在，我们拥有的只有当下。</p>
<p>如今，最重要的是梦想，是志向。很多人为了这些行走匆忙，但忽视了周围的风景。春意盎然，阳光微煦，微风轻暖。此时，踏一席春色，享无边烂漫。就像顾城说的那样:草在结它的种子，风在摇它的叶子。我们站着，不说话，就很美好。</p>
<p>这样单纯的美好，值得每个人记住。那么，在疾走的时候，为什么不停下来看看呢?在砥砺前行的同时，注意到周围的芬芳，人生会更加无憾。
所以，奔赴远方的少年啊，请在追寻未来的同时，把握住现在。你实现梦想的未来是很美好，但载歌载舞的如今，同样值得依恋。</p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[文章排版指南]]></title>
        <id>https://solidspoon.xyz/blog/article-formatting-guide</id>
        <link href="https://solidspoon.xyz/blog/article-formatting-guide"/>
        <updated>2021-02-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[我们日常看文章的时候，其实已经在慢慢积累我们的审美意识，我们能分辨，哪篇推文看着舒服，哪篇文章看着辣眼睛。为了减少这种「辣眼睛」的情况出现，今天我就来谈谈关于文章排版的事情。]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>我们日常看文章的时候，其实已经在慢慢积累我们的审美意识，我们能分辨，哪篇推文看着舒服，哪篇文章看着辣眼睛。为了减少这种「辣眼睛」的情况出现，今天我就来谈谈关于文章排版的事情。</p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="博客排版">▎博客排版<a href="https://solidspoon.xyz/blog/article-formatting-guide#%E5%8D%9A%E5%AE%A2%E6%8E%92%E7%89%88" class="hash-link" aria-label="▎博客排版的直接链接" title="▎博客排版的直接链接">​</a></h3>
<p>写博客的同学都知道，现在博客都是由 Markdown 排版。如果你还不知到 Markdown 的话就去学习一下吧，它可以很方便地帮助我们排版出漂亮的文章。但我们在写博文的时候，仍有一些细节是需要注意的。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-空格">1. 空格<a href="https://solidspoon.xyz/blog/article-formatting-guide#1-%E7%A9%BA%E6%A0%BC" class="hash-link" aria-label="1. 空格的直接链接" title="1. 空格的直接链接">​</a></h4>
<p>每次看到网页上的中文字和英文、数字、符号挤在一起，就会坐立不安，忍不住想在他们之间加个空格。</p>
<ul>
<li>
<p>中英文之间需要加空格</p>
<p><em>eg</em>. 大家可以微信搜一搜 solidSpoon 关注我。</p>
</li>
<li>
<p>中文与数字之间需要加空格</p>
<p><em>eg</em>. 不知不觉，我已经写博客 3 个月了。</p>
</li>
<li>
<p>数字与单位之间需要加空格</p>
<p><em>eg</em>. 我昨天买了一个 16 GB 的 U 盘。</p>
</li>
<li>
<p>完整的英文整句时标点后要加空格。</p>
<p><em>eg</em>. Love me, love my dog.</p>
</li>
</ul>
<p><strong>但是也有一些例外。</strong></p>
<ul>
<li>
<p>度的标志、百分号不加空格</p>
<p><em>eg</em>. 水的沸点是 100°。</p>
<p><em>eg</em>. 我的手机还有 75％ 的电量。</p>
</li>
<li>
<p>全角标点与其他字符之间不加空格</p>
<p><em>eg</em>. 大家好，我是 solidSpoon，欢迎访问我的博客。</p>
</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-标点">2. 标点<a href="https://solidspoon.xyz/blog/article-formatting-guide#2-%E6%A0%87%E7%82%B9" class="hash-link" aria-label="2. 标点的直接链接" title="2. 标点的直接链接">​</a></h4>
<p>说到标点，不得不说下全角和半角，很多人可能不了解全角和半角的概念，这里顺便介绍下。</p>
<p>全角和半角是英文和中文的编码规范不同遗留下的问题，简单来说，全角占两个字节，半角占一个字节，你可以理解成中文汉子是全角，英文字母是半角，不过半角全角主要是针对标点符号来说的，中文标点占两个字节，英文标点占一个字节。体现在排版上的差异就是，全角字符屏幕打印宽度是两个，而半角字符屏幕打印宽度是一个，如中文逗号和英文逗号他们的显示分别是「，」和「,」。</p>
<ul>
<li>
<p>使用全角中文标点</p>
<p>中文排版中所有的标点都应该使用中文全角中文标点</p>
<p><em>eg</em>. 大家好，我是 solidSpoon。</p>
</li>
<li>
<p>遇到英文整句、特殊名词时使用半角标点。</p>
<p><em>eg</em>. 乔布斯说过：「Stay hungry, stay foolish.」</p>
<p><em>eg</em>. Facebook, Inc.</p>
</li>
<li>
<p>使用直角引号</p>
<ul>
<li>
<p>我国国家标准要求弯引号，但是个人建议在新媒体排版时使用直角引号。</p>
<p><em>eg</em>. 「我去吃饭了」，它起身说到。</p>
</li>
<li>
<p>如果引号再使用引号使用直角双引号。</p>
<p><em>eg</em>. 我对他说：「乔布斯说过：『Stay hungry, stay follish.』」</p>
</li>
</ul>
</li>
</ul>
<p><strong>微软拼音输入特殊符号方法：</strong></p>
<p>首先在中文输入界面输入 <code>u</code> 进入「u 模式输入」，然后跟着屏幕提示就可以找到你要输入的特殊符号了。</p>
<ul>
<li><em>eg</em>. 中文界面输入 <code>uubd</code> 就可以找到直角引号。</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="3-其他">3. 其他<a href="https://solidspoon.xyz/blog/article-formatting-guide#3-%E5%85%B6%E4%BB%96" class="hash-link" aria-label="3. 其他的直接链接" title="3. 其他的直接链接">​</a></h4>
<p>除以上之外，还有一些其他标准推荐大家使用的。</p>
<ul>
<li>
<p>英文名词首字母尽量大写</p>
<p>eg. Google、Android、Facebook</p>
</li>
<li>
<p>专有名词使用正确的大小写</p>
<p>eg. GitHub、iOS、iPhone XS Max、MacBook Pro</p>
</li>
<li>
<p>首行不要缩进</p>
</li>
</ul>
<p>关于首行不缩进可能有人不太同意，但是我要在这里解释下，在说明之前我们必须弄明白「首行缩进」的目的是什么。</p>
<p>「每段之前空两格」是我们从小学写作文就养成的习惯，也是正式文体的格式要求，其目的是为了区分自然段。</p>
<p>但是像我们现在接触的阅读，都是没有固定的格式要求的，如微信公众号、电子文档等，所以大家一般都采用「空出一行」进行自然段与自然段之间的区分，这种写作方式非常省事，而且很整齐。</p>
<p>所以，我认为这种应该是最科学的方式，只要没有明确的格式要求，写作的排版无须首行缩进。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="公众号排版">▎公众号排版<a href="https://solidspoon.xyz/blog/article-formatting-guide#%E5%85%AC%E4%BC%97%E5%8F%B7%E6%8E%92%E7%89%88" class="hash-link" aria-label="▎公众号排版的直接链接" title="▎公众号排版的直接链接">​</a></h3>
<p>用 Markdown 写作的确很方便。那么对于「不那么方便」的微信公众号，除了上面的那些外，又有什么是需要注意的呢？</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-�大小">1. 大小<a href="https://solidspoon.xyz/blog/article-formatting-guide#1-%E5%A4%A7%E5%B0%8F" class="hash-link" aria-label="1. 大小的直接链接" title="1. 大小的直接链接">​</a></h4>
<p>简单来说就是：标题要比正文大，正文要比标注大。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-颜色">2. 颜色<a href="https://solidspoon.xyz/blog/article-formatting-guide#2-%E9%A2%9C%E8%89%B2" class="hash-link" aria-label="2. 颜色的直接链接" title="2. 颜色的直接链接">​</a></h4>
<p>颜色搭配保持统一，个别字体使用特殊色强调，字体颜色尽量不超过三种，颜色不要选取太亮的颜色，例如纯黑，纯红，亮红配亮绿，都是不建议的，看久了眼睛难免会疲惫，不利于阅读。</p>
<p><strong>建议使用字体颜色：</strong></p>
<ul>
<li>标题：使用公众号常用色，或者直接取 logo 或者行业色</li>
<li>正文：选择亮度没这么高的字体，这是纯黑 <code>#000000</code> ，比较偏灰会更加适合阅读 <code>#595757</code> <code>#3f3f3f</code> 等</li>
<li>批注：选择比正文亮度还低，更加浅的浅灰色，例如 <code>#595959</code> <code>#888888</code> <code>#d6d6d6</code></li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="3-形态">3. 形态<a href="https://solidspoon.xyz/blog/article-formatting-guide#3-%E5%BD%A2%E6%80%81" class="hash-link" aria-label="3. 形态的直接链接" title="3. 形态的直接链接">​</a></h4>
<p>和 word 编辑一样，公众号文字形态也可以做一些基本变化，例如 <strong>加粗</strong>、<em>斜体</em>、<u>下划线</u>、<del>删除线</del> 等，常用的是加粗，以及有趣（戏多）的删除线。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="4-对齐">4. 对齐<a href="https://solidspoon.xyz/blog/article-formatting-guide#4-%E5%AF%B9%E9%BD%90" class="hash-link" aria-label="4. 对齐的直接链接" title="4. 对齐的直接链接">​</a></h4>
<p>对齐，可以说是拯救强迫症的最佳设置。这里推荐对齐方式为：<strong>两端对齐</strong>。</p>
<p>我们日常排版完会发现，因为句子的字符大小的原因，每行的最右边都会变得层次不齐，强迫症看着会非常的不舒服，这时候如果我们选择两端对齐，就会美观的多。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="5-小符号">5. 小符号<a href="https://solidspoon.xyz/blog/article-formatting-guide#5-%E5%B0%8F%E7%AC%A6%E5%8F%B7" class="hash-link" aria-label="5. 小符号的直接链接" title="5. 小符号的直接链接">​</a></h4>
<p>就像前面对标题的处理一样，简单的符号也能划分空间，也要常用引号，以此突出重点等</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="6-留白">6. 留白<a href="https://solidspoon.xyz/blog/article-formatting-guide#6-%E7%95%99%E7%99%BD" class="hash-link" aria-label="6. 留白的直接链接" title="6. 留白的直接链接">​</a></h4>
<p>在经过了文字的排版以后，整个版面的风格已经出来了，但是我们会发现，推文里字句的间距太密了，看久了眼睛很不舒服。其实，这都是因为：<u>没有留白，没有呼吸感</u>。</p>
<p>留白可以包括：</p>
<ul>
<li>页面边距</li>
<li>段 / 字 / 行间距</li>
<li>缩进</li>
<li>空行</li>
</ul>
<p><strong>页面边距</strong></p>
<p>页面边距指的是推文与手机屏幕两侧的距离。</p>
<p>默认距离是 0，我们可以设置，让文字离屏幕远一点。我个人建议页边距设置为 0.5，或者 1，比较舒服。</p>
<p><strong>段距</strong></p>
<p>段落与段落之间，图片与文字之间，都可以使用段前距、段后距进行调整距离，当然也可以使用空格代替。</p>
<p><strong>字间距</strong></p>
<p>字体之间的距离太密，容易让人错过重点内容，调整文字间距会有意想不到的效果，呼吸感瞬间有了。和字间距一样，行间距是解放原有行与行之间的重要一步。</p>
<ul>
<li>推荐参数：行间距 1.5 ~ 1.75、字间距 1</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="7-图片与表情包">7. 图片与表情包<a href="https://solidspoon.xyz/blog/article-formatting-guide#7-%E5%9B%BE%E7%89%87%E4%B8%8E%E8%A1%A8%E6%83%85%E5%8C%85" class="hash-link" aria-label="7. 图片与表情包的直接链接" title="7. 图片与表情包的直接链接">​</a></h4>
<p>适当的图片和表情可以增加阅读的兴趣</p>
<p><strong>浮动设置</strong></p>
<p>有的时候，我们会看到很多公众号通篇都是长图，而我们上传多图的时候，要么是图片太大上传不了，要么就是多图的时候出现空隙。这时候我们就只要让图片浮动就可以解决这个问题。</p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[搭建简单好用的笔记系统]]></title>
        <id>https://solidspoon.xyz/blog/building-a-simple-and-user-friendly-note-taking-system</id>
        <link href="https://solidspoon.xyz/blog/building-a-simple-and-user-friendly-note-taking-system"/>
        <updated>2021-02-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[你是不是也一直觉得 OneNote、印象笔记、有道云笔记等等工具用起来都有一点不太舒服。我只想用一个简单方便，到哪都能用的笔记系统，但是市面上常见的笔记软件越来越臃肿，小众良心的软件又担心它会不会死掉，这里我给你提供一个思路。]]></summary>
        <content type="html"><![CDATA[<p>你是不是也一直觉得 OneNote、印象笔记、有道云笔记等等工具用起来都有一点不太舒服。我只想用一个简单方便，到哪都能用的笔记系统，但是市面上常见的笔记软件越来越臃肿，小众良心的软件又担心它会不会死掉，这里我给你提供一个思路。</p>
<p>如果你想要一个全平台通用的、适合记笔记的文件格式，那么 Markdown 应该是一个不错的选择。Markdown 的语法简单、排版漂亮，配合像 Typora 这种优雅的编辑器能够在电脑端实现很棒的体验。</p>
<p>当然，Markdown 也有它的缺点。由于这种文件格式本身并不能保存图片，导致 Markdown 的使用者常常要自己想办法来解决全平台使用图片的问题。其中最省心的办法就是在类似阿里云、腾讯云这样大型的云服务商购买存储服务，配合 PicGo 这种小工具自己搭建一个图床，操作简单而且质量可靠。</p>
<p>更具体的操作方法你可以去搜索『阿里云 图床』这样的关键词。最后，使用坚果云这种全平台可用的同步盘来同步你的 Markdown 笔记。而且坚果云也有 Markdown 小工具，在手机和网页端浏览 Markdown 文件也比较方便。</p>
<p>希望你也喜欢这样的一种解决方案。</p>
<hr>
<p>题图由<a href="https://pixabay.com/zh/users/Monfocus-2516394/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1925752">Monfocus</a>在<a href="https://pixabay.com/zh/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1925752">Pixabay</a>上发布</p>
<p><img loading="lazy" src="https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20200524165524.jpg" alt="list-1925752_1920" class="img_ev3q"></p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="效率" term="效率"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git 是纯函数式数据结构]]></title>
        <id>https://solidspoon.xyz/blog/git-is-a-purely-functional-data-structure</id>
        <link href="https://solidspoon.xyz/blog/git-is-a-purely-functional-data-structure"/>
        <updated>2021-02-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[最近一直在学习 Git，但是一直不知道它的原理是什么，直到看到国外的一个大牛的博客。这篇博文给了我很大的启发，所以翻译过来和大家分享。]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>最近一直在学习 Git，但是一直不知道它的原理是什么，直到看到国外的一个大牛的博客。这篇博文给了我很大的启发，所以翻译过来和大家分享。</p>
</blockquote>
<blockquote>
<p><a href="https://blog.jayway.com/2013/03/03/git-is-a-purely-functional-data-structure/" target="_blank" rel="noopener noreferrer">原文链接</a></p>
</blockquote>
<p>虽然近几年像 Git 这种分布式版本管理系统很火，但它看起来还是比像 SVN 这样的集中式版本控制系统复杂。我猜这可能是因为我们总是会把二者相比较：在 SVN 中这样做，但在 Git 中却需要那样做。</p>
<p>我认为 Git 的真实含义应该是<strong>一个纯粹的函数式据结构</strong>。所以，如果你在学习熟练地使用 Git，那你也就是在学习处理数据结构。那么我们就先来探讨一下纯函数式数据结构。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="不变性">不变性<a href="https://solidspoon.xyz/blog/git-is-a-purely-functional-data-structure#%E4%B8%8D%E5%8F%98%E6%80%A7" class="hash-link" aria-label="不变性的直接链接" title="不变性的直接链接">​</a></h3>
<p>函数式编程中一个很重要的概念就是不变性( immutablity )。就是说一个对象的状态在构造完成以后不可改变</p>
<p>比如有一个典型列表 <code>[3,2,1]</code>。如果这个列表是可变的，我们可以在他的头部插入一个元素4，即 <code>[4,3,2,1]</code>。现在它变成了一个全新的列表，之前的那个列表丢失了。如果此时其他的小伙伴也在操作这个列表，他们便会不幸地得到一个异常.</p>
<p>而函数式编程便不会发生这种情况。因为当我们在列表头部插入 <code>4</code> 时，它会创建一个新列表 <code>[4,3,2,1]</code>，而不会修改原始列表。所以两个列表会同时存在。</p>
<p>可是如果我们每次迭代这个列表都会生成一个全新的列表，这样不仅浪费，而且效率很低啊。</p>
<p>实际上，函数式数据结构的效率在很大程度上取决于对它们执行的操作。对于刚刚那种（单链接）列表，如果我们只是想在它的头部插入数据，完全可以用更有效率的方法：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  +---+    +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  | 4 +---&gt;+ 3 +---&gt;+ 2 +---&gt;+ 1 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  +---+    +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    |        |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">new list  original</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>我们将新元素 <code>4</code> 放在一个新节点中，并将它指向列表的其余部分。你看，之前的列表得到了复用，之前我们发现的那些问题全都解决了。</p>
<p>可是如果其他人想要在 <code>[3,2,1]</code> 之前插入 <code>9</code> 呢？当然也可以用这个方法啦：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">              +---+      +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">new list 1 -&gt; | 4 +---+-&gt;+ 3 +---&gt;+ 2 +---&gt;+ 1 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              +---+  /   +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    /      |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              +---+/    original</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">new list 2 -&gt; | 9 +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              +---+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>我们当然也可以将这样的元素存储为可变列表（non-immutable list），但是这很危险。假如我们更新列表中的元素 <code>[3]</code>，那部分可是公共的，你的修改会影响到他人，那些需要 <code>[9,3,2,1]</code> 列表的人可不喜欢你这么干。</p>
<p>但是......如果我确实需要将元素 <code>3</code> 变成 <code>5</code>，该怎么办？还是用老方法啊：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">                +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">updated list -&gt; | 4 +---&gt;+ 5 +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                +---+    +---+\    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                               \    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                +---+    +---+  \ +-+-+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  new list 1 -&gt; | 4 +---&gt;+ 3 +---&gt;+ 2 +---&gt;+ 1 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                +---+  / +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                      /    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                +---+/  original</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  new list 2 -&gt; | 9 +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                +---+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>你看，它现在可以表示四个列表：</p>
<ul>
<li>最初的的列表 <code>[3,2,1]</code></li>
<li>list 1 <code>[4,3,2,1]</code></li>
<li>list 2 <code>[9,3,2,1]</code></li>
<li>list 2 <code>[4,5,2,1]</code></li>
</ul>
<p>纯函数数据结构在多线程编程中非常有用，因为来自不同线程的更改不会相互干扰。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="和-git-的关系">和 Git 的关系<a href="https://solidspoon.xyz/blog/git-is-a-purely-functional-data-structure#%E5%92%8C-git-%E7%9A%84%E5%85%B3%E7%B3%BB" class="hash-link" aria-label="和 Git 的关系的直接链接" title="和 Git 的关系的直接链接">​</a></h3>
<p>可是，我们之前讨论的不变性和 Git 的版本控制功能有什么关系呢？那我们就一起来对比以下它们俩的异同吧。</p>
<ul>
<li>在版本控制系统中我们想要完成的是：<!-- -->
<ol>
<li>使用新版本的文件更新我们的代码仓管库，旧版本文件也要保留。</li>
<li>当你和你的小伙伴门在同一个个代码库上进行协作时，不会以不可预测的方式相互干扰。</li>
</ol>
</li>
<li>不可变的数据结可以：<!-- -->
<ol>
<li>更新数据结构的同时保留老的数据结构。</li>
<li>在一个线程中对数据结构更改不会影响到其他线程</li>
</ol>
</li>
</ul>
<p>怎么样，是不是觉得它们俩很像。</p>
<p>事实上，我门甚至可以说 Git 基本上就是是一个纯粹的函数式数据结构，让你使用命令行客户端在其上执行操作。</p>
<p>要完成这个类比，我们需要把上面的数字替换成 Commit。</p>
<p>Git commints 是工作历史中特定时间点的全部工作状态的独立副本，即工作目录的完整快照。我们可以把示例中的链表看成是 Git 中的历史记录。</p>
<p>比如说我们有一个代码仓库，它的 <code>master</code> 分支包含三个按顺序的 commit : <code>A</code>，<code>B</code>，<code>C</code>。也就是我们让 Git 在整个开发过程中完整地存储了我们的工作目录三次。</p>
<p>这就是历史纪录啊，用图说话：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">+---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+ C +---&gt;+ B +---&gt;+ A |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">master</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="git-commit">Git commit<a href="https://solidspoon.xyz/blog/git-is-a-purely-functional-data-structure#git-commit" class="hash-link" aria-label="Git commit的直接链接" title="Git commit的直接链接">​</a></h3>
<p>当我们执行 commit 的时候，这就可以类比成我们将一个数据提交到了这个历史纪录的开头。而 Git 甚至用 <code>HEAD</code> 代表当前的 commit。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">+---+    +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+ D +---&gt;+ C +---&gt;+ B +---&gt;+ A |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---+    +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  |        |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">master   master^</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当 Git 执行 commit 时，它会移动当前分支指针，将 <code>master</code> 指向 <code>[D,C,B,A]</code>。我们仍然
可以通过名称 <code>master^</code> 指向 <code>[C,B,A]</code>，并且不会影响到其他人。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="git-amend">Git amend<a href="https://solidspoon.xyz/blog/git-is-a-purely-functional-data-structure#git-amend" class="hash-link" aria-label="Git amend的直接链接" title="Git amend的直接链接">​</a></h3>
<p>如果你使用过 Git，你或许知道可以使用 <code>commit --amend</code> 来更新最近一次的 commit  ，但你真的可以更新 commit 吗？</p>
<p>事实上，你不能。Git 只是创建一个新的 commit （下图中 E）并将 branch 指针指向它。你仍然可以使用 <code>git reflog</code> 命令看到它，并且可以通过它的 hash value 来引用（假设他的 hash value 是 ef4d34）。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">          +---+    +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ef4d34 -&gt; | D +--+&gt;+ C +---&gt;+ B +---&gt;+ A |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          +---+ /  +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               /     |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          +---+    master^</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">master -&gt; | E |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          +---+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="git-branch">Git branch<a href="https://solidspoon.xyz/blog/git-is-a-purely-functional-data-structure#git-branch" class="hash-link" aria-label="Git branch的直接链接" title="Git branch的直接链接">​</a></h3>
<p>如你所见，每次执行 <code>commit --amend</code> 时，实际上都会创建一个新分支。分支的唯一功能就是给我们能引用的 commit 起个名字。我们甚至可以使用 <code>git checkout -b branch ef3d34</code> 命令在那个被丢弃的 commit <code>ef3d34</code> 上创建一个新分支。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">          +---+    +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">branch -&gt; | D +--+&gt;+ C +---&gt;+ B +---&gt;+ A |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          +---+ /  +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               /     |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          +---+  master^</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">master -&gt; | E |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          +---+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>通常，我们通过为当前的工作流 <code>HEAD</code> 创建一个新名称来在 Git 中进行分支，但是如果你将 Git 理解为一个函数式数据结构，你就可以随心所欲地在这个树状图上的任何一个 commit 上创建分支了。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="git-rebase">Git rebase<a href="https://solidspoon.xyz/blog/git-is-a-purely-functional-data-structure#git-rebase" class="hash-link" aria-label="Git rebase的直接链接" title="Git rebase的直接链接">​</a></h3>
<p>当我们在上边的示例列表中更新一个节点时,我们必须把列表中的每个节点添加到在更新后的元素之前（在我们的示例中，这是单个节点 <code>4</code>，但可以是任意数量的节点）。在 Git 中，这称为重新提交（replaying commits），执行此操作的命令称为变基（rebase）。要更新旧提交，我们添加 <code>-i</code> 参数来执行一个在 Git 中称被叫做「交互式 rebase」的操作。</p>
<p>比如说，我们想要用一个新的 commit message 来更新 commit <code>C</code>。我们需要切换到 commit <code>D</code>，然后输入 <code>git rebase -i c</code> 。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; git checkout D</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; git rebase -i C</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在窗口中包含一下内容：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pick cd3ff32 &lt;C's commit message&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pick a65a671 &lt;D's commit message&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># some helpful comments from git</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果我们想编辑 cimmit <code>C</code>，Git 允许我们在重放后续提交之前编辑该提交。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">edit cd3ff32 &lt;C's commit message&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pick a65a671 &lt;D's commit message&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当我们保存文件并关闭它时，Git 会开始一个 rebase 。它会在 commit <code>C</code> 停止，这样我们可以修改它。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Stopped at cd3ff32... &lt;C's commit message&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">You can amend the commit now, with</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        git commit --amend</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Once you are satisfied with your changes, run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        git rebase --continue</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>窗口中的消息说明了一切。我们可以根据需要随意编辑 commit 后我们调用 <code>commit --amend</code> 创建更新的 commit，然后使用「继续 rebase」指令： <code>git rebase --continue</code>。
当我们选择命令时，其余的 commit 将一个接一个地重放 <code>pick</code>（除非最终发生了合并冲突，在这种情况下 Git 会停止并在你修复它之后才能继续）。我们的完整存储库现在就像下边这样。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">          +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rebased -&gt;| D'+---&gt;+ C'+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                         </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          +---+    +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">branch -&gt; | D +--+&gt;+ C +---&gt;+ B +---&gt;+ A |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          +---+ /  +---+    +---+    +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               /     |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          +---+  master^</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">master -&gt; | E |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          +---+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>我希望上面的图会让你觉得熟悉。希望你也能明白为什么 Git 的 rebase 命令会创建所有新的 commit。Git 是一个函数式数据结构，它不允许更改现有的 commit。</p>
<p>由于 rebase 引入了一个新的提交链，所以我们一定希望能够对这个新链的外观进行必要的且任意的控制。我们可以用 <code>rebase -i</code> 来重新排序，压缩或删除提交，或者随意拉入新的提交，比如把一个 commit 分成几部分，或者从存储仓库中的其他位置开始（使用 <code>--onto</code> 参数）。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="git-merge">Git merge<a href="https://solidspoon.xyz/blog/git-is-a-purely-functional-data-structure#git-merge" class="hash-link" aria-label="Git merge的直接链接" title="Git merge的直接链接">​</a></h3>
<p>现在我们来谈谈合并把。Git 允许我们将两个分支合并为一个</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --+ X |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---+/  +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| M |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---+   +---+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --+ Y |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        +---+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>合并給我们的模型带来了更多的复杂性。它把我们的历史从一个树状图变成了一个非循环图。这并没有太大的改变，但请注意，虽然 rebase 听起来复杂，但只有 merge 命令带来了额外的概念复杂性。</p>
<p>可以通过在新方向上应用新提交来理解 Rebase 。合并是一种根本不同的操作。一个数据结构，一个你可以将两个部分像这样组合成数据结构一个特殊的名称：我们称它 confluently persistent。（函数式数据结构也叫 persistent。我避免使用
这个术语，所以你不要将它与像物理光盘这样的持久性媒体上的存储概念混淆。）</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="结论">结论<a href="https://solidspoon.xyz/blog/git-is-a-purely-functional-data-structure#%E7%BB%93%E8%AE%BA" class="hash-link" aria-label="结论的直接链接" title="结论的直接�链接">​</a></h3>
<p>Git可以看成是一个相当简单的函数式数据结构。与其把Git描述成一个版本控制系统，不如说版本控制是“不变性”数据结构的一个自然属性。。我认为以这种方式谈论 Git 能更准确地传达 Git 的简单性和威力，而不是与集中式版本控制系统相比能完成什么。</p>
<p>如果以这种方式来思考的话，Git 在概念上比 SVN, CVS 等要简单。 大家认为 Git 更加复杂可能是因为这种复杂性能支持更有趣的 workflow。</p>
<p>如果你曾经觉得 Git 令人生畏，那请记住它的简单结构，以及在函数式结构中，
插入其中的任何东西都不会真正丢失，并且可以被恢复。（检查你的 <code>reflog</code>）</p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="翻译" term="翻译"/>
        <category label="Git" term="Git"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[怎么直观地给网页「P 图」]]></title>
        <id>https://solidspoon.xyz/blog/how-to-visually-edit-web-page-elements</id>
        <link href="https://solidspoon.xyz/blog/how-to-visually-edit-web-page-elements"/>
        <updated>2021-02-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[你肯定知道在浏览器中按下 F12 打开开发者工具，在其中修改源代码就可以更改网页上的任意内容。那么有没有办法可以不看源码，通过「所见即所得」的方式直接在页面上修改呢]]></summary>
        <content type="html"><![CDATA[<p>你肯定知道在浏览器中按下 F12 打开开发者工具，在其中修改源代码就可以更改网页上的任意内容。那么有没有办法可以不看源码，通过「所见即所得」的方式直接在页面上修改呢</p>
<p><img loading="lazy" src="https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201215204850.gif" alt="演示" class="img_ev3q"></p>
<p>下面这两个属性可以帮助我们实现这一想法：</p>
<ol>
<li>使用 <code>contentEditable</code> 属性</li>
<li>使用 <code>designMode</code> 属性</li>
</ol>
<p>这两个属性用来帮助开发人员创建网页端的富文本编辑器，因此如果我们将整个网页都应用这两个属性，都可以达到可视化编辑网页的效果。</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">contentEditable</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'true'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">designMode</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'on'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>designMode</code> 是 document 级别的属性</p>
<p><code>contentEditable</code> 是元素级别的属性</p>
<p>当一个 HTML 文档被切换到 designMode 时，我们就可以使用 <code>document.execCommand</code> 方法，我们可以通过这个方法对文档中的内容添加<strong>粗体</strong>、<em>斜体</em>、缩进、对某段文字添加一个链接等等。</p>
<p>例如，下面的代码就会给选中的文本加上链接</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">execCommand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"CreateLink"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token string" style="color:#e3116c">"http://www.baidu.com"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>使用这些方法，我们就可以很容易的用可视化的方式改网页了。当然，你肯定不想在控制台敲这么长的命令，所以找一些可以在浏览器运行脚本的软件来简化这个过程。</p>
<p>这儿有一个简单的示例希望可以帮助到你</p>
<p><a href="https://getquicker.net/sharedaction?code=f7db1234-2681-4c6a-82a4-08d83ad18965" target="_blank" rel="noopener noreferrer">https://getquicker.net/sharedaction?code=f7db1234-2681-4c6a-82a4-08d83ad18965</a></p>
<p><img loading="lazy" src="https://ced-md-picture.oss-cn-beijing.aliyuncs.com/img/20201215213916.gif" alt="" class="img_ev3q"></p>]]></content>
        <author>
            <name>solidSpoon</name>
            <uri>https://github.com/solidSpoon</uri>
        </author>
        <category label="教程" term="教程"/>
    </entry>
</feed>